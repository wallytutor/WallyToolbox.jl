{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "SIF",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#strings"
	    },
		{
			"include": "#fields"
		},
		{
			"include": "#sections"
		},
		{
			"include": "#fieldsbackref"
		},
		{
			"include": "#datatypes"
		},
		{
			"include": "#options"
		},
		{
			"include": "#moretags"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.line.tdb",
					"match": "!.*"
				}
			]
		},
		"numbers": {
			"patterns": [
				{
					"name": "constant.numeric",
					"match": "((([+-]\\s*)|(\\b))((\\d+(\\.\\d+)?)|(\\.\\d+)))(\\s*[eE]([+-]\\s*)?((\\d+(\\.\\d+)?)|(\\.\\d+)))?\\b"
				}
			]
		},
		"operators": {
			"patterns": [
				{
					"name": "keyword.control.operator",
					"match": "[-\\*/\\\\+=]"
				},
				{
					"name": "keyword.control.other",
					"match": "\\b(?i)(LN)\\b"
				}
			]
		},
		"strings": {
			"name": "string.ref.tdb",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.ref-strings.tdb",
					"match": "\\\\."
				}
			]
		},
		"datatypes": {
			"patterns": [
				{
					"name": "entity.name.class",
					"match": "\\b(Real|Integer|Logical|String|File)\\b"
				},
				{
					"name": "entity.name.class",
					"match": "\\b(MATC|cubic)\\b"
				}
			]
		},
		"options": {
			"patterns": [
				{
					"name": "entity.name.tag",
					"match": "\\b(Warn|Cartesian|BDF|Iterative|BiCGStab|ILU(\\d+)|Residual|Absolute(\\s+)Mass)\\b"
				},
				{
					"name": "entity.name.tag",
					"match": "\\b(Steady state|Transient)\\b"
				},
				{
					"name": "entity.name.tag",
					"match": "\\b(True|False)\\b"
				},
				{
					"name": "entity.name.tag",
					"match": "\\b(Always|After(\\s+)Timestep|After(\\s+)Simulation)\\b"
				},
				{
					"name": "entity.name.tag",
					"match": "\\b(Idealized|Diffuse(\\s+)Gray)\\b"
				},
				{
					"name": "entity.name.tag",
					"match": "\\b(Heat(\\s+)Equation|Advection(\\s+)Diffusion(\\s+)Equation)\\b"
				},
				{
					"name": "entity.name.tag",
					"match": "\\b(Flux(\\s+)and(\\s+)Gradient)\\b"
				},
				{
					"name": "entity.name.tag",
					"match": "\\b(SaveLine|SaveMaterials)\\b"
				}
			]
		},
		"sections": {
			"patterns": [
				{
					"name": "keyword.control.sif",
					"match": "\\b(Header|Simulation|Constants|Run(\\s+)Control|End)\\b"
				},
				{
					"name": "keyword.control.sif",
					"match": "\\b((Solver|Equation|Material|(Body(((\\s+)Force)?))|(Initial|Boundary)(\\s+)Condition|Component)(\\s+)(\\d+))\\b"
				}
			]
		},
		"fields": {
			"patterns": [
				{
					"meta": "Header",
					"name": "entity.name.function",
					"match": "\\b(CHECK(\\s+)KEYWORDS|Mesh(\\s+)DB|Include(\\s+)Path|Results(\\s+)Directory)\\b"
				},
				{
					"meta": "Constants",
					"name": "entity.name.function",
					"match": "\\b(Gravity)\\b"
				},
				{
					"meta": "Constants",
					"name": "entity.name.function",
					"match": "\\b(Stefan(\\s+)Boltzmann)\\b"
				},
				{
					"meta": "Constants",
					"name": "entity.name.function",
					"match": "\\b(Permittivity(\\s+)of(\\s+)Vacuum)\\b"
				},
				{
					"meta": "Constants",
					"name": "entity.name.function",
					"match": "\\b(Permeability(\\s+)of(\\s+)Vacuum)\\b"
				},
				{
					"meta": "Constants",
					"name": "entity.name.function",
					"match": "\\b(Boltzmann(\\s+)Constant)\\b"
				},
				{
					"meta": "Constants",
					"name": "entity.name.function",
					"match": "\\b(Unit(\\s+)Charge)\\b"
				},
				{
					"meta": "Simulation",
					"name": "entity.name.function",
					"match": "\\b(((Solver(\\s+)Input|Post|Output)(\\s+)File)|(Restart(\\s+)(File|Position|Time)))\\b"
				},
				{
					"meta": "Simulation",
					"name": "entity.name.function",
					"match": "\\b(Max(\\s+)Output(\\s+)Level)\\b"
				},
				{
					"meta": "Simulation",
					"name": "entity.name.function",
					"match": "\\b(Coordinate(\\s+)(System|Mapping))\\b"
				},
				{
					"meta": "Simulation",
					"name": "entity.name.function",
					"match": "\\b(Simulation(\\s+)Type)\\b"
				},
				{
					"meta": "Simulation",
					"name": "entity.name.function",
					"match": "\\b(Steady(\\s+)State(\\s+)Max(\\s+)Iterations)\\b"
				},
				{
					"meta": "Simulation",
					"name": "entity.name.function",
					"match": "\\b(Output(\\s+)Intervals|Timestep(\\s+)intervals|Timestep(\\s+)Sizes|Timestepping(\\s+)Method)\\b"
				},
				{
					"meta": "Simulation",
					"name": "entity.name.function",
					"match": "\\b(BDF(\\s+)Order|Newmark(\\s+)Beta)\\b"
				},
				{
					"meta": "Equation",
					"name": "entity.name.function",
					"match": "\\b(Active(\\s+)Solvers|Concentration(\\s+)Units)\\b"
				},
				{
					"meta": "many",
					"name": "entity.name.function",
					"match": "\\b(Name|Save(\\s+)(Flux|Line)|Size)\\b"
					
				},
				{
					"meta": "Solver",
					"name": "entity.name.function",
					"match": "\\b(Flux(\\s+)(Coefficient|Variable)|Calculate(\\s+)Flux(\\s+)Magnitude)\\b"
				},
				{
					"meta": "Material",
					"name": "entity.name.function",
					"match": "\\b(Density)\\b"
				},
				{
					"meta": "Material",
					"name": "entity.name.function",
					"match": "\\b(Sound(\\s+)speed|Youngs(\\s+)modulus|Poisson(\\s+)ratio)\\b"
				},
				{
					"meta": "Material",
					"name": "entity.name.function",
					"match": "\\b(Heat(\\s+)Capacity|Heat(\\s+)Conductivity|Heat(\\s+)expansion(\\s+)Coefficient)\\b"
				},
				{
					"meta": "Material",
					"name": "entity.name.function",
					"match": "\\b(Concentration(\\s+)Diffusivity)\\b"
				},
				{
					"meta": "Boundary Condition",
					"name": "entity.name.function",
					"match": "\\b(Target(\\s+)Boundaries)\\b"
				},
				{
					"meta": "Boundary Condition",
					"name": "entity.name.function",
					"match": "\\b(((External(\\s+))?)(Concentration|Temperature))\\b"
				},
				{
					"meta": "Boundary Condition",
					"name": "entity.name.function",
					"match": "\\b((Heat|Mass)(\\s+)Transfer(\\s+)Coefficient)\\b"
				},
				{
					"meta": "Boundary Condition",
					"name": "entity.name.function",
					"match": "\\b(Temperature|Heat(\\s+)Flux|Emissivity)\\b"
				},
				{
					"meta": "Boundary Condition",
					"name": "entity.name.function",
					"match": "\\b(Radiation(((\\s+)(Boundary|Target Body))?))\\b"
				},
				{
					"meta": "Body",
					"name": "entity.name.function",
					"match": "\\b(Target(\\s+)Bodies)\\b"
				}
			]
		},
		"fieldsbackref": {
			"patterns": [
				{
					"name": "entity.name.type",
					"_match": "\\b(((=)(\\s+))*(Variable(\\s+)(\\w+,)))\\b",
					"match": "[^=]*(Variable)(\\s+)([0-9a-zA-Z]+((,(\\s+)[0-9a-zA-Z]+))?)\\n$"
				},
				{
					"meta": "Solver (comes later because refers to other fields!)",
					"name": "entity.name.function",
					"match": "\\b((Solver(\\s+)(\\d+))*(Equation|Target(\\s+)Variable|Variable|Procedure|Exec(\\s+)Solver|Stabilize|Optimize Bandwidth|Steady State Convergence Tolerance|Steady State Convergence Measure|Nonlinear System Convergence Tolerance|Nonlinear System Max Iterations|Nonlinear System Newton After Iterations|Nonlinear System Newton After Tolerance|Nonlinear System Relaxation Factor|Nonlinear System Convergence Measure|Linear System Solver|Linear System Iterative Method|Linear System Max Iterations|Linear System Convergence Tolerance|BiCGstabl polynomial degree|Linear System Preconditioning|Linear System ILUT Tolerance|Linear System Abort Not Converged|Linear System Residual Output|Linear System Precondition Recompute|Filename|Polyline(\\s+)Coordinates|Polyline(\\s+)Divisions|Parameter(\\s+)(\\d+)))\\b"
				},
				{
					"meta": "Body (comes later because refers to other fields!)",
					"name": "entity.name.function",
					"match": "\\b((Body(\\s+)(\\d+))*(Equation|Material|Initial(\\s+)condition))\\b"
				}
			]
		},
		"moretags": {
			"comment": "TODO: these should match any text (non-string) after equal", 
			"patterns": [
				{
					"name": "entity.name.tag",
					"match": "[^=]*(Concentration)\\n"
				},
				{
					"name": "entity.name.tag",
					"match": "[^=]*(Temperature)\\n"
				},
				{
					"name": "entity.name.tag",
					"match": "[^=]*(Heat(\\s+)(Capacity|Conductivity))\\n"
				},
				{
					"name": "entity.name.tag",
					"match": "[^=]*(Density)\\n"
				}
			]
		}
	},
	"scopeName": "source.sif"
}