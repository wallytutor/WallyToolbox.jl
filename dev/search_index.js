var documenterSearchIndex = {"docs":
[{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Formulations-of-heat-conduction","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Temperature-formulation","page":"Formulations of heat conduction","title":"Temperature formulation","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Before attempting to derive heat conduction equation in terms of enthalpy, it is worth warming up with its handling in temperature formulation. In this case, the equation is solved directly in terms of temperature as dependent variable which is also used in the governing potential (Fourier's law). This simple case is applicable to many engineering problems. First we formulate the problem with constant thermophysical properties before proceeding to variable density and specific heat.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Constant-thermophysical-properties","page":"Formulations of heat conduction","title":"Constant thermophysical properties","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Heat equation formulated with temperature as dependent variable applied to constant density rho and specific heat c_p can be stated as:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nrhoc_pfracpartialTpartialt=nablacdotp(knablaT)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Applying the divergence operator to the right hand side to a single coordinate and expanding the gradient term for different coordinate systems (cartesian, cylindrical, and spherical) leads to the following expressions. Notice that coordinate was expressed as r even in cartesian coordinates for homogeneity of notation in what follows.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nrhoc_pdfracpartialTpartialt=begincases\ndfracpartialpartialr\nleft(kdfracpartialTpartialrright)  textcartesian12pt\n\ndfrac1rdfracpartialpartialr\nleft(rkdfracpartialTpartialrright)  textcylindrical12pt\n\ndfrac1r^2dfracpartialpartialr\nleft(r^2kdfracpartialTpartialrright)  textspherical\nendcases\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Stated this way the problem can be reformulated with a simpler notation as","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nrhoc_pdfracpartialTpartialt=\ndfrac1betadfracpartialpartialr\nleft(betakdfracpartialTpartialrright)\nqquadtextwhereqquadbeta=\nbegincases\n1  textcartesian12pt\n\nr  textcylindrical12pt\n\nr^2  textspherical\nendcases\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"To proceed with the finite volume discretization we perform the integration of both sides of the equation over the relevant variables. The order of integration is chosen according to the nature of the derivative term, as discussed by (Patankar1980)[7]. Care must be taken in the definition of the space integration - which is non-trivial in cylindrical and spherical coordinates systems - and must be carried over the differential volume dV.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nint_Vint_0^tau\nrhoc_pdfracpartialTpartialtdtdV=\nint_0^tauint_V\nfrac1betadfracpartialpartialr\nleft(betakdfracpartialTpartialrright)dVdt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\ndV=\nbegincases\ndrdydz  textcartesian12pt\n\nrdrdthetadz  textcylindrical12pt\n\nr^2sinphidrdthetadphi  textspherical\nendcases\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"The components of volume integration not explicitly appearing in the 1-D differential formulation can be moved out of the integrand. For cartesian coordinates the terms leads to the area of the perpendicular plane; for cylindrical coordinates this corresponds to the azimuth and axial components and integration produces a factor 2piz; lastly, for spherical coordinates we have the polar and azimuth components moved out and a factor 4pi. Since these terms appear in both sides of the equation, they end by cancelling out.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nPhi=\nbegincases\nA=displaystyleint_0^Zint_0^Ydydz\n textcartesian12pt\n\n2piz=displaystyleint_0^zint_0^2pidthetadz\n textcylindrical12pt\n\n4pi=displaystyleint_0^piint_0^2pisinphidthetadphi\n textspherical\nendcases\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Applying the remaining component of differential volume to the equations lead to the following expressions. Notice that the meaning of beta is now clear:  it is simply the factor multiplying dr in the different coordinate systems. It will make the multiplied factor simplify in the right-hand side and appear back in the left-hand side. You should try performing this step by yourself to get a full insight of what is happening here. So far the equations remain formulated identically.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nint_s^nint_0^tau\nbetarhoc_pdfracpartialTpartialtdtdr=\ndisplaystyleint_0^tauint_s^n\ndfracpartialpartialr\nleft(betakdfracpartialTpartialrright)drdt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"In the above expression, instead of integrating over the full domain, we applied limits over the north and south interfaces of a single finite volume cell (logically using a cell-centered formulation). Because beta is not time-dependent, we can effect the integration of the inner term and move out constant terms from the integrals, leading to:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nrhoc_pleft(T_P^tau-T_P^0right)int_s^nbetadr=\nint_0^tau\nleft(betakfracpartialTpartialrright)biggvert_s^ndt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"For simplicity, in what follows we use an unbounded first-order approximation scheme for space derivatives, i.e. they are approximated as:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nfracpartialTpartialrapproxfracT_i+1-T_idelta_ii+1\nqquadtextwhereqquad\ndelta_ii+1=r_i+1-r_i\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Applying a general Crank-Nicolson (Crank1996)[8] scheme we integrate numerically the right-hand side. The weighting factor f introduces the implicit degree: for f=1 we have a fully implicit solution, which f=0 represents a standard Euler integration. It should be self evident that sumf^(I)=1. Notice that the parenthetical superscript notation (I) does not imply exponentiation, but the instant at which the corresponding values are to be evaluated.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nfracrhoc_ptauleft(T_P^tau-T_P^0right)int_s^nbetadr=\nsum_I=0tau\n\nf^(I)left\n    beta_nk_n^(I)fracT_N^(I)-T_P^(I)delta_PN-\n    beta_sk_s^(I)fracT_P^(I)-T_S^(I)delta_PS\nright\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Integration of the remaining space integral is trivial given the definition of beta; to remain generic no matter what coordinate system we introduce the constant gamma. Notice that for cartesian coordinates this corresponds simply to the cell length and for other coordinate systems other relationships associated to cell volume can be interpreted.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nint_s^nbetadr=fracr_n^gammagamma-fracr_s^gammagamma\nqquadtextwhereqquadgamma=\nbegincases\n1  textcartesian12pt\n\n2  textcylindrical12pt\n\n3  textspherical\nendcases\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Putting it all together leads to the final expression:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nfracrhoc_ptauleft(T_P^tau-T_P^0right)\nleft(fracr_n^gammagamma-fracr_s^gammagammaright)=\nsum_I=0tau\nf^Ileft\n    beta_nk_n^IfracT_N^I-T_P^Idelta_PN-\n    beta_sk_s^IfracT_P^I-T_S^Idelta_PS\nright\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Some coefficients appearing in the above equations are now grouped. Notice that for thermal conductivity k which is a function of temperature, the corresponding instant (I) temperature must be used for its evaluation. For kappa_j the lower case j represents the evaluation at the interface with control volume J, a very specific notation used here.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginaligned\n    alpha_P   = fracrhoc_pgammatauleft(r_n^gamma-r_s^gammaright)8pt\n    kappa_j    = fracbeta_jk_jdelta_PJ\nendaligned\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Using these definitions the equation can be reworked as:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nalpha_Pleft(T_P^tau-T_P^0right)=\nsum_I=0tau\nf^(I)left\n    kappa_n^(I)left(T_N^(I)-T_P^(I)right)-\n    kappa_s^(I)left(T_P^(I)-T_S^(I)right)\nright\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"To get the matrix form of the problem we start by expanding all products. For conciseness we make f=f^(0) and g=f^(tau);  also everything that is evaluated at t=tau has the superscript dropped; using these ideas the expression is rewritten as:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\n-fkappa_sT_S+\n(alpha_P+fkappa_n+fkappa_s)T_P\n-fkappa_nT_N\n=\ngkappa_s^(0)T_S^(0)+\n(alpha_P-gkappa_n^(0)-gkappa_s^(0))T_P^(0)+\ngkappa_n^(0)T_N^(0)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"For the fully implicit time-stepping scheme f=1 the expression reduces to","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\n-kappa_sT_S+\n(alpha_P+kappa_n+kappa_s)T_P\n-kappa_nT_N\n=\na_P^(0)T_P^(0)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"where the following coefficients are identified","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginaligned\n    a_S  = -kappa_s8pt\n    a_N  = -kappa_n8pt\n    a_P  = alpha_P+kappa_n+kappa_s8pt\n    a_P^(0) = alpha_P\nendaligned\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"and the standard finite volume formalism discretization is reached","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\na_ST_S + a_PT_P + a_NT_N = a_P^(0)T_P^(0)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"The interested reader may wish to derive the boundary conditions to this case. We will refrain from that here because it will be done for the rather more general case in the following sections.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Variable-thermophysical-properties","page":"Formulations of heat conduction","title":"Variable thermophysical properties","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"To enter the variable thermophysical properties formulation it is worth saying a few words ahead of time about the next subject, the enthalpy formulation. That is because for variable density rho(T) and specific heat capacity c_p(T) under constant pressure the left-hand side of heat equation can be better expressed in terms of enthalpy H(T)=rho(T)h(T)=rho(T)c_p(T)T. Such a formulation is a requirement when dealing with phase change, such as solidification and melting - where we find discontinuities in enthalpy function; it is also needed in situations where material properties change above a certain degree for which constant properties could no longer be assumed over the foreseeable temperature range.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"info: Info\nIn practical applications, especially in high-dimensional problems coupled to fluid dynamics, it is worth performing a sensitivity analysis with different sampling points over rho(T)c_p(T) to determine whether solving the problem with temperature-dependent properties is really required. For most cases this can lead to impressive speed-ups in simulations.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Although of high practical relevance, it is almost incredible that most standard engineering textbooks ignore this sort of development. A recent paper by (Hristov2023)[9] tries to handle this sort of formalism analytically with properties expanded as simple temperature functions. Expanding the left-hand side of heat equation formulated in H(T) leads to","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nfracpartialHpartialt=\nrhoc_pfracpartialTpartialt+\nc_pTfracpartialrhopartialt+\nrhoTfracpartialc_ppartialt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"If (continuous) relationships for rho(T) and c_p(T) are available, it can be expanded to","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nfracpartialHpartialt=\nleft(\n\trhoc_p+\n\tc_pTfracpartialrhopartialT+\n\trhoTfracpartialc_ppartialT\nright)\nfracpartialTpartialt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"so that heat equation writes with the proper divergence operator as","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nleft(\n\trhoc_p+\n\tc_pTfracpartialrhopartialT+\n\trhoTfracpartialc_ppartialT\nright)\nfracpartialTpartialt=\nnablacdotp(knablaT)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"It is worth mentioning here, although we will not develop further for now, that in materials science and other fields, when involving a phase transformation kinetics described by an Avrami-like formalism such as discussed by (Shirzad2023)[10], we could end with a system of coupled partial differential equations. For instance, if density only is changed through an arbitrary kinetics f(trhoTdotT), the next (unrealistic) model would arise. In fact, as discussed by (Mittemeijer1988)[11], we should solve for a new non-equilibrium thermodynamic state beta for the kinetics and analytically evaluate a JMAK expression for density, but that is beyond our scope here (for now!).","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginalign\nleft(\n\trhoc_p+\n\trhoTfracpartialc_ppartialT\nright)fracpartialTpartialt\n=nablacdotp(knablaT)-c_pTfracpartialrhopartialt12pt\nfracpartialrhopartialt=f(trhoTdotT)\nendalign\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"The base development of the integral form of the heat equation in different coordinate systems being already treated in the previous sections, we use that result here to get","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nint_s^nint_0^tau\nbeta\nleft(\n\trhoc_p+\n\tc_pTfracpartialrhopartialT+\n\trhoTfracpartialc_ppartialT\nright)\ndfracpartialTpartialtdtdr=\ndisplaystyleint_0^tauint_s^n\ndfracpartialpartialr\nleft(betakdfracpartialTpartialrright)drdt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Solving left-hand side of this integral is non-trivial and we will skip it for now; consider then the non-expanded version of the enthalpy problem:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nint_s^nint_0^tau\nbeta\ndfracpartial(rhoc_pT)partialtdtdr=\ndisplaystyleint_0^tauint_s^n\ndfracpartialpartialr\nleft(betakdfracpartialTpartialrright)drdt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Next we integrate both sides of the equation at once and apply a fully implicit interpolation to the right-hand side; for the analogous details provided for constant thermophysical properties, please check the previous section. This leads to the following discrete equation:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nfracr_n^gamma-r_s^gammagammatau\nleft(rhoc_pT_P)-(rhoc_pT_P)^0right\n=\nbeta_nk_nfracT_N-T_Pdelta_PN-\nbeta_sk_sfracT_P-T_Sdelta_PS\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"where we can identify the following coefficients (not exactly the same as before!):","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginaligned\nalpha_P   = fracr_n^gamma-r_s^gammagammatau8pt\nkappa_j    = fracbeta_jk_jdelta_PJ\nendaligned\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\n-kappa_nT_N\n+(alpha_P(rhoc_p)^(star)+kappa_n+kappa_s)T_P\n-kappa_sT_S\n=\nalpha_P(rhoc_p)^(0)T_P^(0)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"where the following coefficients are identified","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginaligned\n    a_S  = -kappa_s8pt\n    a_N  = -kappa_n8pt\n    a_P  = alpha_P(rhoc_p)^(star)+kappa_n+kappa_s8pt\n    a_P^(0) = alpha_P(rhoc_p)^(0)\nendaligned\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"There are two main differences in the above coefficients with respect to the constant properties case: both a_P and a_P^(0) need to be updated. Since the previous case already considered variable thermal conductivity, it was intrinsically non-linear and solution should already be iterative. In that sense, using a (star) superscript in (rhoc_p)^(star) is not needed because the kappa already need to be updated on a iteration basis until time-step convergence; nonetheless, it was kept to emphasize the different in the present formulation. The final problem statement remains the same, say","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\na_ST_S + a_PT_P + a_NT_N = a_P^(0)T_P^(0)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Boundary-conditions","page":"Formulations of heat conduction","title":"Boundary conditions","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"TODO","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Special-cases-coordinates","page":"Formulations of heat conduction","title":"Special cases coordinates","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"For cylindrical and spherical systems, a condition for symmetry is that no flux traverses the center of the cylinder at r=0. That implies that south derivatives in discrete form of the equation must vanish to enforce dotq(0t)=0, so the first row of the problem is modified to","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\na_1T_P + a_NT_N = alpha_PT_P^0quadtextwherequada_1=alpha_P+beta_n\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\na_1T_P + a_NT_N = alpha_PT_P^0quadtextwherequada_1=alpha_P+beta_n\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Over the external radius r=R a Robin boundary condition is imposed. In this case the heat flux dotq=U(T_infty-T_P) takes the place of north term in FVM discretization and the equation writes","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\na_ST_S + a_RT_P = alpha_PT_P^0+UT_inftyquadtextwherequada_R=alpha_P+U+beta_s\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"It must be noted here that U=betah, where the actual heat transfer coefficient is h. This should be self-evident from a dimensional analysis.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"danger: Danger\nFrom here on everything is in draft mode.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Enthalpy-formulation","page":"Formulations of heat conduction","title":"Enthalpy formulation","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Enthalpy formulation is less trivial from the perspective that both sides of the equation do not use the same variable; balance is performed over enthalpy while driving force remains the temperature gradient (as per Fourier's law). In this case an extra step is added to the solution, solve a (generally) nonlinear equation for T=f(h). Quite often this is formulated as a root finding problem stated as h-hath(T)=0, where h represents the integrate enthalpy in a control volume and hath the provided function relating temperature to enthalpy. The equation is this case is stated as:","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nfracpartial(rhoh)partialt=nablacdotp(knablaT)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/#Spherical-coordinates-1-D","page":"Formulations of heat conduction","title":"Spherical coordinates 1-D","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"For computing the heating dynamics in a sphere, using the definition of divergence in spherical coordinates and using the gradient expansion over the radius we have","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nrhofracpartialhpartialt=\nfrac1r^2fracpartialpartialr\nleft(r^2kfracpartialTpartialrright)\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"This is now integrated over the differential volume dV as described in previous sections and for conciseness we skip that discussion. The integration over radial coordinate introduces the r^2dr factor from the differential volume and we get the final form of the equation to integrate.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nint_s^nint_0^tau\nrhofracpartialhpartialtr^2dtdr=\nint_0^tauint_s^n\nfracpartialpartialr\nleft(r^2kfracpartialTpartialrright)drdt\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"After effecting the inner integrations and moving out constant terms from the integrals and expanding the evaluation of the definite integral between control volume boundaries s and n and performing a Crank-Nicolson integration of the right-hand side one gets","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginalign\nfracrhotau\nleft(h_P^tau-h_P^0right)\nleft(fracr_n^33-fracr_s^33right)\n=fleft\nr_n^2k_nfracT_N^tau-T_P^taudelta_PN-\nr_s^2k_sfracT_P^tau-T_S^taudelta_PS\nright8pt\n+(1-f)left\nr_n^2k_nfracT_N^0-T_P^0delta_PN-\nr_s^2k_sfracT_P^0-T_S^0delta_PS\nright\nendalign\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Some coefficients appearing in the above equations are now grouped. Notice that for thermal conductivity k which is a function of temperature, the corresponding time-step temperature must be used for its evaluation. For beta_j the lower case j represents the evaluation at the interface with control volume J, what is a very specific notation.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginalign\nalpha_P   = fracrho3tauleft(r_n^3-r_s^3right)8pt\nbeta_j    = fracr_j^2k_jdelta_PJ\nendalign\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"For conciseness we make g=(1-f) and simplify the expression with the new coefficients as","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginalign\nalpha_Ph_P^tau-alpha_Ph_P^0\n\n=fbeta_nT_N^tau-f(beta_n+beta_s)T_P^tau-fbeta_sT_S^tau\n8pt\n+gbeta_nT_N^0-g(beta_n+beta_s)T_P^0-gbeta_sT_S^0\nendalign\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"For the fully implicit time-stepping scheme f=1 and making gamma_j^k=alpha_P^-1beta_j^k one gets","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nh_P^tau-h_P^0-gamma_n^kT_N^tauk+(gamma_n^k+gamma_s^k)T_P^tauk-gamma_s^kT_S^tauk=0\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"A condition for symmetry is that no flux traverses the center of the sphere at r=0. That implies that south derivatives in discretizes form of the equation must vanish to enforce dotq(0t)=0, so the first row of the problem is modified to","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nh_P^tau-h_P^0-gamma_n^kT_N^tauk+gamma_n^kT_P^tauk=0\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Over the external radius r=R a Robin boundary condition is imposed. In this case the heat flux dotq=U(T_infty-T_P) takes the place of north term in FVM discretization and the equation writes","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nh_P^tau-h_P^0-alpha_P^-1UT_infty+(alpha_P^-1U+gamma_s^k)T_P^tauk-gamma_s^kT_S^tauk=0\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"It must be noted here that U=R^2h, where the actual heat transfer coefficient is h. This should be self-evident from a dimensional analysis.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"This is no longer a linear problem and thus cannot be solved directly. We need now an strategy for solving this coupled system of nonlinear equations. The iterative solution of the problem is indicated in the above equations through the introduction of superscript k indicating the iteration number. One can rework the system as","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginalign\n-gamma_12^kT_2^tauk+gamma_12^kT_1^tauk+h_1^tau=h_1^0\ndots \n-gamma_n^kT_N^tauk+(gamma_n^k+gamma_s^k)T_P^tauk-gamma_s^kT_S^tauk+h_P^tau=h_P^0\ndots \n(alpha_K^-1U+gamma_K-1K^k)T_K^tauk-gamma_K-1K^kT_K-1^tauk+h_K^tau=h_K^0+alpha_K^-1UT_infty\nendalign\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"It is clear now that for implementation purposes one can store the required coefficients in a tridiagonal matrix A^k. Making Gamma_i=(gamma_i-1i+gamma_ii+1) and tildeU=alpha_K^-1U we can identify the terms in","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginpmatrix\nH_1^k    \nH_2^k    \nH_3^k    \nvdots   \nH_K-1^k  \nH_K^k    \nendpmatrix\n=\nbeginpmatrix\n gamma_12^k  -gamma_12^k   0                 dots   0  0 \n-gamma_12^k   Gamma_2^k    -gamma_23^k  dots   0  0 \n 0  -gamma_23^k   Gamma_3^k  -gamma_34^kddots   0   0 \nvdots   ddots  ddots  ddots  ddots   vdots \n 0   0  0  -gamma_K-2K-1^k   Gamma_K-1^k    -gamma_K-1K^k \n 0        0       0       0      -gamma_K-1K^k  tildeU+gamma_K-1K^k \nendpmatrix\nbeginpmatrix\nT_1^tauk   \nT_2^tauk   \nT_3^tauk   \nvdots           \nT_K-1^tauk \nT_N^tauk   \nendpmatrix\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"Since the temperature vector T^tauk is updated every iteration, the coefficients of A^k must also be updated. With the intermediate vector H^tauk the nonlinear problem is rewritten as","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginpmatrix\nH_1^k    \nH_2^k    \nH_3^k    \nvdots       \nH_K-1^k  \nH_K^k    \nendpmatrix\n+\nbeginpmatrix\nh_1^tau   \nh_2^tau   \nh_3^tau   \nvdots         \nh_K-1^tau \nh_K^tau   \nendpmatrix\n=\nbeginpmatrix\nh_1^0                 \nh_2^0                 \nh_3^0                 \nvdots                  \nh_K-1^0             \nh_K^0 + tildeUT_infty \nendpmatrix\n","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"The choice not to write the problem in this format reflects the fact that the term H^tauk on the left-hand side is updated on a iteration basis, while the vector b^0 is computed once per time step. This last vector was called b^0 instead of h^0 because it also includes the boundary condition in its last element. This is useful for the conception of the inner and outer loop functions used for solution update.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"The traditional approach to solve this sort of problems is to provide a initial guess T^tau0=T^0.","category":"page"},{"location":"Teaching/Transport Phenomena/A4-Finite-Volume-Diffusion/","page":"Formulations of heat conduction","title":"Formulations of heat conduction","text":"\nbeginalign\nh^tau0               = b^0-A^0T^tau0\nh(T^tau1)-h^tau0 = 0\nDeltaT                = T^tau1-T^tau0\nT^tau1               = T^tau0+(1-alpha)DeltaT\nvarepsilon^1          = vertDeltaTvert\ntextrepeat\nh^tau1               = b^0-A^1T^tau1\nh(T^tau2)-h^tau1 = 0\nDeltaT                = T^tau2-T^tau1\nT^tau2               = T^tau1+(1-alpha)DeltaT\nvarepsilon^2          = vertDeltaTvert\ndots\nh^tauk                 = b^0-A^kT^tauk\nh(T^tauk+1)-h^tauk = 0\nDeltaT                  = T^tauk+1-T^tauk\nT^tauk+1               = T^tauk+(1-alpha)DeltaT\nvarepsilon^k+1          = vertDeltaTvert\nendalign\n","category":"page"},{"location":"RadCalNet/#RadCalNet","page":"RadCalNet","title":"RadCalNet","text":"","category":"section"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"CurrentModule = RadCalNet\nEditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/RadCalNet/index.md\"","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"Radiation properties machine learning model trained on RadCal.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"In this project we use the re-implementation of RadCal (Grosshandler1993)[4] to generate data and train a machine learning model for the prediction of radiative properties, i.e. emissivity and transmissivity, of common combustion flue gases.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"This is done because for real-time calls of RADCAL might be computationally prohibitive, for instance in CFD applications. Thus, a neural network is trained with Flux based on the simulated data and this module provides an interface to call the network from external programs (Ansys Fluent, OpenFOAM, ...).","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"For details of validity ranges and sample space, please check function RadCalNet.datasampler!, where random sampling is provided. Indexing of species array is documented at RadCalNet.runradcalinput.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"Below we display the quality of fitting of model. One must notice that fitting of emissivity still needs a few adjustments, while transmissivity is well predicted over the whole range.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"(Image: Model testing)","category":"page"},{"location":"RadCalNet/#Usage","page":"RadCalNet","title":"Usage","text":"","category":"section"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"The following snippet illustrates everything the model was designed to do.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"julia> using RadCalNet;\n\njulia> x = Float32[1200.0; 1000.0; 2.0; 1.0; 0.1; 0.2; 0.1];\n\njulia> y = RadCalNet.model(x)\n2-element Vector{Float32}:\n 0.3231391\n 0.6287435","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"The array of inputs x is defined below, and y provides gas emissitivy and transmissivity, respectively. Notice that x must be a column vector with entries of type Float32.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"Index Quantity Units Minimum Maximum\n1 Wall temperature K 300 2500\n2 Gas temperature K 300 2500\n3 Depth m 0.1 3.0\n4 Pressure atm 0.5 1.5\n5 CO2 mole fraction - 0.0 0.25\n6 H2O mole fraction - 0.0 0.30\n7 CO  mole fraction - 0.0 0.20","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"For practical applications, one generally is interested in calling the model with a large inputs set. Belowe we illustrate how to do this with a block of data and verify the predictions are within the model tolerance on average.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"using WallyToolbox\nusing RadCalNet\nusing Flux: mae\n\n# Loss after last training.\nLOSS = 0.0022\n\n# Random sample data randomly extracted (20 rows).\nTESTDATA = Float32[\n    1670.0   960.0  1.9  0.5  0.15  0.18  0.03   0.161774   0.820025\n    1230.0   320.0  1.9  1.0  0.04  0.08  0.18   0.20205    0.79694\n    1760.0   770.0  2.1  1.5  0.22  0.24  0.12   0.309017   0.669564\n    1770.0   960.0  1.9  0.5  0.15  0.0   0.13   0.0721235  0.919333\n     350.0  1590.0  1.9  1.0  0.06  0.29  0.12   0.357215   0.169437\n    2330.0  1820.0  1.1  1.5  0.13  0.08  0.13   0.100282   0.840802\n    1220.0  2070.0  0.2  0.5  0.11  0.17  0.09   0.0361672  0.902581\n     760.0  1380.0  1.9  1.5  0.1   0.01  0.10   0.188531   0.69798\n    1870.0  1880.0  0.2  1.5  0.14  0.28  0.17   0.0819803  0.858508\n    1910.0  2220.0  1.3  1.5  0.2   0.3   0.09   0.202592   0.63856\n    2290.0   360.0  1.8  0.5  0.0   0.23  0.07   0.0755366  0.914045\n    1330.0   640.0  1.7  1.5  0.21  0.04  0.06   0.227428   0.764363\n    1090.0  1260.0  1.9  1.5  0.17  0.18  0.18   0.381407   0.501751\n    1250.0  1590.0  0.4  1.5  0.13  0.27  0.18   0.191725   0.688272\n     990.0  2320.0  0.5  1.0  0.23  0.27  0.03   0.118285   0.633932\n    1920.0   720.0  0.3  1.0  0.05  0.03  0.18   0.0496579  0.945693\n    1250.0   310.0  0.6  1.0  0.04  0.18  0.15   0.171857   0.827273\n    1990.0  1020.0  1.3  1.0  0.09  0.11  0.15   0.140596   0.837042\n    1180.0  1830.0  0.3  0.5  0.09  0.29  0.02   0.0682171  0.851304\n    2120.0  1230.0  2.9  1.5  0.03  0.06  0.17   0.168034   0.791942\n]\n\n# Predictors and targets transposed.\nX = transpose(TESTDATA[:, 1:7])\nY = transpose(TESTDATA[:, 8:9])\n\nmae(RadCalNet.model(X), Y) <= LOSS\n\n# output\n\ntrue","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"The following test can also be seen as a tutorial for data generation, where we make the verification of data generation with provided seed.  See RadCalNet.createcustomdatabase for more details. An alternative RadCalNet.datasampler! can be provided for specific problems.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"import Random\nusing WallyToolbox\nusing RadCalNet\n\nfunction sampledatabase()\n    #XXX: documentation is run from root directory!\n    testname = joinpath(joinpath(@__DIR__, \"src/RadCalNet/data/sample.dat\"))\n\n    # Provide a seed at start-up for *maybe* reproducible builds.\n    Random.seed!(42)\n\n    if !isfile(testname)\n        RadCalNet.createcustomdatabase(;\n            sampler!   = RadCalNet.datasampler!,\n            repeats    = 3,\n            samplesize = 3,\n            cleanup    = true,\n            saveas     = testname,\n            override   = true\n        )\n    end\n\n    return RadCalNet.loaddatabase(testname)\nend\n\nA = sampledatabase()[:, end-5:end]\n\n# output\n\n9×6 Matrix{Float32}:\n 0.61  0.0006522    0.00680899  0.127997       1.4369f5   0.784483\n 0.63  0.00147905   0.0163017   0.256072   52761.9        0.493376\n 0.8   0.00181013   0.0525569   0.209679    1712.82       0.743175\n 0.69  0.000962085  0.0317917   0.0917254      3.80101f5  0.88582\n 0.69  0.00246231   0.0538234   0.418247    1442.63       0.479691\n 0.68  0.00210072   0.00470752  0.0997078  71325.7        0.79875\n 0.67  0.000770321  0.0101432   0.0812446      3.0696f5   0.815462\n 0.7   0.00154008   0.0215186   0.253691   24945.7        0.478712\n 0.53  0.00133843   0.0180676   0.234852   21784.6        0.7443","category":"page"},{"location":"RadCalNet/#To-do's","page":"RadCalNet","title":"To-do's","text":"","category":"section"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"Broaden sample space over the whole RadCal composition spectrum.\nDefine data loading on GPU/CPU though a flag when recovering model.\nCreate database for testing outside of sampling points.\nImprove model reload and organize a notebook for training.","category":"page"},{"location":"RadCalNet/#Literature-discussion","page":"RadCalNet","title":"Literature discussion","text":"","category":"section"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"using DelimitedFiles\nusing HDF5\nusing Plots\nusing Printf\n\nusing WallyToolbox\nimport RadCalNet\n\nfunction gorogcomposition()\n    X = zeros(14)\n    X[1] = 0.2\n    X[2] = 0.2\n    X[end] = 1.0 - sum(X[1:2])\n    return X\nend\n\nfunction gorogsemissivitydata()\n    pr = collect(0.0:0.015:3.2)\n    Tg = [830.0, 1110.0, 1390.0]\n\n    X = gorogcomposition()\n    prod = Iterators.product(pr, Tg)\n    samplesize = length(pr) * length(Tg)\n    table = zeros(samplesize, 26)\n\n    for (k, (p, T)) in enumerate(prod)\n        table[k, 1:end] = RadCalNet.runradcalinput(;\n            X = X,\n            T = T,\n            L = p / sum(X[1:2]),\n            TWALL = 300.0,\n            FV = 1.0e-15\n        )\n    end\n\n    return table\nend\n\nfunction gorogsabsorptivitydata()\n    pr = collect(0.0:0.01:1.6)\n    Tw = [277.0, 555.0, 833.0]\n\n    X = gorogcomposition()\n    prod = Iterators.product(pr, Tw)\n    samplesize = length(pr) * length(Tw)\n    table = zeros(samplesize, 26)\n\n    for (k, (p, T)) in enumerate(prod)\n        table[k, 1:end] = RadCalNet.runradcalinput(;\n            X = X,\n            T = 1110.0,\n            L = p / sum(X[1:2]),\n            TWALL = T,\n            FV = 1.0e-15\n        )\n    end\n\n    return table\nend\n\nfunction plotgorogsemissitivity(εdata, εgorog)\n    p = plot(dpi = 100, legend = :topleft)\n    scatter!(p, εdata[1][:, 1], εdata[1][:, 2],\n             markerstrokewidth = 0.0, label = \"Gorog\")\n\n    for T in unique(εgorog[:, 4])\n        sel = εgorog[εgorog[:, 4] .== T, :]\n        pr = sum(sel[:, 8:9], dims = 2) .* sel[:, 5]\n        εg = sel[:, 24]\n        plot!(p, pr, εg, label = @sprintf(\"%4.0f K\", T))\n    end\n\n    xlims!(p, 0.0, 3.2)\n    ylims!(p, 0.0, 0.7)\n    xticks!(p, 0.0:0.4:3.2)\n    yticks!(p, 0.0:0.1:0.7)\n\n    xlabel!(p, \"Optical thickness [m-atm]\")\n    ylabel!(p, \"Emissivity\")\n\n    p\nend\n\nfunction plotgorogsabsorptivitydata(αdata, αgorog)\n    p = plot(dpi = 100, legend = :topleft)\n    scatter!(p, αdata[1][:, 1], αdata[1][:, 2],\n             markerstrokewidth = 0.0, label = \"Gorog\")\n\n    for T in unique(αgorog[:, 3])\n        sel = αgorog[αgorog[:, 3] .== T, :]\n        pr = sum(sel[:, 8:9], dims = 2) .* sel[:, 5]\n        αg = 1.0 .- sel[:, end]\n        plot!(p, pr, αg, label = @sprintf(\"%4.0f K\", T))\n    end\n\n    xlims!(p, 0.0, 1.6)\n    ylims!(p, 0.0, 1.0)\n    xticks!(p, 0.0:0.2:1.6)\n    yticks!(p, 0.0:0.2:1.0)\n\n    xlabel!(p, \"Optical thickness [m-atm]\")\n    ylabel!(p, \"Absorptivity\")\n\n    p\nend\n\ndatadir = @__DIR__\n\nεfig = joinpath(datadir, \"media/emissivity.png\")\nαfig = joinpath(datadir, \"media/absorptivity.png\")\n\nεfile = joinpath(datadir, \"data/emissivity.csv\")\nαfile = joinpath(datadir, \"data/absorptivity.csv\")\n\nif !isfile(εfig)\n    εdata = readdlm(εfile, ',', Float64, header = true)\n    εgorog = gorogsemissivitydata()\n    p = plotgorogsemissitivity(εdata, εgorog)\n    png(p, εfig)\nend\n\nif !isfile(αfig)\n    αdata = readdlm(αfile, ',', Float64, header = true)\n    αgorog = gorogsabsorptivitydata()\n    p = plotgorogsabsorptivitydata(αdata, αgorog)\n    png(p, αfig)\nend","category":"page"},{"location":"RadCalNet/#Verification-agains-Gorog's-paper","page":"RadCalNet","title":"Verification agains Gorog's paper","text":"","category":"section"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"Below we compare computed values with those by (Gorog1981a)[5]. Reference paper is found here.","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"(Image: Emissivity)","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"(Image: Absorptivity)","category":"page"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"At least qualitative agreement is found and orders of magnitude are right. On the other hand, using directly the model parameters from (Tam2019)[6] do not produce the expected results (not displayed, work in progress in this draft). It is not clear how the data is pre- and post-processed for use with their network.","category":"page"},{"location":"RadCalNet/#All-interfaces","page":"RadCalNet","title":"All interfaces","text":"","category":"section"},{"location":"RadCalNet/","page":"RadCalNet","title":"RadCalNet","text":"Modules = [ RadCalNet ]","category":"page"},{"location":"RadCalNet/#RadCalNet.ModelData","page":"RadCalNet","title":"RadCalNet.ModelData","text":"ModelData(fpath::String; f_train::Float64 = 0.7)\n\nLoad HDF5 database stored under fpath and performs standardized workflow of data preparation for model training. The data is split under training and testing datasets with a fraction of training data of f_train.\n\nscaler::StatsBase.ZScoreTransform{Float32, Vector{Float32}}: Scaler used for data transformation.\nX_train::Matrix{Float32}: Matrix of training input data.\nY_train::Matrix{Float32}: Matrix of training output data.\nX_tests::Matrix{Float32}: Matrix of testing input data.\nY_tests::Matrix{Float32}: Matrix of testing output data.\nn_inputs::Int64: Number of model inputs.\nn_outputs::Int64: Number of model outputs.\n\n\n\n\n\n","category":"type"},{"location":"RadCalNet/#RadCalNet.ModelTrainer","page":"RadCalNet","title":"RadCalNet.ModelTrainer","text":"ModelTrainer(\n    data::ModelData,\n    model::Chain;\n    batch::Int64=64,\n    epochs::Int64=100,\n    η::Float64=0.001,\n    β::Tuple{Float64,Float64}=(0.9, 0.999),\n    ϵ::Float64=1.0e-08\n)\n\nHolds standardized model training parameters and data.\n\nbatch::Int64: Batch size in training loop.\nepochs::Int64: Number of epochs to train each time.\ndata::RadCalNet.ModelData: Database structure used for training/testing.\nmodel::Flux.Chain: Multi-layer perceptron used for modeling.\noptim::NamedTuple: Internal Adam optimizer.\nlosses::Vector{Float32}: History of losses.\n\n\n\n\n\n","category":"type"},{"location":"RadCalNet/#RadCalNet.createcustomdatabase-Tuple{}","page":"RadCalNet","title":"RadCalNet.createcustomdatabase","text":"createcustomdatabase(;\n    sampler!::Function,\n    repeats::Int64 = 100,\n    samplesize::Int64 = 50_000,\n    cleanup::Bool = false,\n    saveas::String = \"database.h5\",\n    OMMIN::Float64 = 50.0,\n    OMMAX::Float64 = 10000.0,\n    override::Bool = false\n)\n\nCreates a custom database by generating a number repeats of samples of samplesize rows. Inputs for runradcalinput are to be generated by a sampler! user-defined function which modifies in place an array of compositions, and returns T, L, P, FV, TWALL for setting up a simulation. Files are temporarilly stored under data/ with a sequential numbered naming during database creation and aggregated in a HDF5 file named after saveas. The choice to aggregate files after an initial dump is because generation can be interrupted and manually recovered in an easier way and avoiding any risk of data losses - database creation can take a very long time. If cleanup is true, all intermediate files are removed.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.datasampler!-Tuple{Vector{Float64}}","page":"RadCalNet","title":"RadCalNet.datasampler!","text":"datasampler!(X::Vector{Float64})::Tuple\n\nCustom sample space to generate entries with createcustomdatabase. This function contains the parameter space used for model training.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.defaultmodel-Tuple{}","page":"RadCalNet","title":"RadCalNet.defaultmodel","text":"defaultmodel()\n\nBuild model structure with which RadCalNet is trained.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.dumpscaler-Tuple{StatsBase.ZScoreTransform{Float32, Vector{Float32}}, String}","page":"RadCalNet","title":"RadCalNet.dumpscaler","text":"dumpscaler(scaler::ZScoreTransform{Float32,V32}, saveas::String)\n\nWrite z-score scaler mean and scale to provided saveas YAML file.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.getradcalnet-Tuple{}","page":"RadCalNet","title":"RadCalNet.getradcalnet","text":"getradcalnet(;\n    scale = true,\n    fscaler = nothing,\n    fmstate = nothing\n)\n\nLoad trained model and scaler to compose RadCalNet. If testing new models, it might be useful to use fscaler and fmstate to point to specific versions of scaler and model state files.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.loaddatabase-Tuple{String}","page":"RadCalNet","title":"RadCalNet.loaddatabase","text":"loaddatabase(fname::String)\n\nRetrieve database from HDF5 file and access table as a matrix.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.loadscaler-Tuple{String}","page":"RadCalNet","title":"RadCalNet.loadscaler","text":"loadscaler(fname::String)::Function\n\nLoad z-scaler in functional format from YAML fname file.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.makemodel-Tuple{Vector{Tuple{Int64, Any}}}","page":"RadCalNet","title":"RadCalNet.makemodel","text":"makemodel(layers::Vector{Tuple{Int64, Any}}; bn = false)::Chain\n\nCreate a multi-layer perceptron for learning radiative properties with the provided layers. If bn is true, then batch normalization after each layer. The final layer has by default a sigmoid function to ensure physical outputs in range [0, 1].\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.model","page":"RadCalNet","title":"RadCalNet.model","text":"model(x::Vector{Float32})::Vector{Float32}\n\nMain model interface for emissivity and transmissivity.\n\n\n\n\n\n","category":"function"},{"location":"RadCalNet/#RadCalNet.plottests-Tuple{RadCalNet.ModelTrainer}","page":"RadCalNet","title":"RadCalNet.plottests","text":"plottests(trainer::ModelTrainer; num::Int64)\n\nEvaluate model over num data points and compare the data to the expected values as computed from RadCal. Makes use of test data only - never seem by the model during training.\n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.runradcalinput-Tuple{}","page":"RadCalNet","title":"RadCalNet.runradcalinput","text":"runradcalinput(;\n    X::Dict{String, Float64} = Dict{String, Float64}(),\n    T::Float64 = 300.0,\n    L::Float64 = 1.0,\n    P::Float64 = 1.0,\n    FV::Float64 = 0.0,\n    OMMIN::Float64 = 50.0,\n    OMMAX::Float64 = 10000.0,\n    TWALL::Float64 = 500.0,\n    radcalexe::String = \"radcal_win_64.exe\"\n)::Vector{Float64}\n\nCreate RADCAL.IN from template file and dump to disk.\n\nNOTE: the user is responsible to provide a vector X of mole fractions of species that sums up to one. If this is not respected RADCAL fails. The Following list provides the indexes of available species in vector X.\n\nIndex Species Index Species Index Species\n1 CO2 6 C2H6 11 CH3OH\n2 H2O 7 C3H6 12 MMA\n3 CO 8 C3H8 13 O2\n4 CH4 9 C7H8 14 N2\n5 C2H4 10 C7H16  \n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.samplecols-Tuple{Int64, Int64}","page":"RadCalNet","title":"RadCalNet.samplecols","text":"Get sample of indexes for data retrieval.  \n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.tests-Tuple{RadCalNet.ModelData, Int64}","page":"RadCalNet","title":"RadCalNet.tests","text":"Get testing data for data loader construction. \n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.train-Tuple{RadCalNet.ModelData, Int64}","page":"RadCalNet","title":"RadCalNet.train","text":"Get training data for data loader construction. \n\n\n\n\n\n","category":"method"},{"location":"RadCalNet/#RadCalNet.trainonce!-Tuple{RadCalNet.ModelTrainer}","page":"RadCalNet","title":"RadCalNet.trainonce!","text":"trainonce!(trainer::ModelTrainer; num = 1_000)\n\nTrain model and keep track of loss for the number of epochs in trainer using its internal data and parameters. Use num data points.\n\n\n\n\n\n","category":"method"},{"location":"References/@Guo2023d/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2023d/","page":"-","title":"-","text":"title: \"Unraveling the design pattern of physics-informed neural networks: Series 04\" authors: Shuai Guo year: 2023 URL: https://towardsdatascience.com/unraveling-the-design-pattern-of-physics-informed-neural-networks-part-04-c778f4829dde –- Discussed [[@Yu2022a]].","category":"page"},{"location":"References/@Reitz1987/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Reitz1987/","page":"-","title":"-","text":"title: Structure of high-pressure fuel sprays authors: Rolf D. Reitz, R. Diwakar year: 1987 URL: https://doi.org/10.4271/870598 –-","category":"page"},{"location":"References/@Arthurs2021a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Arthurs2021a/","page":"-","title":"-","text":"title: Active training of physics-informed neural networks to aggregate and interpolate parametric solutions to the Navier-Stokes equations authors: Christopher J. Arthurs, Andrew P. King year: 2021 URL: https://doi.org/10.1016/j.jcp.2021.110364 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla8i8cvFX_ZGzT6Z9A?e=MJdHtJ –-","category":"page"},{"location":"References/@Amsden1989/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Amsden1989/","page":"-","title":"-","text":"title: \"KIVA-II: A computer program for chemically reactive flows with sprays\" authors: A. A. Amsden, P. J. O'Rourke, T. D. Butler year: 1989 URL: https://doi.org/10.2172/6228444 –- Also check (Liu1993)[12] (in OpenFOAM generalization to distortedSphereDrag).","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/#Breakdown-into-sub-models","page":"-","title":"Breakdown into sub-models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[x] Incompressible flow only for mesh and conditions check with incompressibleFluid:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"- After a first run with a system length of 1 m it was decided to increase the domain to 2 m in order to ensure a better development of flow profile (at least 10 times the cross section size) and double the number of cells in transversal directions.\n- It was confirmed that the inlet mean velocity profile respects the expected value from the imposed mass flow rate evaluated during parameters setup, but outlet is controversial. This is probably because the case should be run as turbulent or grid is too coarse.\n- Mass conservation was monitored and confirmed through field `phi`.\n- It must be emphasized that boundary layer resolution is not accurate since no grading is applied and mesh is very coarse, but since the goal is flare development far from the walls this is acceptable at this stage and will be dealt with at a later stage.\n- All residuals are going down adequately, allowing us to move to the next step. \n- Calculation took approximately 10 seconds with 1 core.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[x] Previous case is copied and support to RAS k-varepsilon (Launder1974)[13] is implemented:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"- With inclusion of turbulence the actual outlet velocity matches the expected value (that was unphysical in the previous simulation), validating the approach.\n- Entry length is verified through velocity and turbulent viscosity, confirming the need to extend the domain for a proper development.\n- The number of iterations was increased to 200 to ensure that everything has properly converged, reaching an extremely low residuals level for all variables.\n- Other previous observations are still valid, allowing us to move to the next step.\n- Calculation took approximately 11 seconds with 1 core to perform 100 iterations. After 100 iterations the step convergence becomes slow because of the already low residuals, leading to a calculation time of 38 seconds.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[x] Adding compressible flow with multicomponentFluid to the above:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"- The temperature field is added prior to handling any combustion aspects in this step to avoid having interaction between these elements in convergence checks. \n- Nonetheless, gravity was already added here after a first run without it for a basic check. A vertical pressure profile is observed in the cross-section, showing the expected buoyancy effects.\n- Other Impacted files include physical properties, which now incorporate more detailed thermodynamics, `alphat` and, at least, the main chemical component file with boundary and initial conditions. \n- The mean value of `phi` in the outlet can now be compared to the imposed mass flow rate, validating the boundary condition setup.\n- Calculation took approximately 13 seconds with 1 core to perform 100 iterations. Again an important slow down is observed leading to 125 seconds to perform 300 iterations.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[x] The next logical step is to include evaporation of fuel in the gas, without enabling reactions:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"- The simples way of doing so is adding the required chemical and associated initial file without adding any combustion or reaction parameters. It was chosen to use the actual species name instead of simply *fuel* to keep created files compatible with next steps. Simulation was checked before adding the cloud, which exponentially complexifies the setup.\n- A `patchPostProcessing` cloud function was tested at first to check if conditions were leading to complete fuel evaporation. It is kept commented-out for future debug if required. To make results easier to interpret, a fixed size PSD was adopted at this stage.\n- As expected, convergence is bad and the only strategy that seems to work is mesh refinement. Otherwise pressure coupling becomes difficult and trying to change numerical parameters (solver correctors, linear solver, divergence and Laplacian schemes, relaxation level) do not improve anything. Tried to use `SOI` at a later iteration to let flow converge before injection, but apparently the steady solver ignores this. Even with `localEuler` pseudo-time stepping (requires to add residuals for `rho` in `fvSolution`) it does not seem to take `SOI` into account.  Also tried deactivating clouds and converging before reactivating it (what would be equivalent to the later `SOI` approach) and that does not work either, confirming it is a physical coupling problem.\n- Because of mesh refinement, now parallelization becomes a requirement unless we work with mesh grading, what is out of the present scope (to be done only in production scenario). Nonetheless, parallelization does not seem to be of great advantage.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[ ] Activation of global chemistry and combustion modeling:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"- From now on the level of physics start becoming too complex and pre-computation of fields should be done whenever compatible. That means that prior to chemistry activation it seems a good idea to let evaporation of droplets converge (testing 1000 iterations).\n- To keep things general, instead of setting up the case with a fixed database of species thermodynamics, it is better to convert Chemkin files.\n-","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[ ] Add radiation modeling\n[ ] Add arbitrary empirical fuel modeling","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"After modification the cases were run again getting the following performances, from which it becomes clear that for the present grid size the parallelization saturates quickly.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"Step 1 processor 32 processors\n0 77 14\n1  35\n2  80\n3  \n4  ","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/#Future-improvements","page":"-","title":"Future improvements","text":"","category":"section"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[ ] Add the following to the parameters file for full turbulence model controls:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"Cmu             0.09;\nC1              1.44;\nC2              1.92;\nC3              0;\nsigmak          1;\nsigmaEps        1.3;","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"[ ] Add convergence criteria PIMPLE: No convergence criteria found.\n[ ] Consider a possible adaptive mesh refinement at case setup (not runtime!).","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/#Reminders","page":"-","title":"Reminders","text":"","category":"section"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"Because of potentialFlow initialization, a dictionary corresponding to this must be present in fvSolution as well as a solver for Phi (copy defaults for pressure). Because this solver does not have information about temperature or composition of fluid, a field rhoInlet is required in inlets.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/#Initial-tentative-setup","page":"-","title":"Initial tentative setup","text":"","category":"section"},{"location":"Teaching/OpenFOAM/Cases/aachenBombSteady/","page":"-","title":"-","text":"This case aims producing a steady state liquid fuel combustion model using aachenBomb case as a starting point, but does not directly tries to reproduce the results of that case. It was modified so that there is an inlet and an outlet for flame development.\nTo perform the setup we retrieve several modifications from verticalChannelSteady and verticalChannelLTS. The first because it is the only case under multicomponentFluid solver currently using a steadyState time-stepping scheme and the latter due to the use of localEuler, which is often used to produce pseudo-steady solutions when a direct steady state calculations becomes unstable (as it is the case in most combustion calculations).\nModify controlDict to integer steps (that is, each step is an iteration) for both time-step and write controls, and enable purgeWrite to keep case cleaner. Notice that this is also valid if using a localEuler time-stepping scheme.  Change time-stepping method accordingly in fvSchemes.\nTo increase robustness of solution, it is recommended to compute a potential flow with potentialFoam as in reference case verticalChannelLTS. This requires a solver control field Phi in fvSolution and a  reference rhoInlet value to be provided in inlet flow velocity. Other parameters, but specially maxCo are also copied from reference case.\nSome dictionaries in cloudProperties require steady-state specific commands, such as adding calcFrequency to solution,  resetOnStartup to solution.sourceTerms, and injection models must use massFlowRate, what is physically understandable.\nCombustion is quite sensitive and Seulex alone does not seem able to handle it with an EDC approach. First flow was developed further during 100 steps before activating chemistry. For now using a single step infinitelyFastChemistry to try to stabilize the behavior before trying back to use the EDC model.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/#multicomponentFluid","page":"-","title":"multicomponentFluid","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"In OpenFOAM v11 solver module multicomponentFluid provides approaches for setting up the simulation of fluids with multiple species, including combustion.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/#Tutorial-cases","page":"-","title":"Tutorial cases","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"DLRALTS\nSandiaD_LTS\naachenBomb: global combustion kinetics of droplets released in a box.\ncounterFlowFlame2D\ncounterFlowFlame2DLTS\ncounterFlowFlame2DLTSGRITDAC\ncounterFlowFlame2D_GRI\ncounterFlowFlame2DGRITDAC\nfilter\nlockExchange\nmembrane\nnc7h16: zero dimensional model of homogeneous kinetics.\nparcelInBox: evaporation of a single water particle in a closed box.\nsimplifiedSiwek: co-combustion of coal and limestone clouds in Siwek chamber.\nsmallPoolFire2D\nsmallPoolFire3D\nverticalChannel: water droplet evaporation in a vertical channel.\nverticalChannelLTS: same as verticalChannel but with local time-stepping.\nverticalChannelSteady: same as verticalChannel but at steady state.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/#Built-cases","page":"-","title":"Built cases","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"aachenBombSteady: this case was created as a tentative to simulate a steady spray combustion starting from aachenBomb tutorial but after several failures it became a case of its own. The case we have today was built bottom-up, from a simple flow in a box to the level of combustion, including several intermediate steps used to understand how the different options and models interacted. For now its name will remain like this in reference to where it started, but in the future I might come up with a better one.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/#incompressibleDenseParticleFluid","page":"-","title":"incompressibleDenseParticleFluid","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"In OpenFOAM v11 solver module incompressibleDenseParticleFluid provides approaches for setting up a transient flow interacting with particles. It handles incompressible isothermal flows with fluid-particle interactions, including cases with dense packing of particles, such as packed beds or initialization of fluidized beds for solution with other approaches.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/#Tutorial-cases-2","page":"-","title":"Tutorial cases","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"Goldschmidt\nGoldschmidtMPPIC\ncolumn\ncyclone\ninjectionChannel","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/#Boundary-fields","page":"-","title":"Boundary fields","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"Boundary fields in general are almost the same as any case in pure fluid simulations but transported quantities must be named by appending the name of the continuous phase specified in  constant/physicalProperties as continuousPhaseName <phase>. To make it simple let's call this phase air in what follows. Notice that pressure file name remains unchanged since it is not really transported as you don't have an equation in the form of Reynolds transport theorem for it.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"That said, we have things as k.air and U.air.  The particularity here is that you must provide phi for all hydrodynamic solution variables (such as k.air, U.air) in outlets, what is implicit in single phase flow models. That means that an outlet for velocity should include something as","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"outlet\n{\n\ttype            pressureInletOutletVelocity;\n\tphi             phi.air;\n\tinletValue      uniform (0 0 0);\n\tvalue           uniform (0 0 0);\n}","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/#Creating-cloudProperties","page":"-","title":"Creating cloudProperties","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"Most default values in solution dictionary should be fine for typical fluid-particle applications, but for phase interaction it is important to configure coupled as true so that drag forces are applied to the particles and conversely, particles disturb the fluid. ","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"We must also turn on cellValueSourceCorrection, which will correct cell values using latest transfer information. These elements as given in the following block (you can check the full dictionary in the official OpenFOAM tutorials for other details).","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"solution\n{\n\tcoupled                   true;\n\ttransient                 yes;\n\tcellValueSourceCorrection on;\n\tmaxCo                     0.7;\n\n\t...\n}","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"Being a momentum cloud, MPPICCloud makes use only of patchInteractionModel localInteraction for interaction with the environment and collisions between particles are not taken into account (that is not completely true if you consider the packing effects that can be enabled as collisions). Again, it is better to go deeper in the case studies.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Solver-Modules/","page":"-","title":"-","text":"The main models for setting up a particle simulation in constant/cloudProperties  are the [[Physical Models#Injection models|InjectionModel]] and the ParticleForce to be used. Notice that when dealing with incompressibleDenseParticleFluid the main ParticleForce models other than gravity are inherited by DenseDragForce.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"The following numerical experiments concern the horizontalMixer sample case.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/#Conceptual-phase","page":"-","title":"Conceptual phase","text":"","category":"section"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Minimal working examples:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"000: no models active other than patchInteraction rebound.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 000)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"001: no models active other than patchInteraction standardWallInteraction.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 001)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"002: no models active other than patchInteraction localInteraction.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 002)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"If there are outlets in the system, rebound model is not suitable. Because of this, all the next cases, unless stated otherwise, will use localInteraction given the better control it provides over individual patches with respect to standardWallInteraction (although it is much slower than the latter).","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"007: compare solution for same (approximate) mass flow with using multiple particles per parcel -  with respect to the single particle per parcel performed in the reference case 002. The overall cloud shape remains the same but some spatial resolution is lost. For conception studies it seems valid to use a higher number of particles per parcel.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 007)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Using the basic patchInteraction localInteraction add these variants (notice that the option none for all these models is already covered by the reference case 002. After comparing cases 002 and 007 the following variants were modified to match 007 as a reference case given the much lower computational time (more particles per parcel).","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"003: packingModel explicit.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 003)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"004: packingModel implicit.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 004)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"005: dampingModel relaxation. Particle velocities are relaxed towards the local mean over a time-scale. Notice that reference paper intended to improve MP-PIC for polydisperse sedimenting particle clouds.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 005)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"006 isotropyModel stochastic. According to the reference paper collisions cause numerical particles to scatter in MP-PIC calculations, just as physical particles do in particle/fluid flows, just as the generated animation implies.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 006)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Implicit packing so far is the only model for which particles left the system and turbulence effects and segregation becomes apparent. In fact without implicit packing the results do not even look physical, so it is probably a requirement to activate this model. Damping and isotropy models produce similar results, with a little more dispersed cloud when isotropy is active, as stated above from its reference.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Hypotheses testing cases:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"008: modify case 004 to test if with rebound patch interaction particles are able to quit the system. Confirmed that this patch interaction does not handle outlets.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 008)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"009: modify case 004 to test if with standardWallInteraction patch interaction particles are able to quit the system. Confirmed that this patch interaction does handle outlets similarly to the localInteraction. It was not possible to confirm if inlets also allow backflow since reporting is not provided by patch.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 009)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"010: check the role of gravity option over implicit packing model. Here we derive a variant of 009 because it runs faster than with localInteraction. ","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"(Image: Case 010)","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"011: in fact the role of gravity in 010 was pretty devastating over the sedimentation rate (quite unexpected given the particle sizes that were used) so a variant  of this case was manually initialized from last state and left to run for a much longer physical time (100 s) using maxCo 2.0 for faster execution. CALCULATION DIVERGED, REDO!","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/#Physical-refinement-phase","page":"-","title":"Physical refinement phase","text":"","category":"section"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Model Takings\nInjectionModel CONFIRM CONCLUSIONS WITH POLYDISTRIBUTED CLOUDS (particles per parcel)!\nPatchInteractionModel This model is key for the simulation of particles coupled to a fluid. Unless different behavior is expected in the different walls so customization of interaction is required, it is much faster to use a standardWallInteraction approach. For understanding the role of parameters e and mu over rebound one can check lines 144-168 of source code and confirm the model is the same as the one implemented in localInteraction in lines 366-391 of sources.\nPackingModel \nDampingModel \nIsotropyModel \nParticleForce This will be discussed in this section.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Solution with different drag models:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Model Results\nsphereDrag (Image: Case 012) 012\nWenYuDrag (used in injectionChannel) implemented from equation (2.12) of  (Gidaspow1994)[14]. (Image: Case 013) 013\nErgunWenYuDrag (used in Goldschmidt, cyclone, and column) implemented from equation (5.11) of (Gidaspow1994)[14]. (Image: Case 014) 014","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Other drag models:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Model Details\nPlessisMasliyahDrag Used in GoldschmidtMPPIC. Implemented from (Plessis1988)[15] is adapted for flow through consolidated isotropic porous media. This is outside the scope of the current study but functionality is tested anyways from a computational point of view and to understand its behavior far from its reference application. Calculation diverged, so no results are available.\ndistortedSphereDrag Not used in any tutorial. Implemented as per (Liu1993)[12] is conceived for the simulation of the effects of drop drag and breakup on fuel sprays. This is far from our scope and is not tested.\nnonSphereDrag Not used in any tutorial. Implemented as per (Haider1989)[16] is a drag model for non-spherical particles. Its most important parameter is phi, the ratio of the surface area of a sphere with the same volume as the particle to the actual surface area of the particle.\nSchillerNaumannDrag Not used in any tutorial. Implemented according the classical paper by Schiller (1935) for modeling drag over spheres.","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Solution with different sizeDistribution:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"[ ] fixedValue\n[ ] normal\n[ ] RosinRammler\n[ ] tabulatedDensity","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Solution with different cloud types","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"MPPICCloud\ncollidingCloud","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"For the PackingModelone needs to specify the ParticleStressModel among the following:","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Model Details\nHarrisCrighton \nLun ","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"For both  DampingModel and IsotropyModel one needs a TimeScaleModel","category":"page"},{"location":"Teaching/OpenFOAM/Cases/horizontalMixer/","page":"-","title":"-","text":"Option Details\nequilibrium \nisotropic \nnonEquilibrium ","category":"page"},{"location":"Teaching/Transport Phenomena/A3-Thermodynamics-Concepts/#Quick-review","page":"-","title":"Quick review","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A3-Thermodynamics-Concepts/","page":"-","title":"-","text":"When order increases entropy decreases.\nAn endothermic process is a process that absorbs heat from its surroundings; on the other hand, an exothermic process releases heat to its surroundings.\n","category":"page"},{"location":"References/@Mittemeijer1988/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Mittemeijer1988/","page":"-","title":"-","text":"title: \"Analysis of nonisothermal transformation kinetics; tempering of iron-carbon and iron-nitrogen martensites\" authors: E. J. Mittemeijer, Liu Cheng, P. J. van der Schaaf, C. M. Brakman, B. M. Korevaar year: 1988 –-","category":"page"},{"location":"References/@Guo2023c/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2023c/","page":"-","title":"-","text":"title: \"Unraveling the design pattern of physics-informed neural networks: Series 03\" authors: Shuai Guo year: 2023 URL: https://towardsdatascience.com/unraveling-the-design-pattern-of-physics-informed-neural-networks-part-03-fe365ef480d9 –- Discussed [[@Krishnapriyan2021a]]","category":"page"},{"location":"References/@Antonelo2021a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Antonelo2021a/","page":"-","title":"-","text":"title: Physics-informed neural nets for control of dynamical systems authors: Eric Aislan Antonelo, Eduardo Camponogara, Laio Oriel Seman, Eduardo Rehbein de Souza, Jean P. Jordanou, Jomi F. Hubner year: 2021 URL: https://doi.org/10.48550/arXiv.2104.02556 –-","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/#Applications-to-fluid-mechanics","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/#Derivation-of-continuity-equation","page":"Applications to fluid mechanics","title":"Derivation of continuity equation","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"Moving towards a fluid mechanics application, one often needs to express the continuity equation for the overall mass of the system and the flowing species.","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"In this case, term b of previous formulation is replaced by the mass density rho_m of the fluid. Flux is expressed as vecF_m=vecv_mrho_m, where vecv_m is the mass averaged velocity. It is useful to introduce this quantity vecv_m because in many multi-species formulations it might become difficult to find a single velocity representing the fluid motion.","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"In the absence of creation rates B_v the continuity equation writes","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"\nfracpartialrho_mpartialt+nablacdotpleft(rho_mvecv_mright)=0\n","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"For incompressible flows (constant rho_m) the time derivative is by definition null and the divergent term can be expanded in terms of its components gradients as","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"\nnablacdotpleft(rho_mvecv_mright)=rho_mnablavecv_m+vecv_mnablarho_m=0\n","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"Since rho_m is constant, this simplifies to the so-called incompressible fluid continuity equation","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"\nnablavecv_m=0\n","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/#Application-to-advection-diffusion-reaction","page":"Applications to fluid mechanics","title":"Application to advection-diffusion-reaction","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"Now assume a flow where chemical species c_i are advected by the velocity vecv_i and diffuse following the negative of their gradient. The flux in this case is given as F_i = c_ivecv_i-D_inablac_i. Applying this to the equation of conservation of c_i leads to","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"\nfracpartialc_ipartialt+nablacdotpleft(c_ivecv_i-D_inablac_iright)=R_v\n","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"Splitting the terms under the divergence operator in right-hand side and reorganizing:","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"\nfracpartialc_ipartialt+nablacdotpleft(c_ivecv_iright)=nablacdotpleft(D_inablac_iright)+R_v\n","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"It is often beneficial to further expand the divergence of convection term so that the equation can be reshaped as follows:","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"\nfracDc_iDt=\nfracpartialc_ipartialt+\nvecv_inablac_i=\nnablacdotpleft(D_inablac_iright)-\nc_inablacdotpvecv_i\n+R_v\n","category":"page"},{"location":"Teaching/Transport Phenomena/03-Applications-to-fluid-mechanics/","page":"Applications to fluid mechanics","title":"Applications to fluid mechanics","text":"In this expression the big-D notation represents a material or convective derivative. It provides us the behavior of transported quantity in the fluid reference frame, what can be useful for some local analysis. Even more useful than that, under this form we can promptly simplify the remaining terms in the left-hand side for cases of constant diffusivity, incompressible flow, and absence of chemical reactions (in the order of appearance of terms). For numerical solution of transport equations for incompressible flows, using the null divergent of velocity can save us a lot of trouble.","category":"page"},{"location":"References/@Pena2001a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Pena2001a/","page":"-","title":"-","text":"title: Stability of Turing patterns in the Brusselator model authors: B. Peña, C. Pérez-García year: 2001 URL: https://doi.org/10.1103/PhysRevE.64.056213 Drive: –-","category":"page"},{"location":"References/@Gorog1981a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Gorog1981a/","page":"-","title":"-","text":"title: Radiative heat transfer in rotary kilns authors: J. P. Gorog, J. K. Brimacombe, T. N. Adams year: 1981 –-","category":"page"},{"location":"References/@Tam2019/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Tam2019/","page":"-","title":"-","text":"title: OpenSC: an open-source calculation tool for combustion mixture emissivity/absorptivity authors: Wai Cheong Tam, Walter W. Yuen year: 2019 –-","category":"page"},{"location":"References/@Onsager1931/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Onsager1931/","page":"-","title":"-","text":"title: Reciprocal relations in irreversible processes. I. authors: Lars Onsager year: 1931 –-","category":"page"},{"location":"DryCombustion/#DryCombustion","page":"DryCombustion","title":"DryCombustion","text":"","category":"section"},{"location":"DryCombustion/","page":"DryCombustion","title":"DryCombustion","text":"CurrentModule = DryCombustion\nDocTestSetup  = quote\n    using DryCombustion\nend\nEditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/DryCombustion/index.md\"","category":"page"},{"location":"DryCombustion/#Heavy-fuel-oils","page":"DryCombustion","title":"Heavy fuel-oils","text":"","category":"section"},{"location":"DryCombustion/","page":"DryCombustion","title":"DryCombustion","text":"DryCombustion.hfo_specific_heat\nDryCombustion.hfo_enthalpy_net_bs2869","category":"page"},{"location":"DryCombustion/#DryCombustion.hfo_specific_heat","page":"DryCombustion","title":"DryCombustion.hfo_specific_heat","text":"hfo_specific_heat(T::Float64, S::Float64)::Float64\n\nHeavy fuel-oil specific heat estimation in terms of relative density S as provided by Cragoe (1929). Temperature in kelvin.\n\n\n\n\n\n","category":"function"},{"location":"DryCombustion/#DryCombustion.hfo_enthalpy_net_bs2869","page":"DryCombustion","title":"DryCombustion.hfo_enthalpy_net_bs2869","text":"hfo_enthalpy_net_bs2869(;\n    ρ::Float64,\n    x::Float64,\n    y::Float64,\n    s::Float64\n)::Float64\n\nHeavy fuel-oil net energy capacity accordinto to BS2869:1983. Value is computed in [MJ/kg]. Parameters are given as:\n\nρ: HFO density at 15 °C, [kg/m³].\nwater: Mass percentage of water, [%].\nash: Mass percentage of ashes, [%].\nsulphur: Mass percentage of sulphur, [%].\n\n\n\n\n\n","category":"function"},{"location":"DryCombustion/","page":"DryCombustion","title":"DryCombustion","text":"julia> hfo_enthalpy_net_bs2869(; ρ = 1020.0, water = 0.1, ash = 0.05, sulphur = 1.0)\n40.13509836320001","category":"page"},{"location":"References/@Fang2023a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Fang2023a/","page":"-","title":"-","text":"title: \"Ensemble learning for physics informed neural networks: a gradient boosting approach\" authors: Zhiwei Fang, Sifan Wang, Paris Perdikaris year: 2023 DOI: https://doi.org/10.48550/arXiv.2302.13143 –-","category":"page"},{"location":"References/@Fang2023a/","page":"-","title":"-","text":"Discussed in [[@Guo2023c]].","category":"page"},{"location":"References/@Karniadakis2021a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Karniadakis2021a/","page":"-","title":"-","text":"title: Physics-informed machine learning authors: George Em Karniadakis, Ioannis G. Kevrekidis, Lu Lu, Paris Perdikaris, Sifan Wang, Liu Yang year: 2021 –-","category":"page"},{"location":"References/@Guo2023b/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2023b/","page":"-","title":"-","text":"title: \"Unraveling the design pattern of physics-informed neural networks: Series 02\" authors: Shuai Guo year: 2023 URL: TODO –-","category":"page"},{"location":"References/@Lehrer1930/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Lehrer1930/","page":"-","title":"-","text":"title: Über das eisen-wasserstoff- ammoniak-gleichgewicht authors: E. Lehrer year: 1930 –-","category":"page"},{"location":"References/@Plessis1988/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Plessis1988/","page":"-","title":"-","text":"title: Mathematical modelling of flow through consolidated isotropic porous media authors: J. Prieur Du Plessis, Jacob H. Masliyah year: 1988 URL: TODO –-","category":"page"},{"location":"References/@Liu1993/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Liu1993/","page":"-","title":"-","text":"title: Modeling the effects of drop drag and breakup on fuel sprays authors: Alex B. Liu, Daniel Mather, Rolf D. Reitz year: 1993 URL: \" https://doi.org/10.4271/930072.\" –- Also check (Reitz1987)[17].","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Physics-Informed Neural Networks (PINNs) were first introduced by [[@Raissi2017]] in the context of providing data-driven solutions of nonlinear PDE's. In what follows we review the basic concepts and approaches developed in this field during the past few years. Both mathematical and application aspects will be treated in the review.","category":"page"},{"location":"Teaching/Machine Learning/PINNs/#Common-applications","page":"-","title":"Common applications","text":"","category":"section"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"As per [[@Guo2024a]] the following common applications arise from PINNs:","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Predictive modeling and simulations","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"- Solution of dynamical systems (even high-dimensional)\n- Acceleration of multi-physics simulations","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Optimization and systems control","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"- Surrogate models for design optimization\n- Inverse design (finding conditions)\n- Model predictive control\n- Optimal sensor placement","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Data-driven insights\nData-driven enhancement\nMonitoring, diagnostic, and health assessment","category":"page"},{"location":"Teaching/Machine Learning/PINNs/#Key-Ideas","page":"-","title":"Key Ideas","text":"","category":"section"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Inject the prediction values in the governing equations to compose the loss function, enforcing the NN to obey the underlying physics.\nThere are 2 components in the loss function, the physical loss evaluated from the deviation from training data (as is commonplace in NN training) and the PDE loss, which is further divided into boundary and initial condition losses.\nCollocation points is how we call the temporal and spacial coordinates where evaluation of physical properties are computed, corresponding to nodes or cell centers in classical numerical schemes.","category":"page"},{"location":"Teaching/Machine Learning/PINNs/#Research-opportunities","page":"-","title":"Research opportunities","text":"","category":"section"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Following [[@Guo2023a]] citing the work by [[@Wu2022a]], resampling and refinement methods could be improved by better PDF's and the use of active or reinforcement learning to improve sampling.","category":"page"},{"location":"Teaching/Machine Learning/PINNs/#References","page":"-","title":"References","text":"","category":"section"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Unraveling the design pattern of physics-informed neural networks:","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Post Subject Main reference(s)\n[[@Guo2023a]] Resampling of residual points [[@Wu2022a]]\n[[@Guo2023b]] Ensemble learning and dynamic solution interval expansion [[@Haitsiukevich2022a]]\n[[@Guo2023c]] Improving performance through gradient boosting [[@Fang2023a]]\n[[@Guo2023d]] Incorporate the gradient of residual terms as an additional loss term for stiff problems [[@Yu2022a]]\n[[@Guo2023e]]  [[@Wang2023a]]\n[[@Guo2023f]]  [[@Wang2022a]]\n[[@Guo2023g]]  [[@Arthurs2021a]]","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Reference Subject\n[[@Lagaris1997a]] Seminal work on PINNs.\n[[@Antonelo2021a]] \n[[@Cai2021a]] \n[[@Cuomo2022a]] \n[[@Haitsiukevich2022a]] \n[[@Karniadakis2021a]] \n[[@Lu2019a]] \n[[@Lu2021a]] \n[[@Nabian2021a]] \n[[@Sanyal2022a]] \n[[@Wurth2023a]] Use of PINNs to solve diffusion equation (heat transfer) during the curing of composites. The paper is more focused in the application than in the implementation. Benchmark against FDM/FEM.","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"Other current readings:","category":"page"},{"location":"Teaching/Machine Learning/PINNs/","page":"-","title":"-","text":"[ ] Discovering Differential Equations with Physics-Informed Neural Networks and Symbolic Regression\n[ ] Solving Inverse Problems With Physics-Informed DeepONet: A Practical Guide With Code Implementation\n[ ] Introduction to Physics-informed Neural Networks\n[ ] Solving ODE system with PINN\n[ ] Mathematics for Machine Learning and Simulation\n[ ] Physics-Informed Neural Networks (PINNs) - An Introduction - Ben Moseley | The Science Circle\n[ ] Teaching Neural Network to Solve Navier-Stokes Equations\n[ ] Physics-Informed Neural Networks in Julia\n[ ] Scientific AI: Domain Models With Integrated Machine Learning | Chris Rackauckas | JuliaCon 2019","category":"page"},{"location":"References/@Haitsiukevich2022a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Haitsiukevich2022a/","page":"-","title":"-","text":"title: Improved training of physics-informed neural networks with model ensembles authors: Katsiaryna Haitsiukevich, Alexander Ilin year: 2022 URL: https://doi.org/10.48550/arXiv.2204.05108 –-","category":"page"},{"location":"References/@Guo2023e/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2023e/","page":"-","title":"-","text":"title: \"Unraveling the design pattern of physics-informed neural networks: Series 05\" authors: Shuai Guo year: 2023 URL: https://towardsdatascience.com/unraveling-the-design-pattern-of-physics-informed-neural-networks-part-05-67a35a984b23 –-","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Introductory","page":"-","title":"Introductory","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/#Basilisk-basics","page":"-","title":"Basilisk basics","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Tutorial\nCode 01-Tutorial-Basics\nNotes Basilisk is a conceptual solver for investigating problems in a Cartesian domain.<br><br>Different steps of the simulations are set by event's, which use a specific syntax do indicate whether they depend on a time or iteration condition. These steps might include setup of initial conditions, storage of intermediate results or solution, grid refinement, etc.<br><br>For iterating over arrays Basilisk provides a foreach()loop extending the C-language.<br><br>A standard Makefile is provided by Basilisk for managing common workflows.<br><br>Check the tips.","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Game-of-life","page":"-","title":"Game of life","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Conway’s game of life\nCode 02-Game-of-life\nNotes A simple implementation of Conway's game of life to get used with syntax.","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Brusselator","page":"-","title":"Brusselator","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Coupled reaction-diffusion equations\nCode 03-Brusselator\nNotes Solves the 2D Brusselator, a theoretical autocatalytic reaction diffusion system. The set of parameters used in the study for the stable Turin points where the ones proposed by (Pena2001a)[18]. Interesting material for preparing courses extending this to other oscillating systems can be found here.","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Ginzburg-Landau","page":"-","title":"Ginzburg-Landau","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference The complex Ginzburg-Landau equation\nCode 04-Ginzburg-Landau\nNotes Solves the complex Ginzburg-Landau equation describing the nonlinear evolution of disturbances near the transition from a stable to unstable state of a system. Additional materials are provided here. It would be a good project to include the term alpha in the equation and the Laplacian term that goes with it.","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Distance-field","page":"-","title":"Distance field","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Distance field computation from a 3D model\nCode 05-Distance-Field\nNotes This can be seen as a particular case of pre-/post-processing. It can prove useful when initializing domains with scanned surfaces in STL or other compatible format. Additional steps must be taken for compilation with rendering (modifications to Makefile). Iteration over dimensions can be done with foreach_dimension().","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Wavelet-transform","page":"-","title":"Wavelet transform","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Wavelet transforms and filtering\nCode 06-Wavelet-Transform\nNotes Provides a tutorial on wavelet transform and associated filters. It is presented as the basis to understand mesh adaptation in Basilisk. Recommended reading of (Sweldens1998a)[19].","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Navier-Stokes-equation","page":"-","title":"Navier-Stokes equation","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/#Decaying-turbulence","page":"-","title":"Decaying turbulence","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Decaying two-dimensional turbulence\nCode 07-Decaying-Turbulence\nNotes For solving Euler equation with vorticity-stream formulation one uses header file navier-stokes/stream.h. The examples makes a first usage of dimensional quantities for vorticity initialization.","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Vortex-street","page":"-","title":"Vortex street","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Bénard–von Kármán Vortex Street for flow around a cylinder\nCode 08-Vortex-Street\nNotes Solves the flow around a solid object using the navier-stokes/centered.h solver and introduced the use of passive scalars (tracer). Notice we modify L0, which among many other magic variables is defined in common.h. Illustrates the use of solid and intersection to accomplish complex domains.","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Vortex-shedding","page":"-","title":"Vortex shedding","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Vortex shedding behind a sphere\nCode 09-Vortex-Shedding\nNotes Solution of Navier-Stokes equations in an adaptive domain embedding an sphere. Vortex detection is made with functionalities from lambda2.h implemented following (Jeong1995a)[20].","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Porous-medium","page":"-","title":"Porous medium","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Stokes flow through a complex 3D porous medium\nCode 10-Porous-Medium\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Periodic-box","page":"-","title":"Periodic box","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Forced isotropic turbulence in a triply-periodic box\nCode 11-Periodic-Box\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Two-phase-flows","page":"-","title":"Two-phase flows","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/#Pulsed-atomization","page":"-","title":"Pulsed atomization","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Atomisation of a pulsed liquid jet\nCode 12-Pulsed-Atomisation\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Bubble-rising","page":"-","title":"Bubble rising","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Bubble rising in a large tank\nCode 13-Bubble-Rising\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Rotating-cylinder","page":"-","title":"Rotating cylinder","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Flow in a rotating bottom-driven cylindrical container\nCode 14-Rotating-Cylinder\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Moving-Tangaroa","page":"-","title":"Moving Tangaroa","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Two-phase flow around RV Tangaroa\nCode 15-Moving-Tangaroa\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Geophysical-applications","page":"-","title":"Geophysical applications","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/#Indian-Tsunami","page":"-","title":"Indian Tsunami","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference The 2004 Indian Ocean tsunami\nCode 16-Indian-Tsunami\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Tohoku-Tsunami","page":"-","title":"Tohoku Tsunami","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference The 2011 Tohoku tsunami\nCode 17-Tohoku-Tsunami\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Train-of-Solitons","page":"-","title":"Train of Solitons","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Breakup of a rectangular perturbation into a train of solitons\nCode 18-Train-of-Solitons\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Lee-Waves","page":"-","title":"Lee Waves","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Tidally-induced internal lee waves\nCode 19-Lee-Waves\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Ellipsoidal-Shoal","page":"-","title":"Ellipsoidal Shoal","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Periodic wave propagation over an ellipsoidal shoal\nCode 20-Ellipsoidal-Shoal\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Ellipsoidal-Shoal-Multilayer","page":"-","title":"Ellipsoidal Shoal Multilayer","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Periodic wave propagation over an ellipsoidal shoal (multilayer)\nCode 21-Ellipsoidal-Shoal-Multilayer\nNotes Check for source code in current version.","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Stokes-Wave","page":"-","title":"Stokes Wave","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference 3D breaking Stokes wave (multilayer solver)\nCode 22-Stokes-Wave\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Transcritical-Flow","page":"-","title":"Transcritical Flow","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Transcritical flow over a bump\nCode 23-Transcritical-Flow\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Shock-Instability","page":"-","title":"Shock Instability","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference A Shallow Water Analogue for the Standing Accretion Shock Instability\nCode 24-Shock-Instability\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Python-interface","page":"-","title":"Python interface","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/#Basic-usage","page":"-","title":"Basic usage","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Python interface\nCode 25-Python-Interface\nNotes ","category":"page"},{"location":"Teaching/Basilisk/Tutorials/#Poisson-equation","page":"-","title":"Poisson equation","text":"","category":"section"},{"location":"Teaching/Basilisk/Tutorials/","page":"-","title":"-","text":"Reference Poisson problem with Python\nCode 26-Python-Poisson\nNotes ","category":"page"},{"location":"References/@Balaji2014/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Balaji2014/","page":"-","title":"-","text":"title: Essentials of radiation heat transfer authors: C. Balaji year: 2014 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZoCdJkJqcjDRZVs9J?e=mbefIU –-","category":"page"},{"location":"References/@Kramers1952/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Kramers1952/","page":"-","title":"-","text":"title: The passage of granular solids through inclined rotary kilns authors: H. Kramers, P. Croockewit year: 1952 –-","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"title: Principles of combustion engineering for boilers authors: C. J. Lawn year: 1987 –-","category":"page"},{"location":"References/@Lawn1987/#Chapter-2-The-combustion-of-HFO","page":"-","title":"Chapter 2 - The combustion of HFO","text":"","category":"section"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Main constituents: paraffins, naphthenes (C_5-C_9), and aromatics. Specially useful due to its high specific energy content and high density (easy to transport), easily atomized, and almost completely combustible.","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Correlation index CI against relative density S and reciprocal of average boiling point is a good indicator of oil major components:","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"\nCI = 4739S - 4568 + frac48640T_B\nquadbegincases\nCI  50       textPredominantly aromatic components6pt\n15  CI  50  textMainly naphthenes or a mixture of all types6pt\n15  CI       textPredominantly paraffinic components\nendcases\n","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Typical elemental composition (given in mass percentages):","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Element wt%\nCarbon 83-87\nHydrogen 10-14\nSuphur 0.05-6\nNitrogen 0.1-2\nOxygen 0.05-1.5","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Viscosity is highly dependent on temperature and used to control the characteristics of atomization in burners; for class G (main industrial application) of BS 2869 the typical kinematic viscosity at 80 °C is limited to 85 cSt; its maximum water content is 1% and ash production 0f 0.25% (see Table II for details and other classes). Viscosity is known to deviate from Newtonian at near pour point and the boiling point of its more volatile components.","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"When decreasing the hydrogen to carbon ratio the specific energy is also decreased, and this follows an increase of specific density of fuels. According to BS 2869, the net calorific value can be estimated from the density of the oil rho_lkgcdotpl^ -1 at 15 °C:","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"\nDeltaH_net=left(46423-8792rho_l^2+3170rho_lright)left(1-x-y-sright)+9420s-2449x\n","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"where x is the mass fraction of water, y the mass fraction of ash, and s the mass fraction of Sulphur; the resulting value is provided in MJcdotpkg^-1. Deviations are reported to be less than 1% when compared to bomb calorimetry data. Regarding specific heat a quite old (Cragoe, 1929) relationship based on relative density S is given in Jcdotpkg^-1 as:","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"\nc_p = frac1683 + 339TS\n","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Typical value of surface tension are generally around 24-38times10^-3Ncdotpm^-1 at 20 °C and present a typical slope of -007times10^-3Ncdotpm^-1K^-1 from room temperature up to 120 °C. Notice that this may be highly affected by actual fuel composition, so estimations must be used with care.","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Combustion characteristics in general: maximum droplet heating rate around 10^5Kcdotps^-1 and flame temperatures of 2120K, with a fuel residence time 2s. Droplets are generally injected from fractions of micron to 500mum. The mechanism of combustion generally happens as follows:","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"Volatiles phase: occurs between 250-350 °C and is characterized by the formation of a volatiles shell around the droplets, giving an aspect of granularity. It evolves till the unset of boiling, which occurs quite sharply somewhere in range 300-400 °C. Boiling leads to distortion and swealing, favoring breakup; several ejections might occur at this stage. The competing mechanisms during this phase are distillation and pyrolysis; the fuel composition and heating rate will determine the prevailing one.\n","category":"page"},{"location":"References/@Lawn1987/","page":"-","title":"-","text":"See figures 8-9 of reference for more details regarding droplet history.","category":"page"},{"location":"References/@Haider1989/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Haider1989/","page":"-","title":"-","text":"title: Drag coefficient and terminal velocity of spherical and nonspherical particles authors: A. Haider, O. Levenspiel year: 1989 URL: TODO –-","category":"page"},{"location":"References/@Crank1996/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Crank1996/","page":"-","title":"-","text":"title: \"A practical method for Numerical evaluation of solutions of partial differential equations of the heat-conduction type\" authors: J. Crank, P. Nicolson year: 1996 –-","category":"page"},{"location":"References/@Onsager1931a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Onsager1931a/","page":"-","title":"-","text":"title: Reciprocal relations in irreversible processes. II. authors: Lars Onsager year: 1931 –-","category":"page"},{"location":"References/@Sanchez2023a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Sanchez2023a/","page":"-","title":"-","text":"title: \"Biomass combustion modeling using OpenFOAM: Development of a simple computational model and study of the combustion performance of lippia origanoides bagasse\" authors: Gabriel Fernando García Sánchez, Jorge Luis Chacón Velasco, David Alfredo Fuentes Díaz, Yesid Javier Rueda-Ordóñez, David Patiño, Juan Jesús Rico, Jairo René Martínez Morales year: 2023 URL: https://doi.org/10.3390/en16062932 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZlbEgWeJ66H4-cfxBiQ?e=YQGseW –-","category":"page"},{"location":"Teaching/Machine Learning/#Table-of-Contents","page":"Machine Learning","title":"Table of Contents","text":"","category":"section"},{"location":"Teaching/Machine Learning/","page":"Machine Learning","title":"Machine Learning","text":"Notes on Data driven science and engineering\nPhysically informed neural networks","category":"page"},{"location":"References/@Sweldens1998a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Sweldens1998a/","page":"-","title":"-","text":"title: \"The lifting scheme: A construction of second generation wavelets\" authors: Wim Sweldens year: 1998 URL: https://doi.org/10.1137/S0036141095289051 Drive: –-","category":"page"},{"location":"References/@Tensorflow2015Whitepaper/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Tensorflow2015Whitepaper/","page":"-","title":"-","text":"title: \"TensorFlow: Large-scale machine learning on heterogeneous systems\" authors: Martín Abadi, Ashish Agarwal, Paul Barham, Eugene Brevdo, Zhifeng Chen, Craig Citro, Greg S. Corrado, Andy Davis, Jeffrey Dean, Matthieu Devin, Sanjay Ghemawat, Ian Goodfellow, Andrew Harp, Geoffrey Irving, Michael Isard, Yangqing Jia, Rafal Jozefowicz, Lukasz Kaiser, Manjunath Kudlur, Josh Levenberg, Dandelion Mané, Rajat Monga, Sherry Moore, Derek Murray, Chris Olah, Mike Schuster, Jonathon Shlens, Benoit Steiner, Ilya Sutskever, Kunal Talwar, Paul Tucker, Vincent Vanhoucke, Vijay Vasudevan, Fernanda Viégas, Oriol Vinyals, Pete Warden, Martin Wattenberg, Martin Wicke, Yuan Yu, Xiaoqiang Zheng year: 2015 DOI: https://doi.org/10.5281/zenodo.4724125 –-","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/#Granular-flows","page":"-","title":"Granular flows","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"Parcel is a computational particle unit that may be composed of several particles which are all identical sharing a state, which include velocity, size, temperature, etc. See (ORourke2010)[21] for details.\nCloud is the term OpenFOAM uses to describe particle flows. Here we will use both MPPICCloud andcollidingCloud, other types being available for reacting or multiphase solvers, such as thermoCloud.","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/#Technological","page":"-","title":"Technological","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"Siwek chamber is a reactor often used to determine the dispersion of solid fuels for combustion. Validation of simulations can be done through this and this paper. Other than the OpenFOAM case there is also this setup available on Fetch CFD.","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/#Mathematical","page":"-","title":"Mathematical","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"Hopf bifurcation  is a critical point where, as a parameter changes, a system's stability switches and a periodic solution arises. (see this).","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/#Combustion","page":"-","title":"Combustion","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"HyChem is an approach for modeling combustion of real liquid fuels by decomposing the problem into a lumped parameter model of evaporation/devolatilization and a detailed or simplified chemical kinetics approach applied to the gas phase. It is available for high-end fuels such as jet fuel and gasoline.","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/#Condensate-fuel-combustion","page":"-","title":"Condensate fuel combustion","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"This matter enters a intrinsically multiphysics domain and problem formulation needs to take into account at what level the model is required to act. For liquids, that might include spray droplets formation, evaporation, devolatilization, mass transfer to gas phase, and finally, oxidation kinetics of gas products. In the case of solids, due to high uncertainty and variability in material properties, and complex mass transfer phenomena, one must expect qualitative or semi-quantitative agreement of models and measurements. Furthermore, lumped-parameter modeling is a requirement in the field, making it difficult to be generalized to a physical level as of today.","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"[[@Saario2005a]] used Ansys Fluent to simulate HFO (heavy-fuel oil) combustion using the standard mixture fraction approach coupled to a Lagrangian particle tracking for evaporating droplets and k-epsilon turbulence modeling. This is a highly standard industrial application of global combustion simulation from an energy standpoint but lacks the generality of considering a detailed chemistry of gas phase (for instance, for coupling with solid calcination reactions, if that is the case).","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"[[@Garaniya2012a]] used StarCD to simulate HFO in the context of ship engines. From the same authors (Garaniya2012b)[22], we also have the the thermodynamic formulation of the problem.","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"[[@Nowruzi2014]] successfully simulated a spray jet of HFO with OpenFOAM without accounting for chemistry and combustion. In the absence of a proper PSD (particle size-distribution) this step is required to initialize a simulation, but can hardly be integrated in a reacting flow simulation, which would become overly complex. ","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"[[@Sanchez2023a]] studied the combustion of biomass with help of OpenFOAM with some semi-quantitative results within 13% from the measurements, what is already considered a very good agreement in the field.","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"[ ] Continue the research here.","category":"page"},{"location":"Teaching/Transport Phenomena/AX-Drafts/#Combustion-of-heavy-oil-fuel","page":"-","title":"Combustion of heavy oil fuel","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/AX-Drafts/","page":"-","title":"-","text":"[[@Lawn1987]]","category":"page"},{"location":"References/@Aissa2015a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Aissa2015a/","page":"-","title":"-","text":"title: Ranz and Marshall correlations limits on heat flow between a sphere and its surrounding gas at high temperature authors: Abderrahmane Aissa, Mohamed Abdelouahab, Abdelkader Noureddine, Mohammed Elganaoui, Bernard Pateyron year: 2015 –-","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"Notes based on Data-Driven Science and Engineering by Steven L. Brunton and J. Nathan Kurz. Their proposed teaching materials for the book can be found here. Supplementary notes that might be useful for understanding the concepts are provided in course AMATH301. The set of open source materials proposed by Kurz's team is found here.","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/#Singular-Value-Decomposition","page":"-","title":"Singular Value Decomposition","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Fourier-and-Wavelet-Transforms","page":"-","title":"Fourier and Wavelet Transforms","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Sparsity-and-Compressed-Sensing","page":"-","title":"Sparsity and Compressed Sensing","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Regression-and-Model-Selection","page":"-","title":"Regression and Model Selection","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Clustering-and-Classification","page":"-","title":"Clustering and Classification","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Neural-Networks-and-Deep-Learning","page":"-","title":"Neural Networks and Deep Learning","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Data-Driven-Dynamical-Systems","page":"-","title":"Data-Driven Dynamical Systems","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Linear-Control-Theory","page":"-","title":"Linear Control Theory","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Balanced-Models-for-Control","page":"-","title":"Balanced Models for Control","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Data-Driven-Control","page":"-","title":"Data-Driven Control","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Reduced-Order-Models-(ROMs)","page":"-","title":"Reduced Order Models (ROMs)","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#POD-for-Partial-Differential-equations-(11.1)","page":"-","title":"POD for Partial Differential equations (11.1)","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"(Image: )","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"Proxy models are much faster (lower dimensional)\nClassical discretization (FD) lead to high dimensional schemes\nModel expansion can produce much lower dimension problems","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"u(xt) = sum_k=1^na_k(t)psi_k(x)","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"Idea: plug the modal expansion in the PDE and expand it\nWith modal basis the approximations are non-local (global)\nOption 1: Fourier mode expansion - FFT","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"psi_k(x)=frac1Lexpleft(ifrac2pikxLright)","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"Goal: try to approximate with r basis instead of large n\nExample: try to approximate a Gaussian with FME\nLocalized structures require more expansion modes\nConstruction similar to spectral methods","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/#Optimal-Basis-Elements-(11.2)","page":"-","title":"Optimal Basis Elements (11.2)","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"(Image: )","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"Key idea: simulate the dynamics of the system and save snapshots of time-step solutions to then identify a modal expansion.\nThe tildeU POD basis psi_k found by truncating the SVD matrix U at rank r is the optimal in the L^2 sense for the given data.\nUse energy accumulated in modes as discussed in Chapter 1 Singular Value Decomposition to define the optimal (or good enough) value of r.\nThe produced ROM is not assured to be safe outside the subspace to which it was identified, though that is fine for several physics.","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/#POD-and-Soliton-Dynamics-(11.3)","page":"-","title":"POD and Soliton Dynamics (11.3)","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"(Image: )","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/#Continuous-Formulation-of-POD","page":"-","title":"Continuous Formulation of POD","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"(Image: )","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/#POD-with-Symmetries","page":"-","title":"POD with Symmetries","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"(Image: )","category":"page"},{"location":"Teaching/Machine Learning/Data-Driven/#Interpolation-for-Parametric-ROMs","page":"-","title":"Interpolation for Parametric ROMs","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/#Additional-materials","page":"-","title":"Additional materials","text":"","category":"section"},{"location":"Teaching/Machine Learning/Data-Driven/","page":"-","title":"-","text":"(Image: Professor Nick Trefethen, University of Oxford, Linear Algebra Optimization)","category":"page"},{"location":"References/@Zuo2000a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Zuo2000a/","page":"-","title":"-","text":"title: Modelling superheated fuel sprays and vaproization authors: B. Zuo, A. M. Gomes, C. J. Rutland year: 2000 URL: https://doi.org/10.1243/1468087001545218 –-","category":"page"},{"location":"toc/#Table-of-contents","page":"Table of Contents","title":"Table of contents","text":"","category":"section"},{"location":"toc/","page":"Table of Contents","title":"Table of Contents","text":"Depth = 4","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/#Applications-to-mass-and-energy-transfer","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/#Derivation-of-conservation-equations","page":"Applications to mass and energy transfer","title":"Derivation of conservation equations","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"In the nineteenth century, Fick demonstrated empirically that the flux density of a species submitted to gradient field responded linearly to its concentration c gradient. Notice here c takes the place of the more general b in the conservation form derivation. In the more general case we should use subindexes for species concentrations and diffusivities, but that will be neglected here.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nvecFpropto-nablac\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"This is actually the simplest form of diffusion modeling and, in general, is valid only in very specific cases, i.e. when a single species is being transported in a system without the effect of other components. Introducing a proportionality coefficient D, the diffusivity, we have:","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nvecF=-Dnablac\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Using this expression in our conservation equation leads to:","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nfracpartialcpartialt - nablacdotpleft(Dnablacright) - R_v = 0\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Under the very specific case where there is no volumetric production rate R_v, i.e. no chemical reactions, and constant diffusivity D, i.e. no composition or space dependence, this simplifies to the well-studied form of the so called Fick's second law:","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nfracpartialcpartialt = Dnabla^2c\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"This expression happens to be isomorph with heat diffusion equation for a constant specific heat medium because Fourier's law is analogous to Fick's first law, leading to the same final mathematical form. Using the thermodynamic definition dh=rhoc_pdT we have","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nfracpartialTpartialt = frackrhoc_pnabla^2T\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"It must be noticed that in the general case, the quantity being transported in heat equation is the enthalpy density h and the potential field is linearized in terms of temperature T through Fourier's equation. Without the constant specific heat simplification and with variable thermal conductivity k it is stated as:","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nfracpartialhpartialt = nablacdotpleft(knablaTright)\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Other than for very simple enthalpy-specific heat relationships (such as the constant approximation discussed above), this PDE must be solved numerically with a coupled system of nonlinear equations for computing the field of temperatures in terms of enthalpies. In the above we neglect the volumetric heat production rate, which would be present, e.g. in a reacting system or a material undergoing nuclear fission.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/#Formulation-of-boundary-conditions","page":"Applications to mass and energy transfer","title":"Formulation of boundary conditions","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"When dealing with mass and heat transfer in the absence of more exotic physics such as electromagnetic effects, a pair of possible descriptions for the boundary fluxes arise; the first must be provided as a closure model for the surface species production rates R_s for mass transfer, and heat generation rate q_s for heat transfer; the other possibility is to assume the medium outside of the modeled domain is a reservoir with constant b_infty, the the proper b depending on the phenomena being described. The latter is generally modeled through a constitutive law under the form vecF=hleft(b-b_inftyright), where h is introduced as a transfer coefficient.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\n-vecncdotpDnablac=\nbegincases\nR_s6pt\nh_m(c-c_infty)\nendcases\nqquadtextandqquad\n-vecncdotpknablaT=\nbegincases\nq_s6pt\nh_e(T-T_infty)\nendcases\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"The actual meaning of h, be for mass transfer h_m or energy h_e depends of the physics being approximated in the external reservoir. There are specific, generally (semi-)empirical methods for evaluating reasonable values for the analysis of their values; this will be the subject of a future topic because the current context is still focused in general principles.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"As a side note, it is worth mentioning here that in analytical methods the b_infty is treated as constant because otherwise analysis could grow exponentially in complexity. For the numerical solution of models it can be often treated as an explicit time function. For instance, imagine a material treatment where pulses of a reacting species are controlled and their concentration in the reactor is known in time; if modeling the solid state uncoupled from the reactor - what is generally the case due to computational time limitations - then the value of b_infty can be provided explicitly, keeping in mind that h can also be a function of this value or surface concentration, depending on the closure model used for the specific simulation.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/#Microscopic-models-of-diffusion","page":"Applications to mass and energy transfer","title":"Microscopic models of diffusion","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"The models discussed so far are in fact the macroscopic response to discrete phenomena happening at the atomic and molecular scales. Particles moving randomly due to thermal energy in a fluid or solid follow a path described by a probability density function in steps that in most cases happen at a typical rate due to these thermal fluctuations.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/#Diluted-mixtures","page":"Applications to mass and energy transfer","title":"Diluted mixtures","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"In the most simple of cases, a non-interacting particle in a dilute mixture performs a random walk; when many such particles are present in one part of the domain, as we will show later, the resulting gradient of concentration that will be established over a sufficiently large amount of time leads to Fick's law. The terminology was created by Pearson (1905) for which Rayleigh (1905) had already found a solution many years beforehand; is also appears in the solution of Brownian motion by Einstein (1905) (translated here) and turbulent diffusion by Taylor (1922).","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"In the derivation of diffusion equation, following the already mentioned non-interacting particles hypothesis, one also needs steps to be independent, identically distributed (IDD) and limited by a finite variance sigma^2, i.e. p(xpmKsigma)to0 quickly for some finite K.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nP_N+1(x) = intP_N(x-y)p(y)dy = (P_N ast p)(x)\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"The probability P_N+1(x) that a particle is found at x at step N+1 is equal to the sum of the probabilities p(y) of particles at a distance y from x execute a movement of such amplitude to reach x times the probability of a particle being at the position P_N(x-y).","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nP_N = (P_0 ast p ast p ast dots p)(x) = (P_0 ast p^astN)(x)\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nbeginalign\nP_N+1(x)\n= intleft(P_N(x) - yP_N^prime(x) + dfrac12y^2P_N^primeprime(x)right)p(y)dy\n\n=P_N(x)intp(y)dy - P_N^prime(x)intyp(y)dy + dfrac12P_N^primeprime(x)inty^2p(y)dy\n\n=P_N(x) - langleyrangleP_N^prime(x) + dfrac12langley^2rangleP_N^primeprime(x)\nendalign\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"The fourth and last requirement now is that process take place with a finite mean step langletaurangle:","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\ndfracP_N+1(x) - P_N(x)langletaurangle + dfraclangleyranglelangletaurangleP_N^prime(x) = dfraclangley^2rangle2langletaurangleP_N^primeprime(x)\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Introducing c(x-vtt)simP_N(x-vt) with t=Nlangletaurangle","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"[!todo] Finish the additional Taylor expansion from the above expression to get formally to the final result provided below.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\ndfracpartialcpartialt + vdfracpartialcpartialx = Ddfracpartial^2cpartialx^2\n\nquadtextwherequadv=dfraclangleyranglelangletaurangle\n\nquadtextandquadD=dfraclangley^2rangle-langleyrangle^22langletaurangle\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"[!info] More about this in chapter 4 of (Mehrer2007)[23].","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/#Concentrated-mixtures","page":"Applications to mass and energy transfer","title":"Concentrated mixtures","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"On the other limit one finds the concentrated mixtures for which particle-particle interactions intervene on the probability distribution of motion and results obtained through non-equilibrium thermodynamics lead to a more complex law. Particle interactions may be simple collisions or involve more complex physics, such as electrodynamic forces; a direct solution through statistical approaches in this case quickly becomes intractable mathematically.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"In what follows we will derive the diffusion equation from the aforementioned thermodynamic principles. The chemical potential (for more see this annex) is defined as the sensitivity of Gibbs free energy G with respect to the number of moles N of a substance. Expressed in terms of activity a we have:","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nmu = dfracpartialGpartialN=mu^theta+k_BTln(a)\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"The activity of non-ideal solutions is itself a function of a relative concentration tildec through a proportionality coefficient gamma, the so-called activity coefficient, which by its turn can also be a function of composition. The reference concentration c_sat to the definition of tildec is the concentration at which a phase change happens; that said, the activity may be seen as a measure of the tendency towards phase change. This is all expressed as","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\na=gammatildecqquadtextwhereqquadtildec=dfraccc_sat\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Now let's Einstein relationship between mobility M and the diffusivity D. Mobility is defined as the capacity a given force is able to produce a net drift velocity in the system; it is related to D as","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nM = dfractextdrift velocitytextforce =dfracDk_BT\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"From linear irreversible thermodynamics (LIT) we can express the flux as","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nvecF=-Mcnablamu=vecv_driftcqquadtextwhereqquadvecv_drift = -Mnablamu\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"[!info] The development of (LIT) is found in (Onsager1931)[24] and the following (Onsager1931a)[25]. Notice that the above paragraph needs more grounding, it has been thrown in the text as a truth without first-principles demonstration and that is against our goals here!","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Because log(tildec)=log(c)-log(c_sat) and c_sat is a constant, then developing nablamu leads to","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nnablamu = k_BTleft(dfrac1c+dfrac1gammadfracpartialgammapartialcright)nablac\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Applying this result to the previous expression and reworking the terms leads to","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nvecF=-Dleft(1 + dfraccgammadfracpartialgammapartialcright)nablac=-Dleft(1 + dfracpartiallngammapartiallncright)nablac\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"Here we can identify the chemical diffusivity by comparison with Fick's law as","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"\nD_chem = -Dleft(1 + dfracpartiallngammapartiallncright)\n","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/","page":"Applications to mass and energy transfer","title":"Applications to mass and energy transfer","text":"In the above expression, the second term in the sum is called the thermodynamic factor. In the limit of dilute system for which gamma=1 we fall back to D_chem=D, showing that the concentrated mixture approach is a proper generalization of the previous model for diluted systems.","category":"page"},{"location":"Teaching/Transport Phenomena/02-Applications-to-mass-and-heat-transfer/#Application-to-diffusion-in-a-lattice","page":"Applications to mass and energy transfer","title":"Application to diffusion in a lattice","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/#Drag-models","page":"Drag models","title":"Drag models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"The simplest drag model supported by discrete phase models in OpenFOAM is the sphereDrag option implemented as described by (Amsden1989)[26]. Its application domain is targeted to describe fuel droplet particles in air. The drag coefficient in this case is defined in terms of particle Reynolds number mathrmRe_d as","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"\nC_D = begincases\ndfrac24mathrmRe_dleft(1 + dfracmathrmRe_d^236right) mathrmRe_dle100012pt\n\n0424textotherwise\nendcases\n","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"where mathrmRe_d is expressed as","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"\nmathrmRe_d = dfracrhovertu+u^prime-vdmu(hatT)quadtextwherequadhatT=dfracT+2T_d3\n","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"With these expressions and making C_D^prime=C_DmathrmRe_d we have the drag force over a particle of diameter d expressed as","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"\nvecF=dfrac34dfracmmu(hatT)C_D^primerho_dd^2\n","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"[!todo] The code implementation already provides both mu(hatT) and mathrmRe_d computed to the drag model. Additional inspection on how these quantities are evaluated is required. Also note that (Amsden1989)[26] provides the equations formulated in the radius, not diameter, what might generate some confusion.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"This formulation is also used as part of distortedSphereDrag implementation , which makes use of the same C_D now referred to as C_Dsphere with a modified law accounting for particle distortion in the breakup mechanism of fuel sprays, as discussed by (Liu1993)[12]. The updated drag coefficient is then expressed in terms of drop distortion y from TAB (Taylor Analogy Breakup) model from (Reitz1987)[17].","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"\nC_D = C_Dsphere(1+2632y)\n","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Drag-Models/","page":"Drag models","title":"Drag models","text":"[!info] The distortedSphereDrag model is not available for MPPIC clouds and it is also not used anywhere in the tutorials or source code. For not it does not work yet apparently.","category":"page"},{"location":"DryGranular/#DryGranular","page":"DryGranular","title":"DryGranular","text":"","category":"section"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"CurrentModule = DryGranular\nDocTestSetup  = quote\n    using Statistics\n    using DryGranular\nend\nEditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/DryGranular/index.md\"","category":"page"},{"location":"DryGranular/#General-porous-media","page":"DryGranular","title":"General porous media","text":"","category":"section"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"Modeling of geometrical characteristics of porous beds is required for including both their thermal effect or role over chemistry in chemical reactors. A classical approach used in several commercial and open source tools is that of (Gunn1978)[1]. In what follows we develop the ideas that lead to an analogous model which is implemented by this structure.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"To build the model we will assume a reactor of constant rectangular cross-section A_r=bw and volume V_R=bwh. Its cross-section perimeter is then P_R=2(b+w). Inside this reactor we randomly pack cubic particles beta of surface area A_beta=6l_beta^2 and volume V_beta=l_beta^3 at a porosity level phi. Thus the total volume of solids inside the reactor is V_S=(1-phi)V_R and the approximate number of particles N=fracV_SV_beta. Following a similar reasoning the total surface area of particles is A_S=NA_beta. Performing all the substitutions so far one finds the following expression","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"A_S=frac6(1-phi)bwhl_beta","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"Since the differential dA=Pdl holds for the surface of a body over its length l, one can divide the above expression by the reactor length to get the perimeter of particles in a cross-section. We can further divide by the cross-section area itself and find the perimeter density which is a more general result, and find the expression proposed by (Gunn1978)[1]. This result is summarized in the next equation where the subscript of particle size was dropped for generality.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"P = frac6(1-phi)l","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"An estimator of the number of channels per unit cross-section of reactor N can be related to the porosity through NpiR^2=phi. Because the above perimeter is shared between the fluid volume and solids, it holds that N2piR=P. Using these expressions one can solve for the porosity channels characteristic radius R as given below, which is also a result reported by (Gunn1978)[1].","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"R=fracphil3(1-phi)","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"This model is probided in PackedBedPorosityDescriptor.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"DryGranular.PackedBedPorosityDescriptor","category":"page"},{"location":"DryGranular/#DryGranular.PackedBedPorosityDescriptor","page":"DryGranular","title":"DryGranular.PackedBedPorosityDescriptor","text":"Provides description of porosity parameters with stochastic behavior.\n\nϕ::Union{Float64, Vector{Float64}}: Porosity volume fraction in medium [-].\nl::Union{Float64, Vector{Float64}}: Characteristic particle size in medium [m].\nσϕ::Union{Nothing, Float64}: Optional standard deviation of porosity volume fraction  [-].\nσl::Union{Nothing, Float64}: Optional standard deviation of characteristic particle size [m].\nP::Union{Float64, Vector{Float64}}: Perimeter in reactor cross-section [m].\nD::Union{Float64, Vector{Float64}}: Characteristic diameter of porosity channels [m].\nA::Float64: Reactor area used for scaling perimeter [m²].\n\n\n\n\n\n","category":"type"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"PackedBedPorosityDescriptor can be used to describe the geometry of exchange section of a packed bed for a single set of arguments.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"julia> PackedBedPorosityDescriptor(; ϕ = 0.65, l = 0.10, area = 1.0)\nPackedBedPorosityDescriptor(P = 21.000000 m, D = 0.123810 m)","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"It can also be used to describe randomly varying reactors, what is a more realistic thing to do when using this structure to simulate real world systems.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"julia> PackedBedPorosityDescriptor(;\n            ϕ  = 0.65, l  = 0.10,\n            σϕ = 0.03, σl = 0.01,\n            N = 2,\n            ϕlims = (0.4, 0.8),\n            llims = (0.0, 0.3),\n            seed = 42,\n            area = 1.0\n        )\nPackedBedPorosityDescriptor(\n    P from  21.455749 m to  24.370742 m\n    D from   0.125589 m to   0.102353 m\n)","category":"page"},{"location":"DryGranular/#Rotary-kiln-models","page":"DryGranular","title":"Rotary kiln models","text":"","category":"section"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"In a rotary kiln as proposed by (Kramers1952)[2]. Its goal is to be used as a process support tool or to integrate more complex models requiring integration of the bed profile. In its classical statement, the bed height profile h(z) can be evaluated from volume of flowing material conservation through the following equations. Coordinate z=0 represents the discharge position where initial condition must be applied. This is given by the dam height, if any, or particle size.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"beginaligned\ndfracdhdz = C₁ leftfrachRleft(2 - frachRright)right^-frac32 - C₂6pt\nC₁             = frac34dfracΦtanγπ R^3 ω6pt\nC₂             = dfractanβcosγ\nendaligned","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"The structure SymbolicLinearKramersModel implements the Kramers' ordinary differential equation for prediction of bed height profile in a rotary kiln. This equation is implemented under the formalism of ModelingToolkit.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"DryGranular.SymbolicLinearKramersModel","category":"page"},{"location":"DryGranular/#DryGranular.SymbolicLinearKramersModel","page":"DryGranular","title":"DryGranular.SymbolicLinearKramersModel","text":"Creates a reusable linear Kramers model for rotary kiln simulation.\n\nR::Symbolics.Num: Symbolic kiln internal radius\nΦ::Symbolics.Num: Symbolic kiln feed rate\nω::Symbolics.Num: Symbolic kiln rotation rate\nβ::Symbolics.Num: Symbolic kiln slope\nγ::Symbolics.Num: Symbolic solids repose angle\nz::Symbolics.Num: Symbolic kiln axial coordinates\nh::Symbolics.Num: Symbolic bed height profile\nsys::ModelingToolkit.ODESystem: Problem ordinary differential equation\n\n\n\n\n\n","category":"type"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"For integration of this model we implement RotaryKilnBedSolution. It provides the solved description of a rotary kiln bed geometry computed from the solution of bed height along the kiln length. The main goal of the quantities computed here is their use with heat and mass transfer models for the simulation of rotary kiln process. A simple post-processing utilitiy plotlinearkramersmodel is also provided.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"DryGranular.RotaryKilnBedSolution\nDryGranular.plotlinearkramersmodel","category":"page"},{"location":"DryGranular/#DryGranular.RotaryKilnBedSolution","page":"DryGranular","title":"DryGranular.RotaryKilnBedSolution","text":"General geometric description of a bed from Kramers equation solution.\n\nz::Vector{Float64}: Solution coordinates [m]\nh::Vector{Float64}: Solution bed height [m]\nθ::Vector{Float64}: View angle from kiln center [rad]\nl::Vector{Float64}: Bed-freeboard cord length [m]\nA::Vector{Float64}: Local bed cross section area [m²]\nη::Vector{Float64}: Local loading based on height [-]\nηₘ::Float64: Mean loading of kiln [%]\nV::Float64: Bed integral volume [m³]\nτ::Float64: Residence time of particles\nβ::Float64: Kiln slope [rad]\n\nArguments\n\nInternal elements are initialized through the following constructor:\n\nRotaryKilnBedSolution(z, h, β, R, Φ)\n\nWhere parameters are given as:\n\nz: solution coordinates over length, [m].\nh: bed profile solution over length, [m].\nR: kiln internal radius, [m].\nΦ: kiln feed rate, [m³/s].\n\nAn outer constructor is also provided for managing the integration of an instance of SymbolicLinearKramersModel. This is the recommended usage that is illustrated below.\n\nImportant: inputs must be provided in international system (SI) units as a better physical practice. The only exception is the rotation rate ω provided in revolution multiples. If the discharge end is held by a dam, its height must be provided instead of the particle size, as it is used as the ODE initial condition.\n\nmodel: a symbolic kiln model.\nL: kiln length, [m].\nR: kiln internal radius, [m].\nΦ: kiln feed rate, [m³/s].\nω: kiln rotation rate, [rev/s].\nβ: kiln slope, [rad].\nγ: solids repose angle, [rad].\nd: particle size or dam height, [m].\nsolver: Solver for DifferentialEquations. Defaults to Tsit5.\nrtol: Relative integration tolerance. Defaults to 1.0e-08.\natol: Absolute integration tolerance. Defaults to 1.0e-08.\n\n\n\n\n\n","category":"type"},{"location":"DryGranular/#DryGranular.plotlinearkramersmodel","page":"DryGranular","title":"DryGranular.plotlinearkramersmodel","text":"plotlinearkramersmodel(\n    model::RotaryKilnBedSolution;\n    normz::Bool = false,\n    normh::Bool = false\n)::Figure\n\nStandardized plotting of RotaryKilnBedSolution bed profile. It supports normalization of axes throught keywords normz for axial coordinate and normh for bed depth.\n\n\n\n\n\n","category":"function"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"Data in next example is an SI conversion of an example from (Kramers1952)[2].","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"julia> L = 13.715999999999998;  # Kiln length [m]\n\njulia> D = 1.8897599999999999;  # Kiln diameter [m]\n\njulia> β = 2.3859440303888126;  # Kiln slope [°]\n\njulia> γ = 45.0;                # Repose angle [°]\n\njulia> d = 1.0;                 # Particle/dam size [mm]\n\njulia> Φ = 10.363965852671996;  # Feed rate [m³/h]\n\njulia> ω = 3.0300000000000002;  # Rotation rate [rev/min]\n\njulia> bed = RotaryKilnBedSolution(;\n            model = SymbolicLinearKramersModel(),\n            L     = L,\n            R     = D / 2.0,\n            Φ     = Φ / 3600.0,\n            ω     = ω / 60.0,\n            β     = deg2rad(β),\n            γ     = deg2rad(γ),\n            d     = d / 1000.0\n        );\n\njulia> bed\nRotaryKilnBedSolution(τ = 13.169938 min, ηₘ = 5.913271 %)\n\njulia> bed.τ\n790.1963002204403","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"In the following dummy example we force a very thick analytical bed solution, filling the radius of the rotary drum. ","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"julia> R = 1.0e+00;\n\njulia> Φ = 1.0e-02;\n\njulia> z = collect(0.0:0.1:10.0);\n\njulia> h = R * ones(size(z));\n\njulia> Aₐ = π * R^2 / 2;\n\njulia> Vₐ = Aₐ * z[end];\n\njulia> bed = RotaryKilnBedSolution(z, h, 0, R, Φ)\nRotaryKilnBedSolution(τ = 26.179939 min, ηₘ = 50.000000 %)","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"Next we confirm the internal evaluations of the model match the expected analytical values.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"julia> mean(bed.θ) ≈ π\ntrue\n\njulia> mean(bed.l) ≈ 2R\ntrue\n\njulia> mean(bed.A) ≈ Aₐ\ntrue\n\njulia> mean(bed.η) ≈ 0.5\ntrue\n\njulia> bed.ηₘ ≈ 50.0\ntrue\n\njulia> bed.V ≈ Vₐ\ntrue\n\njulia> bed.τ ≈ Vₐ / Φ\ntrue","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"Validation of Kramers' model is provided here.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"Finally a set of basic equations provided for process analysis.","category":"page"},{"location":"DryGranular/","page":"DryGranular","title":"DryGranular","text":"DryGranular.sullivansηₘ\nDryGranular.dimlessNΦ\nDryGranular.dimlessNₖ\nDryGranular.perrayresidence\nDryGranular.kramersnlapprox","category":"page"},{"location":"DryGranular/#DryGranular.sullivansηₘ","page":"DryGranular","title":"DryGranular.sullivansηₘ","text":"Sullivans approximation to kiln filling.\n\n\n\n\n\n","category":"function"},{"location":"DryGranular/#DryGranular.dimlessNΦ","page":"DryGranular","title":"DryGranular.dimlessNΦ","text":"Kramers (1952) dimensionless group NΦ.\n\n\n\n\n\n","category":"function"},{"location":"DryGranular/#DryGranular.dimlessNₖ","page":"DryGranular","title":"DryGranular.dimlessNₖ","text":"Kramers (1952) dimensionless group Nₖ.\n\n\n\n\n\n","category":"function"},{"location":"DryGranular/#DryGranular.perrayresidence","page":"DryGranular","title":"DryGranular.perrayresidence","text":"Compute residence time from Peray's equation.\n\n\n\n\n\n","category":"function"},{"location":"DryGranular/#DryGranular.kramersnlapprox","page":"DryGranular","title":"DryGranular.kramersnlapprox","text":"Nonlinear formulation of Kramers model approximate solution.\n\n\n\n\n\n","category":"function"},{"location":"References/@Jeong1995a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Jeong1995a/","page":"-","title":"-","text":"title: On the identification of a vortex authors: Jinhee Jeong, Fazle Hussain year: 1995 URL: https://doi.org/10.1017/S0022112095000462 Drive: –-","category":"page"},{"location":"References/@Nakayama2023/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Nakayama2023/","page":"-","title":"-","text":"title: \"Effective thermal conductivity of porous media\" authors: Akira Nakayama year: 2023 –-","category":"page"},{"location":"References/@Wu2022a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Wu2022a/","page":"-","title":"-","text":"title: A comprehensive study of non-adaptive and residual-based adaptive sampling for physics-informed neural networks authors: Chenxi Wu, Min Zhu, Qinyang Tan, Yadhu Kartha, Lu Lu year: 2022 URL: https://doi.org/10.48550/arXiv.2207.10289 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla5WOX3yVxsVYZ1BSQ?e=RJSrB2 –-","category":"page"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"The goal of this material is to provide support to teaching introductory computational fluid mechanics with aid of Basilisk. The studies are based on commented tutorials and a documentation guide extending what is already provided with the package.","category":"page"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"Before going over the tutorials, you need some C knowledge. In the future I intend to provide a synthetic version applied to Basilisk students only. For now, the referred one is pretty good.","category":"page"},{"location":"Teaching/Basilisk/Basilisk/#First-steps","page":"Basilisk","title":"First steps","text":"","category":"section"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"The source code for the studies is provided here. The repository keeps a copy of Basilisk at a version that will work with all modified tutorials. It may be eventually updated, but in that case functioning of tutorials will be tested. You will need to clone it then following the steps to compile Basilisk before starting. After building Basilisk, instead of adding variables to your environment, consider sourcing them temporarily with help of source activate.sh using the provided script.","category":"page"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"All tutorials are found under src. Just enter the tutorials you want to follow using the command line and run make. This not only will compile, but will also run and post-process results.","category":"page"},{"location":"Teaching/Basilisk/Basilisk/#Project-management","page":"Basilisk","title":"Project management","text":"","category":"section"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"Although Basilisk is a very interesting dialect of C, its documentation is still old-fashioned and lack some structuration. Also sample programs are not written to be easily managed and extended for use in variant cases. Here we propose a structure for creating better projects with Basilisk:","category":"page"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"A Basilisk project lives in its own folder: one executable means one directory.\nA simpler Makefile than Basilisk's default one is used for project building.\nThe main file is called app.c and contains a very simple structure as provided in the dummy listing bellow. All the logic of a project, i.e. the events, is implemented in separate header files that are included after Basilisk includes.","category":"page"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"// Definitions\n#define LEVEL 7\n#define ...\n\n// Basilisk includes.\n#include \"grid/multigrid.h\"\n#include \"run.h\"\n#include ...  \n\n// Project includes.\n#include \"project-base.h\"\n#include \"project-init.h\"\n#include \"project-post.h\"\n#include \"project-exec.h\"\n\nint main() {\n\tinit_grid(1 << LEVEL);\n\t...\n\trun();\n}","category":"page"},{"location":"Teaching/Basilisk/Basilisk/#Parallel-computing","page":"Basilisk","title":"Parallel computing","text":"","category":"section"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"Currently I have not tried Basilisk in parallel (actually I did so a few years back but don't really remember the steps). Since there is no dedicated tutorial for going parallel, here are the notes I am taking for writing something in that sense:","category":"page"},{"location":"Teaching/Basilisk/Basilisk/","page":"Basilisk","title":"Basilisk","text":"Tutorial isotropic.c has notes on how to run parallel in some of its parent universities supercomputers. Probably some steps there might be recycled here.","category":"page"},{"location":"References/@Haghighat2021sciann/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Haghighat2021sciann/","page":"-","title":"-","text":"title: \"SciANN: A Keras/TensorFlow wrapper for scientific computations and physics-informed deep learning using artificial neural networks\" authors: Ehsan Haghighat, Ruben Juanes year: 2021 DOI: https://doi.org/10.48550/arXiv.2005.08803 –-","category":"page"},{"location":"References/@Fadayini2021/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Fadayini2021/","page":"-","title":"-","text":"title: Simulation and optimization of an integrated process flow sheet for cement production authors: Oluwafemi M. Fadayini, Adekunle A. Obisanya, Gloria O. Ajiboye, Clement Madu, Tajudeen O. Ipaye, Taiwo O. Rabiu, Shola J. Ajayi, Joseph T. Akintola year: 2021 –-","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#Dimensionless-groups","page":"Dimensionless groups","title":"Dimensionless groups","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#G","page":"Dimensionless groups","title":"G","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Grashof: Ratio of buoyancy to viscous forces defined as mathrmGr=fracgbeta(T_s-T_infty)L^3nu^2 and is analogous to Reynolds number in natural convection. Increasing the value of this number above a given threshold promotes buoyancy driven flow.","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#K","page":"Dimensionless groups","title":"K","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Knudsen: Particles mean free path over system characteristic dimension. Division between rarefied gas (Boltzmann) and continuum mechanics (Navier-Stokes).","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#N","page":"Dimensionless groups","title":"N","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Nusselt: Ratio of convective to conductive heat transfer at a boundary in a fluid, defined as mathrmNu=frachLk. Often in buoyancy-driven flow analysis it is correlated as mathrmNu=amathrmRa^b. A Nusselt number of value one represents heat transfer by pure conduction. Increasing this number implies a laminar conductive-dominant flow and then a convective dominant turbulent flow.","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#P","page":"Dimensionless groups","title":"P","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Péclet: provides the ratio of advective per diffusive transport of a substance. For mass transport this is given by the product of Reynolds and Schmidt numbers mathrmRemathrmSc while for thermal energy it is the product of Reynolds and Prandtl numbers mathrmRemathrmPr.","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Prandtl: Ratio of momentum diffusivity to thermal diffusivity mathrmPr=fracnualpha. High mathrmPr indicates that momentum transfer is more effective than heat transfer (oils), while low values (liquid metals) indicate thermal boundary layer is more important than viscous one.","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#R","page":"Dimensionless groups","title":"R","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Rayleigh: Product of Grashof mathrmGr and Prandtl mathrmPr numbers. Related to the transition from laminar to turbulent in buoyancy-driven flows. Laminar to turbulent is assumed to take place at 10^9  (Balaji2014)[27].","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#S","page":"Dimensionless groups","title":"S","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Sherwood:  Also called the mass transfer Nusselt number is a dimensionless number used in mass-transfer operation. It represents the ratio of the total mass transfer rate (convection + diffusion) to the rate of diffusive mass transport, and is named in honor of Thomas Kilgore Sherwood.","category":"page"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/#W","page":"Dimensionless groups","title":"W","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/A2-Dimensionless-groups/","page":"Dimensionless groups","title":"Dimensionless groups","text":"Weber: This group is often found in applications of multiphase flows where strongly curved surfaces are present. It represents the ratio of drag forces to cohesion forces, and can be thought of as a measure of the relative importance of the fluid's inertia compared to its surface tension. As reminded by (Amsden1989)[26], for mathrmWe1, drop oscillations, distortions, and breakup must be considered, requiring other sub-models other than simple drag to describe the flow.","category":"page"},{"location":"References/@Guo2023g/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2023g/","page":"-","title":"-","text":"title: \"Unraveling the design pattern of physics-informed neural networks: Series 07\" authors: Shuai Guo year: 2023 URL: https://towardsdatascience.com/unraveling-the-design-pattern-of-physics-informed-neural-networks-part-07-4ecb543b616a –-","category":"page"},{"location":"References/@Garaniya2012a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Garaniya2012a/","page":"-","title":"-","text":"title: CFD modelling of heavy fuel oil spray combustion authors: V. Garaniya, L. Goldsworthy year: 2012 URL: https://flair.monash.edu/intranet/proceedings/18afmc/Documents/400%20-%20Garaniya.pdf Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZlbEh7jKBqcgTdikWRQ?e=Zima6B –-","category":"page"},{"location":"References/@Guo2024a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2024a/","page":"-","title":"-","text":"title: \"Physics-informed neural networks: An application-centric guide\" authors: Shuai Guo year: 2024 URL: https://towardsdatascience.com/physics-informed-neural-networks-an-application-centric-guide-dc1013526b02 –-","category":"page"},{"location":"References/@Krishnapriyan2021a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Krishnapriyan2021a/","page":"-","title":"-","text":"title: Characterizing possible failure modes in physics-informed neural networks authors: Aditi S. Krishnapriyan, Amir Gholami, Shandian Zhe, Robert M. Kirby, Michael W. Mahoney year: 2021 DOI: https://doi.org/10.48550/arXiv.2109.01050 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla8bwpowG74YkMl_tA?e=DmUIjw –-","category":"page"},{"location":"OpenFOAM/#OpenFOAM","page":"OpenFOAM","title":"OpenFOAM","text":"","category":"section"},{"location":"OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"CurrentModule = OpenFOAM\nDocTestSetup  = quote\n    using OpenFOAM\nend\nEditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/OpenFOAM/index.md\"","category":"page"},{"location":"OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"Modules = [ OpenFOAM ]","category":"page"},{"location":"OpenFOAM/#OpenFOAM.OPENFOAMBANNER","page":"OpenFOAM","title":"OpenFOAM.OPENFOAMBANNER","text":"Banner for all OpenFOAM files with right version.\n\n\n\n\n\n","category":"constant"},{"location":"OpenFOAM/#OpenFOAM.AbstractFlowRateProfile","page":"OpenFOAM","title":"OpenFOAM.AbstractFlowRateProfile","text":"Abstract type for flow rate profile distributions.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.AbstractInjectionModel","page":"OpenFOAM","title":"OpenFOAM.AbstractInjectionModel","text":"Abstract type for injection models.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.AbstractSizeDistribution","page":"OpenFOAM","title":"OpenFOAM.AbstractSizeDistribution","text":"Abstract type for particle size distributions.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.ConstantFlowRateProfile","page":"OpenFOAM","title":"OpenFOAM.ConstantFlowRateProfile","text":"Constant flow rate profile.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.InjectionModel","page":"OpenFOAM","title":"OpenFOAM.InjectionModel","text":"Represents a generic particle injection model.\n\nConstraints imposed by OpenFOAM:\n\nnParticle makes massFlowRate and massTotal to be ignored.\nmassTotal cannot be used in steady state simulations.\nif flowRateProfile is not found a constant massFlowRate profile is computed from the ratio of massTotal and duration.\n\nTo-do:\n\nCheck if parcelBasisType from is applicable to derived types.\n\nmassFlowRate::Number: Particles mass flow rate if nParticle is not provided.\nmassTotal::Number: Total mass to be injected if nParticle is not provided.\nSOI::Number: Start of injection in seconds (base).\nduration::Number: Duration of injection in seconds (base).\nnParticle::Number: Number of particles per parcel.\nuniformParcelSize::UniformParcelSize: Quantity that is constant in parcels (base).\nflowRateProfile::OpenFOAM.AbstractFlowRateProfile: Type of flow rate profile to apply.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.PatchInjection","page":"OpenFOAM","title":"OpenFOAM.PatchInjection","text":"Represents a patch injection model.\n\nname::String: Name to use in injection models list.\npatchName::String: Patch where injection is applied.\ninjectionModel::InjectionModel: Object pointing to general injection model.\nU0::Velocity: Particles injection velocity vector.\nparcelsPerSecond::Number: Number of parcels injected per second.\nsizeDistribution::OpenFOAM.AbstractSizeDistribution: Particle size distribution.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.TableFlowRateProfile","page":"OpenFOAM","title":"OpenFOAM.TableFlowRateProfile","text":"Table flow rate profile.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.TabulatedDensity","page":"OpenFOAM","title":"OpenFOAM.TabulatedDensity","text":"Tabulated density size distribution.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.UniformParcelSize","page":"OpenFOAM","title":"OpenFOAM.UniformParcelSize","text":"Types of uniform parcel sizes.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.Velocity","page":"OpenFOAM","title":"OpenFOAM.Velocity","text":"Simple wraper velocity vector.\n\n\n\n\n\n","category":"type"},{"location":"OpenFOAM/#OpenFOAM.asint-Tuple{Any}","page":"OpenFOAM","title":"OpenFOAM.asint","text":"Round and convert number to an integer.\n\n\n\n\n\n","category":"method"},{"location":"OpenFOAM/#OpenFOAM.parcels_per_second-Tuple{}","page":"OpenFOAM","title":"OpenFOAM.parcels_per_second","text":"parcelstoinject2d(;\n    mdot::Float64,\n    rhop::Float64,\n    diam::Float64,\n    nParticle::Int64 = 1\n)\n\nComputes the flow rate of parcels for a given mean particle size and number of particles per parcels. This is inteded as a helper to create a patchInjection element in the injectionModels of cloudProperties file.\n\n\n\n\n\n","category":"method"},{"location":"OpenFOAM/#OpenFOAM.spheremass-Tuple{Any, Any}","page":"OpenFOAM","title":"OpenFOAM.spheremass","text":"The mass of a sphere of density rho and diameter diam.\n\n\n\n\n\n","category":"method"},{"location":"OpenFOAM/#OpenFOAM.spherevolume-Tuple{Any}","page":"OpenFOAM","title":"OpenFOAM.spherevolume","text":"The volume of a sphere of diameter diam.\n\n\n\n\n\n","category":"method"},{"location":"OpenFOAM/#OpenFOAM.tabulate-Tuple{Any, Any}","page":"OpenFOAM","title":"OpenFOAM.tabulate","text":"Compose table entries in typical OpenFOAM format.\n\n\n\n\n\n","category":"method"},{"location":"OpenFOAM/#Discrete-phase-models","page":"OpenFOAM","title":"Discrete phase models","text":"","category":"section"},{"location":"OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"We can verify the computation of number of parcels per second of sample case injectionChannel. Notice that the value of mdot has been reversed engineered so that it matches the expected value.","category":"page"},{"location":"OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"julia> parcels_per_second(; ṁ = 0.2, ρ = 1000.0, d = 650.0e-06, nParticle = 1)\n1390885","category":"page"},{"location":"References/@Patankar1980/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Patankar1980/","page":"-","title":"-","text":"title: Numerical heat transfer and fluid flow authors: Suhas V. Patankar year: 1980 –-","category":"page"},{"location":"References/@Gunn1978/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Gunn1978/","page":"-","title":"-","text":"title: Transfer of heat or mass to particles in fixed and fluidised beds authors: D. J. Gunn year: 1978 –-","category":"page"},{"location":"#WallyToolbox","page":"Home","title":"WallyToolbox","text":"","category":"section"},{"location":"Teaching/Computing/#Mount-a-network-drive-in-WSL","page":"-","title":"Mount a network drive in WSL","text":"","category":"section"},{"location":"Teaching/Computing/","page":"-","title":"-","text":"Here we assume we will mount drive Z: at /mnt/z:","category":"page"},{"location":"Teaching/Computing/","page":"-","title":"-","text":"# Create the mount point (if required):\nsudo mkdir /mnt/z\n\n# Mount the network drive in WSL:\nsudo mount -t drvfs Z: /mnt/z","category":"page"},{"location":"Teaching/Computing/#\\LaTeX","page":"-","title":"LaTeX","text":"","category":"section"},{"location":"Teaching/Computing/#Math-typesetting-with-\\LaTeX","page":"-","title":"Math typesetting with LaTeX","text":"","category":"section"},{"location":"Teaching/Computing/","page":"-","title":"-","text":"For integrals to display the same size as fractions expanded with \\dfrac, place a \\displaystyle in front of the \\int command.","category":"page"},{"location":"Teaching/Computing/#Code-typesetting-with-\\LaTeX","page":"-","title":"Code typesetting with LaTeX","text":"","category":"section"},{"location":"Teaching/Computing/","page":"-","title":"-","text":"For some reason minted blocks \\begin{minted}...\\end{minted} have problems to render in Beamer (something related to multilevel macros). I managed to insert code blocks with \\inputminted as reported here","category":"page"},{"location":"Teaching/Computing/#MikTeX","page":"-","title":"MikTeX","text":"","category":"section"},{"location":"Teaching/Computing/","page":"-","title":"-","text":"mathkerncmssi source file could not be found","category":"page"},{"location":"DryMaterials/#DryMaterials","page":"DryMaterials","title":"DryMaterials","text":"","category":"section"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"CurrentModule = DryMaterials\nDocTestSetup  = quote\n    using DryMaterials\nend\nEditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/DryMaterials/index.md\"","category":"page"},{"location":"DryMaterials/#Solid-Thermodynamics","page":"DryMaterials","title":"Solid Thermodynamics","text":"","category":"section"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"danger: Danger\nThe following sub-sections document structures and functions that are undergoing active development to harmonize all interfaces. Changes are expected to happen all the time before a common ground is found.","category":"page"},{"location":"DryMaterials/#Laurent-Polynomial-Models","page":"DryMaterials","title":"Laurent Polynomial Models","text":"","category":"section"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"SolidPolynomialProperties","category":"page"},{"location":"DryMaterials/#DryMaterials.SolidPolynomialProperties","page":"DryMaterials","title":"DryMaterials.SolidPolynomialProperties","text":"Arbitrary Laurent polynomial specific heat and enthalpy of materials.\n\nc: Polynomial representation of specific heat [J/(kg.K)].\nh: Polynomial representation of enthalpy [J/kg].\nhₒ: Reference state enthalpy [J/kg].\n\n\n\n\n\n","category":"type"},{"location":"DryMaterials/#Shomate-Model","page":"DryMaterials","title":"Shomate Model","text":"","category":"section"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"Solid materials properties are often reported according to the formalism of (Shomate1954)[3]. To be able to handle data under this format, the following structure is provided.","category":"page"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"DryMaterials.SolidShomateProperties","category":"page"},{"location":"DryMaterials/#DryMaterials.SolidShomateProperties","page":"DryMaterials","title":"DryMaterials.SolidShomateProperties","text":"Thermodynamic properties of solids with Shomate functions.\n\nIMPORTANT: the implementation of makestepwise1d used for step-wise function evaluation takes the mean of both ranges at the T_ch, while the actual Shomate uses the high range for doing so. The function enforces the right behavior by multiplying T_ch the value by 1-eps().\n\ncₚ:  Molar specific heat [J/(mol.K)].\nh:  Molar enthalpy [J/mol].\ns:  Molar entropy [J/K].\na_lo:  Low temperature range Shomate coefficients.\na_hi:  High temperature range Shomate coefficients.\nT_ch:  Temperature of range change for evaluation.\n\n\n\n\n\n","category":"type"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"Using data from NIST Webbook of Chemistry we have the test:","category":"page"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"julia> T = [298.0, 300.0, 400.0, 847.0, 900.0, 1900.0];\n    \njulia> c = [44.57, 44.77, 53.43, 67.42, 67.95, 77.99];\n\njulia> silica = DryMaterials.getshomatesilica();\n\njulia> sum(abs2, silica.cₚ.(T) - c) < 0.0001\ntrue","category":"page"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"The inner workings of DryMaterials.SolidShomateProperties are provided by the following functions. Notice that these do not automatically manage the ranges, so generating functions with the main structure is the recommended way of implementing programs.","category":"page"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"DryMaterials.shomatespecificheat\nDryMaterials.shomateenthalpy\nDryMaterials.shomateentropy","category":"page"},{"location":"DryMaterials/#DryMaterials.shomatespecificheat","page":"DryMaterials","title":"DryMaterials.shomatespecificheat","text":"shomatespecificheat(T::Float64, c::Vector{Float64})::Float64\n\nMolar specific heat with Shomate equation [J/(mol.K)].\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.shomateenthalpy","page":"DryMaterials","title":"DryMaterials.shomateenthalpy","text":"shomateenthalpy(T::Float64, c::Vector{Float64})::Float64\n\nMolar enthalpy with Shomate equation [J/mol].\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.shomateentropy","page":"DryMaterials","title":"DryMaterials.shomateentropy","text":"shomateentropy(T::Float64, c::Vector{Float64})::Float64\n\nEntropy with Shomate equation [J/K].\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#Ongoing-documentation","page":"DryMaterials","title":"Ongoing documentation","text":"","category":"section"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"DryMaterials.SolidMineralPhase\nDryMaterials.enthalpy\nDryMaterials.specificheat\nDryMaterials.density\nDryMaterials.molecularmass","category":"page"},{"location":"DryMaterials/#DryMaterials.SolidMineralPhase","page":"DryMaterials","title":"DryMaterials.SolidMineralPhase","text":"Represents a solid mineral phase for thermodynamic calculations.\n\nname: Name of phase.\nρ: Specific mass of phase [kg/m³].\nM: Molecular mass of phase [kg/mol].\np: Polynomial properties of phase.\n\n\n\n\n\n","category":"type"},{"location":"DryMaterials/#DryMaterials.enthalpy","page":"DryMaterials","title":"DryMaterials.enthalpy","text":"Evaluates the enthalpy of material [J/kg].\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.specificheat","page":"DryMaterials","title":"DryMaterials.specificheat","text":"Evaluates the specific heat of materials [J/(kg.K)].\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.density","page":"DryMaterials","title":"DryMaterials.density","text":"Evaluates the density of material [kg/m³].\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.molecularmass","page":"DryMaterials","title":"DryMaterials.molecularmass","text":"Retrieve molecular mass of materials [kg/mol].\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#Hard-coded-materials","page":"DryMaterials","title":"Hard-coded materials","text":"","category":"section"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"DryMaterials.H_AIR\nDryMaterials.PureAir\nDryMaterials.PureMineral\nDryMaterials.PureWater","category":"page"},{"location":"DryMaterials/#DryMaterials.H_AIR","page":"DryMaterials","title":"DryMaterials.H_AIR","text":"Coefficients for air enthalpy polynomial [J/kg].\n\n\n\n\n\n","category":"constant"},{"location":"DryMaterials/#DryMaterials.PureAir","page":"DryMaterials","title":"DryMaterials.PureAir","text":"Simple implementation of pure air for illustration purposes.\n\n\n\n\n\n","category":"type"},{"location":"DryMaterials/#DryMaterials.PureMineral","page":"DryMaterials","title":"DryMaterials.PureMineral","text":"Simple solid mineral material for illustration purposes.\n\n\n\n\n\n","category":"type"},{"location":"DryMaterials/#DryMaterials.PureWater","page":"DryMaterials","title":"DryMaterials.PureWater","text":"Simple implementation of liquid water for illustration purposes.\n\n\n\n\n\n","category":"type"},{"location":"DryMaterials/#Temporary-(moving-to-database)","page":"DryMaterials","title":"Temporary (moving to database)","text":"","category":"section"},{"location":"DryMaterials/","page":"DryMaterials","title":"DryMaterials","text":"DryMaterials.getshomatesilica\nDryMaterials.getamorphoussilica\nDryMaterials.getkaolinite\nDryMaterials.getmetakaolin\nDryMaterials.getspinel","category":"page"},{"location":"DryMaterials/#DryMaterials.getshomatesilica","page":"DryMaterials","title":"DryMaterials.getshomatesilica","text":"Representation of crystaline silica SiO_2 (quartz).\n\nTODO this contains only the thermodynamics, not a SolidMineralPhase!\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.getamorphoussilica","page":"DryMaterials","title":"DryMaterials.getamorphoussilica","text":"Representation of amorphous silica SiO_2(a).\n\nTODO recover missing defaults in Schieltz (1964).\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.getkaolinite","page":"DryMaterials","title":"DryMaterials.getkaolinite","text":"Representation of Kaolinite Al_2Si_2O_5(OH)_4.\n\nTODO recover missing defaults in Schieltz (1964).\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.getmetakaolin","page":"DryMaterials","title":"DryMaterials.getmetakaolin","text":"Representation of metakaolin Al_2Si_2O_7.\n\nTODO recover missing defaults in Schieltz (1964).\n\n\n\n\n\n","category":"function"},{"location":"DryMaterials/#DryMaterials.getspinel","page":"DryMaterials","title":"DryMaterials.getspinel","text":"Representation of spinel Al_4Si_3O_12.\n\nTODO recover missing defaults (somewhere else, not in Schieltz (1964)).\n\n\n\n\n\n","category":"function"},{"location":"Teaching/Transport Phenomena/#Analysis-of-transport-phenomena","page":"Transport Phenomena","title":"Analysis of transport phenomena","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"Theses notes intend to provide in a very concise way overview of the mathematical fundamentals of transport phenomena. In this sense, they are devoted to generalities rather than specific closure models. You can even see them as a cheat-sheet or simple lecture notes. ","category":"page"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"In that sense, they try to be straightforward and mostly self-contained in the fundamental topics, with increased reference to external sources in applied subjects. They were first redacted based on the MITx series Analysis of Transport Phenomena by Pr. Dr. Martin Bazant and further extended based on several sources cited along the way. ","category":"page"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"The main goal is to provide a general approach of transport phenomena applied to Materials Science and Process Engineering, but readers of other fields might also be interested in parts of the contents.","category":"page"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"Note: this is still a work in progress and quickly evolving. Please let me know if you found any typos or conceptual mistakes. I am still to ask some friends to review them.","category":"page"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"Transport phenomena foundations\nApplications to mass and heat transfer\nApplications to fluid mechanics","category":"page"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"Supporting the above we have the following annexes:","category":"page"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"Mathematical background\nDimensionless groups\nFinite volume diffusion","category":"page"},{"location":"Teaching/Transport Phenomena/","page":"Transport Phenomena","title":"Transport Phenomena","text":"There are also some unstructured drafts being migrated to their final topics.","category":"page"},{"location":"Teaching/Basilisk/Draft/#Planned-studies","page":"-","title":"Planned studies","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"Learning steps","category":"page"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"- [x] [Base tutorial](http://basilisk.fr/Tutorial)\n- [ ] [Review of main examples](http://basilisk.fr/src/examples/README)\n- [ ] [Review of extra examples (1)](http://basilisk.fr/sandbox/Antoonvh/README)\n- [ ] [Review of extra examples (2)](http://basilisk.fr/sandbox/M1EMN/README)\n- [ ] [Review of main tests](http://basilisk.fr/src/test/README)\n- [ ] [Review of built-it solvers](http://basilisk.fr/src/README)\n- [ ] [Dimensional analysis tutorial](http://basilisk.fr/Tutorial.dimensions)\n- [ ] [Basilisk C](http://basilisk.fr/Basilisk%20C)\n- [ ] [Past papers](http://basilisk.fr/Bibliography)","category":"page"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"Concluding projects","category":"page"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"- [ ] Convection equation ([samples](http://basilisk.fr/sandbox/M1EMN/README))\n- [ ] Diffusion equation ([samples](http://basilisk.fr/sandbox/M1EMN/README))\n- [ ] Burgers equation\n- [ ] Cavity flow Navier-Stokes","category":"page"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"Advanced projects","category":"page"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"- [ ] Carbonitriding of low alloy steels\n- [ ] JMAK kinetics and heat transfer\n- [ ] Drag-out flow in plate coating\n- [ ] Graf's acetylene decomposition flow\n- [ ] Rising bubble in fluid","category":"page"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"Things to check","category":"page"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"- [ ] Running simulations in parallel\n- [ ] Evaporation and combustion in sandbox\n- [ ] Examples with [granular flows](http://basilisk.fr/sandbox/M1EMN/README#examples-of-granular-flows) and [silos](http://basilisk.fr/sandbox/M1EMN/Exemples/granular_sandglass.c)\n- [ ] Rising bubble with granular flow","category":"page"},{"location":"Teaching/Basilisk/Draft/#Commented-examples##-Teaching-plan","page":"-","title":"Commented examples## Teaching plan","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/#Week-1","page":"-","title":"Week 1","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"In-class: Fundamentals of scientific computing (history, basics of hardware, number representations, numerical solvers, parallel computing, etc.)\nTutorial: Basics of Linux command line, VIM text editor, programming in C (with mini-projects), and Basilisk C.","category":"page"},{"location":"Teaching/Basilisk/Draft/#Week-2","page":"-","title":"Week 2","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"In-class: \nTutorial: ","category":"page"},{"location":"Teaching/Basilisk/Draft/#Week-3","page":"-","title":"Week 3","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"In-class: \nTutorial: ","category":"page"},{"location":"Teaching/Basilisk/Draft/#Week-4","page":"-","title":"Week 4","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"In-class: \nTutorial: ","category":"page"},{"location":"Teaching/Basilisk/Draft/#Week-5","page":"-","title":"Week 5","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"In-class: \nTutorial: ","category":"page"},{"location":"Teaching/Basilisk/Draft/#Week-6","page":"-","title":"Week 6","text":"","category":"section"},{"location":"Teaching/Basilisk/Draft/","page":"-","title":"-","text":"In-class: \nTutorial: ","category":"page"},{"location":"Cantera/samples/#Cantera-samples","page":"Cantera samples","title":"Cantera samples","text":"","category":"section"},{"location":"Cantera/samples/","page":"Cantera samples","title":"Cantera samples","text":"# cantera = \"C:\\\\Program Files\\\\Cantera\\\\bin\\\\cantera_shared.dll\"\n#\n# ENV[\"CANTERA_SHARED\"] = cantera\n# @assert haskey(ENV, \"CANTERA_SHARED\")\n#\n# FIXME: how to run this in GitHub???\n#\n# @assert ct.appdelete()\n# @assert ct.resetstorage()\n# @assert ct.clearstorage()\n# @assert ct.suppress_thermo_warnings(true)\n# @assert ct.use_legacy_rate_constants(false)\n#\n# sol = ct.Solution(\"gri30.yaml\", \"gri30\", \"mixture-averaged\")\n# gas = ct.Solution(\"gri30.yaml\", \"gri30\", \"mixture-averaged\")\n#\n# Xᵣ = zeros(sol.nspecies)\n# Xᵣ[1] = 1.0\n#\n# Tᵣ = 3500.0\n# Pᵣ = 50000.0\n#\n# ct.set_TPX!(sol, Tᵣ, Pᵣ, Xᵣ; norm = true)\n#\n# @assert ct.gettemperature(sol) ≈ Tᵣ\n# @assert ct.getpressure(sol) ≈ Pᵣ\n# @assert all(ct.getmolefractions(sol) ≈ Xᵣ)\n#\n# ct.equilibrate!(sol, \"HP\", print_results = true)","category":"page"},{"location":"References/@Launder1974/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Launder1974/","page":"-","title":"-","text":"title: The numerical computation of turbulent flows authors: B. E. Launder, D. B. Spalding year: 1974 –-","category":"page"},{"location":"References/@Ranz1952/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Ranz1952/","page":"-","title":"-","text":"title: Evaporation from drops authors: W. Ranz, W. Marshall year: 1952 –-","category":"page"},{"location":"References/@Garaniya2012b/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Garaniya2012b/","page":"-","title":"-","text":"title: Heavy fuel oil combustion modelling using continuous thermodynamics authors: Vikram Garaniya, Laurie Goldsworthy year: 2012 DOI: https://doi.org/10.5988/jime.47.871 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZlbEigrD3idko7FKcyQ?e=lNld2R –-","category":"page"},{"location":"References/@Wang2023a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Wang2023a/","page":"-","title":"-","text":"title: \"Auto-PINN: Understanding and optimizing physics-informed neural architecture\" authors: Yicheng Wang, Xiaotian Han, Chia-Yuan Chang, Daochen Zha, Ulisses Braga-Neto, Xia Hu year: 2023 URL: https://doi.org/10.48550/arXiv.2205.13748 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla8gKwrbEVbpOVfBQg?e=5kcaTy –-","category":"page"},{"location":"References/@Yu2022a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Yu2022a/","page":"-","title":"-","text":"title: Gradient-enhanced physics-informed neural networks for forward and inverse PDE problems authors: Jeremy Yu, Lu Lu, Xuhui Meng, George Em Karniadakis year: 2022 URL: https://doi.org/10.48550/arXiv.2111.02801 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla8fqTeJApcwO8Ng?e=lpsaxB –-","category":"page"},{"location":"References/@Hristov2023/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Hristov2023/","page":"-","title":"-","text":"title: \"Transient heat conduction with variable thermophysical properties power-law temperature-depenent heat capacity and thermal conductivity\" authors: Jordan Hristov year: 2023 –-","category":"page"},{"location":"References/@Hristov2023/","page":"-","title":"-","text":"Take care, paper content is poor and full of typos!\nDerivation for semi-infinite media\nTemperature dependent heat capacity\nCan we really say h=rhoc_pT in all cases?\nArgument about lack of exponents in literature is poor. In fact data is fitted to polynomials mainly because simple exponentials as proposed by the author would not properly represent experimental data in most cases (and certainly not fit Calphad requirements)!","category":"page"},{"location":"References/@Wurth2023a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Wurth2023a/","page":"-","title":"-","text":"title: Physics-informed neural networks for data-free surrogate modelling and engineering optimization – An example from composite manufacturing authors: Tobias Würth, Constantin Krauß, Clemens Zimmerling, Luise Kärger year: 2023 URL: https://doi.org/10.5445/IR/1000159290 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla5XEQtEiYnlp5ggtA?e=6TW8va –-","category":"page"},{"location":"References/@Wurth2023a/","page":"-","title":"-","text":"PINNs are alternative to SBO methods\nReference 6: one NN per output\nUsed same weight for all losses (domain, B.C., I.C.)\nNNs provide automatic jacobian and hessian evaluations, what can be used for great benefit of optimization algorithms\nImplemented in SciANN [[@Haghighat2021sciann]] wrapper to [[@Tensorflow2015Whitepaper]]\nSolves the diffusion equation\nKamal-Malkin model can be seem as a more general parametrization as JMKA rightarrow maybe useful in cement hydration modeling?\nInteresting to write a tutorial about!","category":"page"},{"location":"References/#References","page":"References","title":"References","text":"","category":"section"},{"location":"References/","page":"References","title":"References","text":"D. J. Gunn. Transfer of heat or mass to particles in fixed and fluidised beds. International Journal of Heat and Mass Transfer 21, 467–476 (1978).\n\n\n\nH. Kramers and P. Croockewit. The passage of granular solids through inclined rotary kilns. Chemical Engineering Science 1, 259–265 (1952).\n\n\n\nC. H. Shomate. A method for evaluating and correlating thermodynamic data. The Journal of Physical Chemistry 58, 368–372 (1954).\n\n\n\nW. L. Grosshandler. Radcal – a narrow-band model for radiation calculations in a combustion environment (National Institute of Standards and Technology, 1993).\n\n\n\nJ. P. Gorog, J. K. Brimacombe and T. N. Adams. Radiative heat transfer in rotary kilns. Metallurgical Transactions B 12, 55–70 (1981).\n\n\n\nW. C. Tam and W. W. Yuen. OpenSC: an open-source calculation tool for combustion mixture emissivity/absorptivity (National Institute of Standards and Technology, 2019).\n\n\n\nS. V. Patankar. Numerical heat transfer and fluid flow (Taylor & Francis, 1980); p. 197.\n\n\n\nJ. Crank and P. Nicolson. A practical method for Numerical evaluation of solutions of partial differential equations of the heat-conduction type. Advances in Computational Mathematics 6, 207–226 (1996), reprinted from Proc. Camb. Phil. Soc. 43 (1947) 50-67.\n\n\n\nJ. Hristov. Transient heat conduction with variable thermophysical properties power-law temperature-depenent heat capacity and thermal conductivity. Thermal Science 27, 411–422 (2023).\n\n\n\nK. Shirzad and C. Viney. A critical review on applications of the Avrami equation beyond materials science. Journal of The Royal Society Interface 20 (2023).\n\n\n\nE. J. Mittemeijer, L. Cheng, P. J. van der Schaaf, C. M. Brakman and B. M. Korevaar. Analysis of nonisothermal transformation kinetics; tempering of iron-carbon and iron-nitrogen martensites. Metallurgical Transactions A 19, 925–932 (1988).\n\n\n\nA. B. Liu, D. Mather and R. D. Reitz. Modeling the Effects of Drop Drag and Breakup on Fuel Sprays. In: SAE Technical Paper Series, ANNUAL (SAE International, Mar 1993).\n\n\n\nB. E. Launder and D. B. Spalding. The numerical computation of turbulent flows. Computer Methods in Applied Mechanics and Engineering 3, 269–289 (1974).\n\n\n\nD. Gidaspow. Multiphase flow and fluidization: continuum and kinetic theory descriptions with applications (Academic Press, 1994).\n\n\n\nJ. P. Du Plessis and J. H. Masliyah. Mathematical modelling of flow through consolidated isotropic porous media. Transport in Porous Media 3, 145–161 (1988).\n\n\n\nA. Haider and O. Levenspiel. Drag coefficient and terminal velocity of spherical and nonspherical particles. Powder Technology 58, 63–70 (1989).\n\n\n\nR. D. Reitz and R. Diwakar. Structure of high-pressure fuel sprays. In: SAE Technical Paper Series, ANNUAL (SAE International, Feb 1987).\n\n\n\nB. Peña and C. Pérez-García. Stability of Turing patterns in the Brusselator model. Physical Review E 64, 056213 (2001).\n\n\n\nW. Sweldens. The Lifting Scheme: A Construction of Second Generation Wavelets. SIAM Journal on Mathematical Analysis 29, 511–546 (1998).\n\n\n\nJ. Jeong and F. Hussain. On the identification of a vortex. Journal of Fluid Mechanics 285, 69–94 (1995).\n\n\n\nP. J. O'Rourke and D. M. Snider. An improved collision damping time for MP-PIC calculations of dense particle flows with applications to polydisperse sedimenting beds and colliding particle jets. Chemical Engineering Science 65, 6014–6028 (2010).\n\n\n\nV. Garaniya and L. Goldsworthy. Heavy Fuel Oil Combustion Modelling Using Continuous Thermodynamics. Marine Engineering 47, 871–877 (2012).\n\n\n\nH. Mehrer. Diffusion in Solids : Fundamentals, Methods, Materials, Diffusion-Controlled \tProcesses. Vol. 155 of Springer Series in Solid-State Sciences (Springer Berlin Heidelberg, 2007).\n\n\n\nL. Onsager. Reciprocal relations in irreversible processes. I. Physical Review 37, 405–426 (1931).\n\n\n\nL. Onsager. Reciprocal relations in irreversible processes. II. Physical Review 38, 2265–2279 (1931).\n\n\n\nA. A. Amsden, P. J. O'Rourke and T. D. Butler. KIVA-II: A computer program for chemically reactive flows with sprays (Los Alamos National Laboratory, May 1989).\n\n\n\nC. Balaji. Essentials of radiation heat transfer (Wiley, Chichester, 2014).\n\n\n\nW. Ranz and W. Marshall. Evaporation from drops. Chemical Engineering Progress 48, 141–146 (1952).\n\n\n\nA. Aissa, M. Abdelouahab, A. Noureddine, M. Elganaoui and B. Pateyron. Ranz and Marshall correlations limits on heat flow between a sphere and its surrounding gas at high temperature. Thermal Science 19, 1521–1528 (2015).\n\n\n\nB. Zuo, A. M. Gomes and C. J. Rutland. Modelling superheated fuel sprays and vaproization. International Journal of Engine Research 1, 321–336 (2000).\n\n\n\n","category":"page"},{"location":"Teaching/Finite Elements/#Finite-Element-Method","page":"Finite Element Method","title":"Finite Element Method","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Personal path towards mastering finite element method (FEM).","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"The goal of this repository is to track my learning path of finite element method. As a secondary goal, all tools included in the study must be open source with a permissive license. Finally, I will study again some subjects related to the physics of applied problems that will be solved through FEM.","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"<details> <summary> It is not my first time trying this and I learned a few things in the past failures. Below I expose my reasoning about the choices I make today for structuring this repository and its future. </summary> <br>","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"During my college years I almost neglected solid mechanics and statics. It happens that most quality materials for learning FEM are applied to structural analysis (because that is the most import numerical method in that field). Because my applied work is mostly related to fluids and heat transfer, doing some bibliographic research I found the books by Lewis et al. and its newer edition by Nithiarasu et al. adapted to my expertise level.\nFrom a mathematical standpoint the most accessible material I have studied so far is the draft book by H. P. Langtangen and K.-A. Mardal. Unfortunatelly the main author deceased just after the release of the final draft and the material remained unfinished. That is not really a blocking point because the content is pretty much finished from a non-specialist standpoint. Furthermore, its exercises where converted into notebooks by Mojtaba Barzegari and the material is quite accessible.\nDuring the years I have tested several FEM packages and libraries. The most promissing FEM package in the open source world is certainly FEniCSx, but it comes with the disadvantage of requiring Linux/WSL and having an unclear documentation. In terms of power I couldn't find anything comparable to MOOSE - if you see the list of developer labs it becomes pretty clear why - but it is something to experienced FEM users since it requires low level implementation of the problems in C++. Elmer could be a candidate package for learning the practice, but for going into the mathematics of FEM it is not the right tool. Next comes Kratos but its documentation is messy and things moved around too much over the years. Finally we have FreeFEM++. It is a pretty old software what means that it outlived most of the other applications and now is very stable. What is interesting about FreeFEM++ is its portability across operating systems and good documentation. In what follows I will stick with FreeFEM++ and later with FEniCSx.\nLearning a numerical method for continuum mechanics is essentially useless without the capacity to apply it to real world geometries. Unfortunatelly the field of open source CAD is very poor so we have just a few options. Although Gmsh is pretty powerfull with respect to its meshing capabilities, conceiving the geometry with the software can quickly scale to trigonometry hell level. I have been using the software for many years for 2D cases but systematically fall back to proprietary software when things become complex. In this study I intend to reach a sorcerer Gmsh mastery level. It can be complemented by STL files generation with Blender or CAD in FreeCAD.\nAdvanced post-processing is also a must, so we will also follow some tutorials to improve ParaView skills.","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"</details>","category":"page"},{"location":"Teaching/Finite Elements/#Software-version","page":"Finite Element Method","title":"Software version","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"While doing such an ambitious study, it is important to stick with software versions.","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"In what follows we will be using exclusivelly the following software:","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Gmsh 4.11.1\nFreeFEM++ 4.13\nParaView 5.10.1\nFreeCAD 0.21.1\nBlender 4.0.2","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Processing utilities in Julia and/or Python will have their own versioning so they are not reported here.","category":"page"},{"location":"Teaching/Finite Elements/#Study-planning","page":"Finite Element Method","title":"Study planning","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Because it can become frustrating to progress in the study and not be able to apply the knowledge to real cases, we will start by growing competencies in geometry and meshing before entering the mathematical and software aspects. Planning is idealized in a weekly basis.","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Because of its simpler format, Nithiarasu's book is followed at a faster pace than Langtangen's. At some point the subjects being studied at Langtangen's book will become a review and deepening of previously studied subjects.","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"For materials that were not cited above, here follow the links:","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Engineering Statics | Lectures\nIntro to Continuum Mechanics | Seminars\nSolid Mechanics | Theory\nIntro to the Finite Element Method | Lectures","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"The book series by O.C. Zienkiewicz and collaborators will be included later since its in depth and general approach trespasses my current capacity on how to organize their study. After learning the basics over the next months I hope to be able to skecth a learning strategy to go over those books and feed this time-line.","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Complementary studies to take at any time during the series:","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"The first 4 videos of this playlist.\nThe first 5 videos of this playlist.\nThis video and the sequence (no playlist created).\nThis video with a full Gmsh introduction.","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Review and in-depth studies for solidification of knowledge:","category":"page"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"Continuum physics\nIntroduction to finite element methods\nWolfgang Bangerth's video lectures","category":"page"},{"location":"Teaching/Finite Elements/#Week-1","page":"Finite Element Method","title":"Week 1","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Follow 21 tutorials provided with Gmsh\n[x] Follow this short course on FreeCAD.\n[x] Follow this tutorial on FreeFEM without practicing.\n[x] Nithiarasu (2016), chapters 1 and 2\n[x] Langtangen (2016), chapters 1 and 2 (1/3)\n[ ] Barzegari's notebook associated to Langtangens chapter 1\n[ ] Engineering Statics | Lectures videos 1 to 10\n[ ] Intro to the Finite Element Method | Lectures 1","category":"page"},{"location":"Teaching/Finite Elements/#Week-2","page":"Finite Element Method","title":"Week 2","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 3 (1/2)\n[ ] Langtangen (2016), chapter 2 (2/3) \n[ ] FreeFEM++ guided tutorials 2.1 to 2.9\n[ ] Engineering Statics | Lectures videos 11 to 14\n[ ] Solid Mechanics | Theory (all at once)\n[ ] Intro to Continuum Mechanics | Seminars 1\n[ ] Intro to the Finite Element Method | Lectures 2","category":"page"},{"location":"Teaching/Finite Elements/#Week-3","page":"Finite Element Method","title":"Week 3","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 3 (2/2)\n[ ] Langtangen (2016), chapter 2 (3/3) \n[ ] Barzegari's  notebook associated to Langtangens chapter 2\n[ ] FreeFEM++ guided tutorials 2.10 to 2.13\n[ ] Engineering Statics | Lectures videos 15 to 18\n[ ] Intro to Continuum Mechanics | Seminars 2\n[ ] Intro to the Finite Element Method | Lectures 3","category":"page"},{"location":"Teaching/Finite Elements/#Week-4","page":"Finite Element Method","title":"Week 4","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 4\n[ ] Langtangen (2016), chapter 3 (1/5) \n[ ] FreeFEM++ guided tutorials 2.14 to 2.19\n[ ] Engineering Statics | Lectures videos 19 to 22\n[ ] Intro to Continuum Mechanics | Seminars 3\n[ ] Intro to the Finite Element Method | Lectures 4\n[ ] Follow these ParaView tutorials.","category":"page"},{"location":"Teaching/Finite Elements/#Week-5","page":"Finite Element Method","title":"Week 5","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 5\n[ ] Langtangen (2016), chapter 3 (2/5) \n[ ] Engineering Statics | Lectures videos 23 to 24\n[ ] Intro to Continuum Mechanics | Seminars 4\n[ ] Intro to the Finite Element Method | Lectures 5\n[ ] Follow these ParaView tutorials.","category":"page"},{"location":"Teaching/Finite Elements/#Week-6","page":"Finite Element Method","title":"Week 6","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 6\n[ ] Langtangen (2016), chapter 3 (3/5) \n[ ] Intro to Continuum Mechanics | Seminars 5\n[ ] Intro to the Finite Element Method | Lectures 6\n[ ] Follow this ParaView seminar.","category":"page"},{"location":"Teaching/Finite Elements/#Week-7","page":"Finite Element Method","title":"Week 7","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 7 (1/3)\n[ ] Langtangen (2016), chapter 3 (4/5) \n[ ] Intro to Continuum Mechanics | Seminars 6\n[ ] Intro to the Finite Element Method | Lectures 7\n[ ] Follow this ParaView seminar.","category":"page"},{"location":"Teaching/Finite Elements/#Week-8","page":"Finite Element Method","title":"Week 8","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 7 (2/3)\n[ ] Langtangen (2016), chapter 3 (5/5) \n[ ] Barzegari's  notebook associated to Langtangens chapter 3\n[ ] Intro to Continuum Mechanics | Seminars 7\n[ ] Intro to the Finite Element Method | Lectures 8\n[ ] Follow this ParaView seminar.","category":"page"},{"location":"Teaching/Finite Elements/#Week-9","page":"Finite Element Method","title":"Week 9","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 7 (3/3)\n[ ] Langtangen (2016), chapter 4 (1/2) \n[ ] Intro to Continuum Mechanics | Seminars 8\n[ ] Intro to the Finite Element Method | Lectures 9\n[ ] Follow this ParaView seminar.","category":"page"},{"location":"Teaching/Finite Elements/#Week-10","page":"Finite Element Method","title":"Week 10","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 8\n[ ] Langtangen (2016), chapter 4 (2/2) \n[ ] Barzegari's  notebook associated to Langtangens chapter 4\n[ ] Intro to Continuum Mechanics | Seminars 9\n[ ] Intro to the Finite Element Method | Lectures 10\n[ ] Follow this ParaView seminar.","category":"page"},{"location":"Teaching/Finite Elements/#Week-11","page":"Finite Element Method","title":"Week 11","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Follow 7 extended tutorials provided with Gmsh (Python)\n[ ] Nithiarasu (2016), chapter 9\n[ ] Langtangen (2016), chapter 5 (1/3) \n[ ] Intro to Continuum Mechanics | Seminars 10\n[ ] Follow this ParaView seminar.","category":"page"},{"location":"Teaching/Finite Elements/#Week-12","page":"Finite Element Method","title":"Week 12","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 10\n[ ] Langtangen (2016), chapter 5 (2/3) ","category":"page"},{"location":"Teaching/Finite Elements/#Week-13","page":"Finite Element Method","title":"Week 13","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 11\n[ ] Langtangen (2016), chapter 5 (3/3) \n[ ] Barzegari's  notebook associated to Langtangens chapter 5","category":"page"},{"location":"Teaching/Finite Elements/#Week-14","page":"Finite Element Method","title":"Week 14","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 12\n[ ] Langtangen (2016), chapter 6 (1/2) ","category":"page"},{"location":"Teaching/Finite Elements/#Week-15","page":"Finite Element Method","title":"Week 15","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 13\n[ ] Langtangen (2016), chapter 6 (2/2) \n[ ] Barzegari's  notebook associated to Langtangens chapter 6","category":"page"},{"location":"Teaching/Finite Elements/#Week-16","page":"Finite Element Method","title":"Week 16","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Nithiarasu (2016), chapter 14 and 15\n[ ] Langtangen (2016), chapter 7 \n[ ] Barzegari's  notebook associated to Langtangens chapter 7","category":"page"},{"location":"Teaching/Finite Elements/#Week-17","page":"Finite Element Method","title":"Week 17","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Langtangen (2016), chapter 8\n[ ] Barzegari's  notebook associated to Langtangens chapter 8","category":"page"},{"location":"Teaching/Finite Elements/#Week-18","page":"Finite Element Method","title":"Week 18","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Langtangen (2016), chapter 9 (1/4)","category":"page"},{"location":"Teaching/Finite Elements/#Week-19","page":"Finite Element Method","title":"Week 19","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Langtangen (2016), chapter 9 (2/4)","category":"page"},{"location":"Teaching/Finite Elements/#Week-20","page":"Finite Element Method","title":"Week 20","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Langtangen (2016), chapter 9 (3/4)","category":"page"},{"location":"Teaching/Finite Elements/#Week-21","page":"Finite Element Method","title":"Week 21","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Langtangen (2016), chapter 9 (4/4)\n[ ] Barzegari's  notebook associated to Langtangens chapter 9","category":"page"},{"location":"Teaching/Finite Elements/#Week-22","page":"Finite Element Method","title":"Week 22","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Langtangen (2016), chapter 10","category":"page"},{"location":"Teaching/Finite Elements/#Week-23","page":"Finite Element Method","title":"Week 23","text":"","category":"section"},{"location":"Teaching/Finite Elements/","page":"Finite Element Method","title":"Finite Element Method","text":"[ ] Langtangen (2016), chapter 11","category":"page"},{"location":"Teaching/Transport Phenomena/A1-Mathematical-background/","page":"-","title":"-","text":"[ ] Proof of mean value theorem (null integral implies null integrand)\n[ ] Derivation of Gauss (divergence) theorem","category":"page"},{"location":"References/@Cuomo2022a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Cuomo2022a/","page":"-","title":"-","text":"title: \"Scientific machine learning through physics-informed neural networks: Where we are and what's next\" authors: Salvatore Cuomo, Vincenzo Schiano di Cola, Fabio Giampaolo, Gianluigi Rozza, Maziar Raissi, Francesco Piccialli year: 2022 DOI: https://doi.org/10.48550/arXiv.2201.05624 –-","category":"page"},{"location":"References/@Nowruzi2014/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Nowruzi2014/","page":"-","title":"-","text":"title: Numerical simulation of non-evaporating and non-reacting heavy fuel oil injection spray in medium speed engines using OpenFOAM authors: Hashem Nowruzi, Parviz Ghadimi, Mehdi Yousefifard, Mohammad A. Feiz Chekab year: 2014 URL: https://doi.org/10.14810/ijmech.2014.3206 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZlbEf-L95SgshO8_Nhg?e=jKpxyO –-","category":"page"},{"location":"References/@Grosshandler1993/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Grosshandler1993/","page":"-","title":"-","text":"title: Radcal – a narrow-band model for radiation calculations in a combustion environment authors: William L. Grosshandler year: 1993 –-","category":"page"},{"location":"References/@Shirzad2023/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Shirzad2023/","page":"-","title":"-","text":"title: \"A critical review on applications of the Avrami equation beyond materials science\" authors: Kiana Shirzad, Christopher Viney year: 2023 –-","category":"page"},{"location":"Teaching/read/","page":"-","title":"-","text":"[[@Shirzad2023]]\n[[@Nakayama2023]]","category":"page"},{"location":"Teaching/Elmer/#Elmer-Multiphysics","page":"Elmer Multiphysics","title":"Elmer Multiphysics","text":"","category":"section"},{"location":"References/@Sanyal2022a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Sanyal2022a/","page":"-","title":"-","text":"title: \"RAMP-Net: A robust adaptive MPC for quadrotors via physics-informed neural network\" authors: Sourav Sanyal, Kaushik Roy year: 2022 URL: https://doi.org/10.48550/arXiv.2209.09025 –-","category":"page"},{"location":"Teaching/Basilisk/Documentation/#Built-in-solvers","page":"-","title":"Built-in solvers","text":"","category":"section"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"Basic component solvers:","category":"page"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"advection.h\ndiffusion.h\npoisson.h","category":"page"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"It is upon these that the Navier-Stokes equation can be assembled in:","category":"page"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"Header Description\nnavier-stokes/stream.h Solves a 2D incompressible, constant density, constant viscosity Navier-Stokes equation formulated in the vorticity omega. This is and advection-diffusion equation solved with a flux-based advection scheme in advection.h. Given its form, the stream function psi is solver through the poisson.h solver.\nnavier-stokes/centered.h \nnavier-stokes/perfs.h Not a solver by itself, it supports other headers under the Navier-Stokes family to follow performance during solution.","category":"page"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"Other equations:","category":"page"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"saint-venant.h","category":"page"},{"location":"Teaching/Basilisk/Documentation/#Headers-files","page":"-","title":"Headers files","text":"","category":"section"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"File Usage\ncommon.h \ndistance.h \nembed.h Allow the creation of general shape boundary conditions inside the domain.\nfractions.h \nlambda2.h Detection of vortex using the criteria by (Jeong1995a)[20]\nrun.h A generic time loop which executes until termination (to be avoided!).\ntracer.h Provides an event to integrate the advection of tracer elements.\nutils.h \nview.h ","category":"page"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"File Usage\ngrid/cartesian.h \ngrid/multigrid.h \ngrid/octree.h \ngrid/bitree.h ","category":"page"},{"location":"Teaching/Basilisk/Documentation/#Data-types","page":"-","title":"Data types","text":"","category":"section"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"scalar\nvector\nface\nmsgstats convergence statistics of (multigrid?) solver.","category":"page"},{"location":"Teaching/Basilisk/Documentation/#Functions","page":"-","title":"Functions","text":"","category":"section"},{"location":"Teaching/Basilisk/Documentation/","page":"-","title":"-","text":"Function Definition Uses\norigin common.h Set the origin of cartesian system.\ninit_grid grid/ (overloaded) Level of refinement (size) of initial grid.\nsize  \nperiodic  Set periodic boundary conditions.\nstatsf utils.h Retrieve statistics of a scalar field.\noutput_ppm output.h Generate a image and video output.\nadapt_wavelet grid/tree-common.h Adaptive grid refinement routine.\nrun run.h (overloaded) Generic time loop for events execution.\nnoise  Generate random noise in -1 1.\nswap  Swap values of two scalar arrays.\ninput_stl distance.h Read an STL file as an array of triplets.\nbounding_box distance.h Determines the bounding box of inputs (segments or triangles).\ndistance distance.h Distance to coordinate.\nview draw.h Setup of viewing (camera) parameters.\nisosurface draw.h Displays an isosurface of a field.\ndraw_vof draw.h Display VOF reconstructed interfaces.\nclear draw.h Removes previous objects.\nsave view.h Dumps image(s) to file.\nrefine_biquadradic grid/multigrid-common.h \nwavelet grid/multigrid-common.h \ninverse_wavelet grid/multigrid-common.h \nboundary_level  \nunrefine  \nvorticity utils.h Computes the vorticity from a velocity field.","category":"page"},{"location":"References/@Wang2022a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Wang2022a/","page":"-","title":"-","text":"title: Respecting causality is all you need for training physics-informed neural networks authors: Sifan Wang, Shyam Sankaran, Paris Perdikaris year: 2022 URL: https://doi.org/10.48550/arXiv.2203.07404 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla8hHROyjqNuK7otnA?e=U8kabk –-","category":"page"},{"location":"References/@Wang2022a/","page":"-","title":"-","text":"Supporting materials at GitHub.","category":"page"},{"location":"Cantera/#Cantera","page":"Cantera","title":"Cantera","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"This page documents the wrapper written around the C-API of Cantera. The status of development is documented here. Its goal is not to mimic the original API or provide an interface equivalent to the Python package, but something in line with the functioning of the parent toolbox.","category":"page"},{"location":"Cantera/#Status-of-Cantera-wrapper","page":"Cantera","title":"Status of Cantera wrapper","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"This is an experimental interface to Cantera library based on its C-API version 3.0. This interface is at its early days and has developped for Julia >= 1.9.0 under Windows 10/11. When it is stable enough it will be published as a package and tested under other platforms.","category":"page"},{"location":"Cantera/#Useful-links","page":"Cantera","title":"Useful links","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Source files\nHeader files","category":"page"},{"location":"Cantera/#API-of-ct.h","page":"Cantera","title":"API of ct.h","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Documentation here.","category":"page"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Status Header Function Module\nTested ct.h ct_appdelete inlined\nStruct ct.h soln_newSolution wrapped\n ct.h soln_newInterface waitlist\nTested ct.h soln_del inlined\nTested ct.h soln_name inlined\nStruct ct.h soln_thermo inlined\nStruct ct.h soln_kinetics inlined\nStruct ct.h soln_transport inlined\nTested ct.h soln_setTransportModel wrapped\nTested ct.h soln_nAdjacent inlined\n ct.h soln_adjacent waitlist\nTested ct.h thermo_newFromFile wrapped\nTested ct.h thermo_del inlined\nStruct ct.h thermo_nElements inlined\nStruct ct.h thermo_nSpecies inlined\nTested ct.h thermo_temperature inlined\nStruct ct.h thermo_setTemperature inlined\nTested ct.h thermo_density inlined\nTested ct.h thermo_setDensity inlined\nTested ct.h thermo_molarDensity inlined\nTested ct.h thermo_setMolarDensity inlined\nTested ct.h thermo_meanMolecularWeight inlined\nTested ct.h thermo_moleFraction inlined\nTested ct.h thermo_massFraction inlined\nStruct ct.h thermo_getMoleFractions inlined\nTested ct.h thermo_getMassFractions inlined\nStruct ct.h thermo_setMoleFractions inlined\nTested ct.h thermo_setMassFractions inlined\n ct.h thermo_setMoleFractionsByName \n ct.h thermo_setMassFractionsByName \n ct.h thermo_getAtomicWeights \n ct.h thermo_getMolecularWeights \n ct.h thermo_getCharges \n ct.h thermo_getElementName \n ct.h thermo_getSpeciesName \n ct.h thermo_getName \n ct.h thermo_setName \n ct.h thermo_elementIndex \n ct.h thermo_speciesIndex \n ct.h thermo_report \nTested ct.h thermo_print \n ct.h thermo_nAtoms \n ct.h thermo_addElement \n ct.h thermo_getEosType \nTo test ct.h thermo_refPressure inlined\nTo test ct.h thermo_minTemp inlined\nTo test ct.h thermo_maxTemp inlined\nTo test ct.h thermoenthalpymole inlined\nTo test ct.h thermointEnergymole inlined\nTo test ct.h thermoentropymole inlined\nTo test ct.h thermogibbsmole inlined\nTo test ct.h thermocpmole inlined\nTo test ct.h thermocvmole inlined\nTo test ct.h thermo_pressure inlined\nStruct ct.h thermo_setPressure inlined\nTo test ct.h thermoenthalpymass inlined\nTo test ct.h thermointEnergymass inlined\nTo test ct.h thermoentropymass inlined\nTo test ct.h thermogibbsmass inlined\nTo test ct.h thermocpmass inlined\nTo test ct.h thermocvmass inlined\nTo test ct.h thermo_electricPotential inlined\nTo test ct.h thermo_thermalExpansionCoeff inlined\nTo test ct.h thermo_isothermalCompressibility inlined\n ct.h thermo_chemPotentials \n ct.h thermogetEnthalpiesRT \n ct.h thermogetEntropiesR \n ct.h thermogetCpR \n ct.h thermo_setElectricPotential \n ct.h thermosetTP \n ct.h thermosetTD \n ct.h thermosetRP \n ct.h thermosetDP \n ct.h thermosetHP \n ct.h thermosetUV \n ct.h thermosetSV \n ct.h thermosetSP \n ct.h thermosetST \n ct.h thermosetTV \n ct.h thermosetPV \n ct.h thermosetUP \n ct.h thermosetVH \n ct.h thermosetTH \n ct.h thermosetSH \nTested ct.h thermo_equilibrate \nTo test ct.h thermo_critTemperature inlined\nTo test ct.h thermo_critPressure inlined\nTo test ct.h thermo_critDensity inlined\nTo test ct.h thermo_vaporFraction inlined\n ct.h thermo_satTemperature \n ct.h thermo_satPressure \n ct.h thermosetStatePsat \n ct.h thermosetStateTsat \n ct.h kin_newFromFile \nTo test ct.h kin_del inlined\nTo test ct.h kin_nSpecies inlined\nTo test ct.h kin_nReactions inlined\nTo test ct.h kin_nPhases inlined\n ct.h kin_phaseIndex \nTo test ct.h kin_reactionPhaseIndex inlined\n ct.h kin_reactantStoichCoeff \n ct.h kin_productStoichCoeff \n ct.h kin_getReactionType \n ct.h kin_getFwdRatesOfProgress \n ct.h kin_getRevRatesOfProgress \n ct.h kin_getNetRatesOfProgress \n ct.h kin_getEquilibriumConstants \n ct.h kin_getFwdRateConstants \n ct.h kin_getRevRateConstants \n ct.h kin_getDelta \n ct.h kin_getCreationRates \n ct.h kin_getDestructionRates \n ct.h kin_getNetProductionRates \n ct.h kin_getSourceTerms \nTo test ct.h kin_multiplier inlined\n ct.h kin_getReactionString \n ct.h kin_setMultiplier \nTo test ct.h kin_isReversible inlined\n ct.h kin_getType \nTo test ct.h kin_start inlined\n ct.h kin_speciesIndex \nTo test ct.h kin_advanceCoverages inlined\nTo test ct.h kin_phase inlined\nTo test ct.h trans_newDefault inlined\n ct.h trans_new \nTo test ct.h trans_del inlined\nTo test ct.h trans_transportModel inlined\nTo test ct.h trans_viscosity inlined\nTo test ct.h trans_electricalConductivity inlined\n ct.h trans_thermalConductivity \n ct.h trans_getThermalDiffCoeffs \n ct.h trans_getMixDiffCoeffs \n ct.h trans_getBinDiffCoeffs \n ct.h trans_getMultiDiffCoeffs \n ct.h trans_setParameters \n ct.h trans_getMolarFluxes \n ct.h trans_getMassFluxes \n ct.h ct_getCanteraError \n ct.h ct_setLogWriter \n ct.h ct_setLogCallback \n ct.h ct_addCanteraDirectory \n ct.h ct_getDataDirectories \n ct.h ct_getCanteraVersion \n ct.h ct_getGitCommit \nTested ct.h ctsuppressthermo_warnings inlined\nTested ct.h ctuselegacyrateconstants inlined\nTested ct.h ct_clearStorage inlined\nTested ct.h ct_resetStorage inlined","category":"page"},{"location":"Cantera/#API-of-ctfunc.h","page":"Cantera","title":"API of ctfunc.h","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Documentation here.","category":"page"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Status Header Function Module\n ctfunc.h func_new \n ctfunc.h funcnewbasic \n ctfunc.h funcnewadvanced \n ctfunc.h funcnewcompound \n ctfunc.h funcnewmodified \nTo test ctfunc.h func_del inlined\n ctfunc.h func_type \nTo test ctfunc.h func_value inlined\nTo test ctfunc.h func_derivative inlined\nTo test ctfunc.h func_duplicate inlined\n ctfunc.h func_write \nTo test ctfunc.h ct_clearFunc inlined","category":"page"},{"location":"Cantera/#API-of-ctmultiphase.h","page":"Cantera","title":"API of ctmultiphase.h","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Documentation here.","category":"page"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Status Header Function Module\nTo test ctmultiphase.h mix_new inlined\nTo test ctmultiphase.h mix_del inlined\nTo test ctmultiphase.h ct_clearMix inlined\n ctmultiphase.h mix_addPhase \nTo test ctmultiphase.h mix_init inlined\nTo test ctmultiphase.h mix_updatePhases inlined\nTo test ctmultiphase.h mix_nElements inlined\n ctmultiphase.h mix_elementIndex \n ctmultiphase.h mix_speciesIndex \nTo test ctmultiphase.h mix_nSpecies inlined\nTo test ctmultiphase.h mix_setTemperature inlined\nTo test ctmultiphase.h mix_temperature inlined\nTo test ctmultiphase.h mix_minTemp inlined\nTo test ctmultiphase.h mix_maxTemp inlined\nTo test ctmultiphase.h mix_charge inlined\nTo test ctmultiphase.h mix_phaseCharge inlined\nTo test ctmultiphase.h mix_setPressure inlined\nTo test ctmultiphase.h mix_pressure inlined\nTo test ctmultiphase.h mix_nAtoms inlined\nTo test ctmultiphase.h mix_nPhases inlined\nTo test ctmultiphase.h mix_phaseMoles inlined\n ctmultiphase.h mix_setPhaseMoles \n ctmultiphase.h mix_setMoles \n ctmultiphase.h mix_setMolesByName \nTo test ctmultiphase.h mix_speciesMoles inlined\nTo test ctmultiphase.h mix_elementMoles inlined\n ctmultiphase.h mix_equilibrate \n ctmultiphase.h mix_getChemPotentials \nTo test ctmultiphase.h mix_enthalpy inlined\nTo test ctmultiphase.h mix_entropy inlined\nTo test ctmultiphase.h mix_gibbs inlined\nTo test ctmultiphase.h mix_cp inlined\nTo test ctmultiphase.h mix_volume inlined\nTo test ctmultiphase.h mix_speciesPhaseIndex inlined\nTo test ctmultiphase.h mix_moleFraction inlined","category":"page"},{"location":"Cantera/#API-of-ctonedim.h","page":"Cantera","title":"API of ctonedim.h","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Documentation here.","category":"page"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Status Header Function Module\nTo test ctonedim.h ct_clearOneDim inlined\n ctonedim.h domain_new \nTo test ctonedim.h domain_del inlined\nTo test ctonedim.h domain_type inlined\n ctonedim.h domain_type3 \nTo test ctonedim.h domain_index inlined\nTo test ctonedim.h domain_nComponents inlined\nTo test ctonedim.h domain_nPoints inlined\n ctonedim.h domain_componentName \n ctonedim.h domain_componentIndex \n ctonedim.h domain_setBounds \nTo test ctonedim.h domain_lowerBound inlined\nTo test ctonedim.h domain_upperBound inlined\n ctonedim.h domain_setSteadyTolerances \n ctonedim.h domain_setTransientTolerances \nTo test ctonedim.h domain_rtol inlined\nTo test ctonedim.h domain_atol inlined\n ctonedim.h domain_setupGrid \n ctonedim.h domain_setID \nTo test ctonedim.h domain_grid inlined\nTo test ctonedim.h bdry_setMdot inlined\nTo test ctonedim.h bdry_setTemperature inlined\nTo test ctonedim.h bdry_setSpreadRate inlined\n ctonedim.h bdry_setMoleFractions \nTo test ctonedim.h bdry_temperature inlined\nTo test ctonedim.h bdry_spreadRate inlined\nTo test ctonedim.h bdry_massFraction inlined\nTo test ctonedim.h bdry_mdot inlined\nTo test ctonedim.h reactingsurf_setkineticsmgr inlined\nTo test ctonedim.h reactingsurf_enableCoverageEqs inlined\nTo test ctonedim.h inlet_new inlined\nTo test ctonedim.h outlet_new inlined\nTo test ctonedim.h outletres_new inlined\nTo test ctonedim.h symm_new inlined\nTo test ctonedim.h surf_new inlined\nTo test ctonedim.h reactingsurf_new inlined\nTo test ctonedim.h inlet_setSpreadRate inlined\n ctonedim.h stflow_new \nTo test ctonedim.h stflow_setTransport inlined\nTo test ctonedim.h stflow_enableSoret inlined\nTo test ctonedim.h stflow_setPressure inlined\nTo test ctonedim.h stflow_pressure inlined\n ctonedim.h stflow_setFixedTempProfile \nTo test ctonedim.h stflow_solveEnergyEqn inlined\n ctonedim.h sim1D_new \nTo test ctonedim.h sim1D_del inlined\n ctonedim.h sim1D_setValue \n ctonedim.h sim1D_setProfile \n ctonedim.h sim1D_setFlatProfile \n ctonedim.h sim1D_show \n ctonedim.h sim1D_showSolution \n ctonedim.h sim1D_setTimeStep \nTo test ctonedim.h sim1D_getInitialSoln inlined\n ctonedim.h sim1D_solve \nTo test ctonedim.h sim1D_refine inlined\n ctonedim.h sim1D_setRefineCriteria \n ctonedim.h sim1D_setGridMin \n ctonedim.h sim1D_save \n ctonedim.h sim1D_restore \nTo test ctonedim.h sim1D_writeStats inlined\n ctonedim.h sim1D_domainIndex \n ctonedim.h sim1D_value \n ctonedim.h sim1D_workValue \nTo test ctonedim.h sim1D_eval inlined\nTo test ctonedim.h sim1D_setMaxJacAge inlined\nTo test ctonedim.h sim1D_setFixedTemperature inlined","category":"page"},{"location":"Cantera/#API-of-ctreactor.h","page":"Cantera","title":"API of ctreactor.h","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Documentation here.","category":"page"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Status Header Function Module\n ctreactor.h reactor_new \nTo test ctreactor.h reactor_del inlined\nTo test ctreactor.h reactor_setInitialVolume inlined\nTo test ctreactor.h reactor_setChemistry inlined\nTo test ctreactor.h reactor_setEnergy inlined\nTo test ctreactor.h reactor_setThermoMgr inlined\nTo test ctreactor.h reactor_setKineticsMgr inlined\nTo test ctreactor.h reactor_insert inlined\nTo test ctreactor.h reactor_mass inlined\nTo test ctreactor.h reactor_volume inlined\nTo test ctreactor.h reactor_density inlined\nTo test ctreactor.h reactor_temperature inlined\nTo test ctreactor.h reactorenthalpymass inlined\nTo test ctreactor.h reactorintEnergymass inlined\nTo test ctreactor.h reactor_pressure inlined\nTo test ctreactor.h reactor_massFraction inlined\nTo test ctreactor.h reactor_nSensParams inlined\nTo test ctreactor.h reactor_addSensitivityReaction inlined\nTo test ctreactor.h flowReactor_setMassFlowRate inlined\nTo test ctreactor.h reactornet_new inlined\nTo test ctreactor.h reactornet_del inlined\nTo test ctreactor.h reactornet_setInitialTime inlined\nTo test ctreactor.h reactornet_setMaxTimeStep inlined\nTo test ctreactor.h reactornet_setTolerances inlined\nTo test ctreactor.h reactornet_setSensitivityTolerances inlined\nTo test ctreactor.h reactornet_addreactor inlined\nTo test ctreactor.h reactornet_advance inlined\nTo test ctreactor.h reactornet_step inlined\nTo test ctreactor.h reactornet_time inlined\nTo test ctreactor.h reactornet_rtol inlined\nTo test ctreactor.h reactornet_atol inlined\n ctreactor.h reactornet_sensitivity \n ctreactor.h flowdev_new \nTo test ctreactor.h flowdev_del inlined\nTo test ctreactor.h flowdev_install inlined\nTo test ctreactor.h flowdev_setMaster inlined\nTo test ctreactor.h flowdev_setPrimary inlined\nTo test ctreactor.h flowdev_massFlowRate inlined\nTo test ctreactor.h flowdev_setMassFlowCoeff inlined\nTo test ctreactor.h flowdev_setValveCoeff inlined\nTo test ctreactor.h flowdev_setPressureCoeff inlined\nTo test ctreactor.h flowdev_setPressureFunction inlined\nTo test ctreactor.h flowdev_setTimeFunction inlined\n ctreactor.h wall_new \nTo test ctreactor.h wall_del inlined\nTo test ctreactor.h wall_install inlined\nTo test ctreactor.h wall_vdot inlined\nTo test ctreactor.h wall_expansionRate inlined\nTo test ctreactor.h wall_Q inlined\nTo test ctreactor.h wall_heatRate inlined\nTo test ctreactor.h wall_area inlined\nTo test ctreactor.h wall_setArea inlined\nTo test ctreactor.h wall_setThermalResistance inlined\nTo test ctreactor.h wall_setHeatTransferCoeff inlined\nTo test ctreactor.h wall_setHeatFlux inlined\nTo test ctreactor.h wall_setExpansionRateCoeff inlined\nTo test ctreactor.h wall_setVelocity inlined\nTo test ctreactor.h wall_setEmissivity inlined\nTo test ctreactor.h wall_ready inlined\nTo test ctreactor.h reactorsurface_new inlined\nTo test ctreactor.h reactorsurface_del inlined\nTo test ctreactor.h reactorsurface_install inlined\nTo test ctreactor.h reactorsurface_setkinetics inlined\nTo test ctreactor.h reactorsurface_area inlined\nTo test ctreactor.h reactorsurface_setArea inlined\nTo test ctreactor.h reactorsurface_addSensitivityReaction inlined\nTo test ctreactor.h ct_clearReactors inlined","category":"page"},{"location":"Cantera/#API-of-ctrpath.h","page":"Cantera","title":"API of ctrpath.h","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Documentation here.","category":"page"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Status Header Function Module\nTo test ctrpath.h rdiag_new inlined\nTo test ctrpath.h rdiag_del inlined\nTo test ctrpath.h rdiag_detailed inlined\nTo test ctrpath.h rdiag_brief inlined\nTo test ctrpath.h rdiag_setThreshold inlined\n ctrpath.h rdiag_setBoldColor \n ctrpath.h rdiag_setNormalColor \n ctrpath.h rdiag_setDashedColor \n ctrpath.h rdiag_setDotOptions \nTo test ctrpath.h rdiag_setBoldThreshold inlined\nTo test ctrpath.h rdiag_setNormalThreshold inlined\nTo test ctrpath.h rdiag_setLabelThreshold inlined\nTo test ctrpath.h rdiag_setScale inlined\nTo test ctrpath.h rdiag_setFlowType inlined\nTo test ctrpath.h rdiag_setArrowWidth inlined\n ctrpath.h rdiag_setTitle \n ctrpath.h rdiag_write \nTo test ctrpath.h rdiag_add inlined\n ctrpath.h rdiag_findMajor \n ctrpath.h rdiag_setFont \nTo test ctrpath.h rdiag_displayOnly inlined\nTo test ctrpath.h rbuild_new inlined\nTo test ctrpath.h rbuild_del inlined\n ctrpath.h rbuild_init \n ctrpath.h rbuild_build \nTo test ctrpath.h ct_clearReactionPath inlined","category":"page"},{"location":"Cantera/#API-of-ctsurf.h","page":"Cantera","title":"API of ctsurf.h","text":"","category":"section"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Documentation here.","category":"page"},{"location":"Cantera/","page":"Cantera","title":"Cantera","text":"Status Header Function Module\n ctsurf.h surf_setCoverages \n ctsurf.h surf_getCoverages \n ctsurf.h surf_setConcentrations \n ctsurf.h surf_getConcentrations \nTo test ctsurf.h surf_setSiteDensity inlined\nTo test ctsurf.h surf_siteDensity inlined\n ctsurf.h surf_setCoveragesByName ","category":"page"},{"location":"DryGranular/kramers/#Kramers'-model","page":"Kramers' model","title":"Kramers' model","text":"","category":"section"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"EditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/DryGranular/kramers.md\"","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"using CairoMakie\nusing CSV\nusing DataFrames\nusing Latexify\nusing Printf\nusing DryGranular\n\n\"Partial data from Kramers (1952) Table 3\"\nconst DATA_TABLE3 = \"\"\"\\\nρ,γ,tan(β),n,ṁ,prod_dimless,η̄ᵣ,hold_real\n1480.0,36.0,0.0094,0.059,5.15e-03,18.3,0.111,8.10\n1480.0,36.0,0.0094,0.090,2.68e-03,6.25,0.054,5.00\n1480.0,36.0,0.0094,0.195,1.32e-02,14.2,0.088,7.75\n1480.0,36.0,0.0094,0.232,7.24e-03,6.55,0.043,3.85\n1480.0,36.0,0.0100,0.040,6.38e-03,29.7,0.169,13.3\n1480.0,36.0,0.0100,0.040,5.00e-03,23.2,0.144,11.2\n1480.0,36.0,0.0100,0.069,9.20e-03,24.8,0.150,10.6\n1480.0,36.0,0.0100,0.069,6.53e-03,17.6,0.113,8.50\n1480.0,36.0,0.0100,0.106,1.50e-02,27.8,0.162,12.2\n1480.0,36.0,0.0100,0.159,1.20e-02,14.0,0.092,7.49\n1480.0,36.0,0.0100,0.238,1.55e-02,12.1,0.083,7.48\n1480.0,36.0,0.0100,0.238,1.19e-02,9.22,0.068,6.13\n\"\"\"\n\n\"Compares approximate analytical to numerical solution.\"\nfunction solvekiln(; L, D, Φ, ω, β, γ, d, show = true)\n    model = RotaryKilnBedSolution(;\n        model = SymbolicLinearKramersModel(),\n        L     = L,\n        R     = D / 2.0,\n        Φ     = Φ / 3600.0,\n        ω     = ω / 60.0,\n        β     = deg2rad(β),\n        γ     = deg2rad(γ),\n        d     = d / 1000.0\n    )\n\n    optim = kramersnlapprox(;\n        z = model.z,\n        R = D / 2.0,\n        Φ = Φ / 3600.0,\n        ω = ω / 60.0,\n        β = deg2rad(β),\n        γ = deg2rad(γ),\n        d = d / 1000.0\n    )\n\n    f = nothing\n    ax = nothing\n\n    if show\n        f = Figure()\n        ax = Axis(f[1, 1])\n\n        lines!(ax, 100model.z/L, 100model.h, linewidth = 3, label = \"Numerical\")\n        lines!(ax, 100optim.z/L, 100optim.h, linewidth = 3, label = \"Analytical\")\n\n        a = @sprintf(\"%.1f\", model.ηₘ)\n        b = @sprintf(\"%.1f\", optim.ηₘ)\n        title = \"Loading: $(a)% (numerical) | $(b)% (analytical)\"\n\n        ax.title = title\n        ax.xlabel = \"Coordinate [%]\"\n        ax.ylabel = \"Bed height [cm]\"\n        ax.xticks = 0.0:20.0:100.0\n        xlims!(ax, extrema(ax.xticks.val))\n    end\n\n    return model, optim, f, ax\nend\n\n\"Reference case for alumina kiln testing.\"\nfunction aluminakiln(ṁ, ω; show = false)\n    # Density of bed [kg/m³]\n    ρ = 800.0\n    L = 34.0\n    D = 1.5\n    β = atan(0.025)\n\n    model, optim, f, ax = solvekiln(\n        L = L,\n        D = D,\n        Φ = (1000// 24) * ṁ / ρ,\n        ω = ω,\n        β = rad2deg(β),\n        γ = 33.0,\n        d = 0.050,\n        show = show\n    )\n\n    τₚ = perrayresidence(L, ω, D, β)\n\n    return model, optim, f, ax, τₚ\nend\n\n\"Run `aluminakiln` against some known conditions.\"\nfunction scanaluminakiln()\n    ṁlist = [33.6, 43.2]\n    ωlist = [0.85, 1.20]\n\n    df = DataFrame(\n        ṁ = Float64[],\n        ω = Float64[],\n        η̄ = Float64[],\n        τᵢ = Float64[],\n        τₚ = Float64[]\n    )\n\n    for ṁ ∈ ṁlist, ω ∈ ωlist\n        model, _, _, _, τ = aluminakiln(ṁ, ω, show = false)\n        η̄ = round(model.ηₘ, digits = 0)\n        τᵢ = round(model.τ / 60.0, digits = 0)\n        τₚ = round(τ, digits = 0)\n        push!(df, [ṁ ω η̄ τᵢ τₚ])\n    end\n\n    return df\nend\n\nlet\n    # @info(\"Solution of reference case\")\n\n    in1_to_m1(v) = 0.0254 * v\n    ft1_to_m1(v) = in1_to_m1(12.0) * v\n    ft3_to_m3(v) = ft1_to_m1(1.0)^3 * v\n\n    # Kiln length [m]\n    L = ft1_to_m1(45.0)\n\n    # Kiln diameter [m]\n    D = 2 * ft1_to_m1(3.1)\n\n    # Volume flow rate [m³/h]\n    Φ = ft3_to_m3(6.1) * 60\n\n    # Rotation rate (+0.0005) [rev/min]\n    ω = 0.0505 * 60.0\n\n    # Kiln slope (0.5in/ft) [°]\n    β = rad2deg(atan(0.5 / 12))\n\n    # Repose angle [°]\n    γ = 45.0\n\n    # Particle size [mm]\n    d = 0.050\n\n    # Conversions to match model inputs.\n    R = D / 2.0\n    Φ = Φ / 3600.0\n    ω = ω / 60.0\n    β = deg2rad(β)\n    γ = deg2rad(γ)\n    d = d / 1000.0\n\n    # Create problem container.\n    kramers = RotaryKilnBedSolution(;\n        model = SymbolicLinearKramersModel(),\n        L     = L,\n        R     = R,\n        Φ     = Φ,\n        ω     = ω,\n        β     = β,\n        γ     = γ,\n        d     = d\n    )\n\n    optim = kramersnlapprox(;\n        z = kramers.z,\n        R = R,\n        Φ = Φ,\n        ω = ω,\n        β = β,\n        γ = γ,\n        d = d\n    )\n\n    global kramers_NΦ = dimlessNΦ(R, β, ω, Φ, γ)\n    global kramers_Nₖ = dimlessNₖ(L, R, β, γ)\n    global kramers_η̄ₛ = sullivansηₘ(R, β, ω, Φ, γ)\n    global kramers_ref = kramers\n    global optim_ref = optim\n\n    global RESULTS_TABLE = DataFrame(\n        Quantity  = [\n            \"NΦ\",\n            \"Nₖ\",\n            \"η̄ᵣ\",\n            \"η̄ᵢ\",\n        ],\n        Reference = [\n            \"1.15\",\n            \"1.17\",\n            \"5.65\",\n            @sprintf(\"%.2f\", optim_ref.ηₘ)\n        ],\n        Computed  = [\n            @sprintf(\"%.2f\", kramers_NΦ),\n            @sprintf(\"%.2f\", kramers_Nₖ),\n            @sprintf(\"%.2f\", kramers_η̄ₛ),\n            @sprintf(\"%.2f\", kramers_ref.ηₘ)\n        ]\n    )\nend\n\nconst TABLE3 = let\n    # @info(\"Verification of *Table 3*\")\n\n    Dₖ = 0.197\n    Lₖ = 1.780\n    dₖ = 0.0012\n\n    table3 = DataFrame(CSV.File(IOBuffer(DATA_TABLE3)))\n    table3[!, \"η̄ᵢ\"] = zeros(length(table3[!, \"η̄ᵣ\"]))\n    table3[!, \"η̄ᵣ\"] *= 100\n\n    model = SymbolicLinearKramersModel()\n\n    for (i, row) in enumerate(eachrow(table3))\n        Φ = 3600.0 * row[\"ṁ\"] / row[\"ρ\"]\n        ω = row[\"n\"] * 60.0\n        β = rad2deg(atan(row[\"tan(β)\"]))\n        γ = row[\"γ\"]\n\n        kramers = RotaryKilnBedSolution(;\n            model = model,\n            L     = Lₖ,\n            R     = Dₖ / 2.0,\n            Φ     = Φ / 3600.0,\n            ω     = ω / 60.0,\n            β     = deg2rad(β),\n            γ     = deg2rad(γ),\n            d     = dₖ / 1000.0\n        )\n\n        table3[i, \"η̄ᵢ\"] = round(kramers.ηₘ, digits = 1)\n    end\n\n    exclude = [\"ρ\", \"γ\", \"prod_dimless\", \"hold_real\"]\n    select(table3, Not(exclude))\nend\n\nconst DIMLESSPLOT = let\n    @info(\"Dimensionless profiles solution\")\n\n    ρ = 1480.0\n    L = 20.0\n    D = 0.197\n    Φ = 5.15e-03 / ρ * 3600\n    ω = 0.059 * 60\n    β = rad2deg(atan(0.0094))\n    γ = 36.0\n\n    # Conversions to match model inputs.\n    R = D / 2.0\n    Φ = Φ / 3600.0\n    ω = ω / 60.0\n    β = deg2rad(β)\n    γ = deg2rad(γ)\n\n    # Things held constant in loop.\n    NΦ = dimlessNΦ(R, β, ω, Φ, γ)\n    Nₖ = dimlessNₖ(L, R, β, γ)\n    model = SymbolicLinearKramersModel()\n\n    f = Figure()\n    ax = Axis(f[1, 1])\n\n    for d in [0.05, 0.10, 0.15, 0.193, 0.25]\n        kramers = RotaryKilnBedSolution(;\n            model = model,\n            L     = L,\n            R     = R,\n            Φ     = Φ,\n            ω     = ω,\n            β     = β,\n            γ     = γ,\n            d     = d * R * NΦ\n        )\n\n        # Dimensionless axes.\n        z = kramers.z\n        h = kramers.h / (R * NΦ)\n        z = @. (L - z) / L * 1 / (NΦ * Nₖ)\n        z = @. z[1] - z\n\n        label = @sprintf(\"%.3f\", d)\n        lines!(ax, z, h; linewidth = 2, label = label)\n    end\n\n    ax.title = \"Dimensionless loading curves\"\n    ax.xlabel = \"Coordinate\"\n    ax.ylabel = \"Bed height\"\n    ax.xticks.val = 0.0:0.1:0.5\n    ax.yticks.val = 0.05:0.05:0.25\n    xlims!(ax, extrema(ax.xticks.val))\n    ylims!(ax, extrema(ax.yticks.val))\n    axislegend(ax; position = :rb)\n\n    f\nend","category":"page"},{"location":"DryGranular/kramers/#Sample-reference-case","page":"Kramers' model","title":"Sample reference case","text":"","category":"section"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"Here we make use of the current implementation to check if it correctly approximates the last example provided in reference paper from [[@Kramers1952]]. To minimize rounding errors causes by unit conversions, we provide the required functions to convert from imperial to international system in the solution process.","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"The next table summarizes the results. It is seen that the dimensionless numbers are well approximated. It must be emphasized that the reference estimates η̄ᵣ by a graphical method – it was 1952 – and the current value is considered a good enough approximation. Additionally, the equation was not integrated numerically as done here, but engineering relationships were used in the approximation. That said, the proper loading to be considered in our days is η̄ᵢ.","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"mdtable(RESULTS_TABLE, latex=false) # hide","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"Note: the last value in column Reference above is not provided in Kramers' paper but computed from the approximate analytical solution provided by the authors. As we see here, it may get >20% error under some circumstances.","category":"page"},{"location":"DryGranular/kramers/#Verification-of-*Table-3*","page":"Kramers' model","title":"Verification of Table 3","text":"","category":"section"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"In the next cell we provide the kiln dimensions used by Kramers (1952) to experimentally validate the model. Some data from their Tab. 3 is then loaded and all rows are simulated with current model. Fractional hold-up seems to be well correlated at least to a few percent of the reference value.","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"mdtable(TABLE3, latex=false) # hide","category":"page"},{"location":"DryGranular/kramers/#Dimensionless-profiles","page":"Kramers' model","title":"Dimensionless profiles","text":"","category":"section"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"Next step in validation is to check profiles in dimensionless format, as done by Kramers in their Fig. 3. Notice that here we used the numerical integration curves instead of the analytical approximation of profiles, so reproduction and consequences of results are not exactly the same.","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"DIMLESSPLOT # hide","category":"page"},{"location":"DryGranular/kramers/#Comparison-with-analytical","page":"Kramers' model","title":"Comparison with analytical","text":"","category":"section"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"The final step in model validation is to compare the approximate analytical solution proposed by Kramers and the results of numerical integration. It is worth mentioning that numerical integration remains the recommended method because one does not need to verify the ranges of validity of analytical approximation for every use case.","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"let                                    # hide\n    _, _, f, ax = solvekiln(           # hide\n        L = 10.0,                      # hide\n        D = 1.0,                       # hide\n        Φ = 1.0,                       # hide\n        ω = 1.0,                       # hide\n        β = 3.0,                       # hide\n        γ = 45.0,                      # hide\n        d = 0.001                      # hide\n    )                                  # hide\n                                       # hide\n    ax.yticks = 0.0:4.0:20.0           # hide\n    ylims!(ax, extrema(ax.yticks.val)) # hide\n    f                                  # hide\nend                                    # hide","category":"page"},{"location":"DryGranular/kramers/#Industrial-cases","page":"Kramers' model","title":"Industrial cases","text":"","category":"section"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"The following illustrates a practical use case of the model. Next we scan a parameter space to confirm once again the model suitability as an alternative to analytical engineering estimations as per Peray's notebook.","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"let                                                 # hide\n    ṁ = 33.6                                        # hide\n    ω = 0.85                                        # hide\n    _, _, f, ax, _ = aluminakiln(ṁ, ω, show = true) # hide\n    ax.yticks = 0.0:6.0:30.0                        # hide\n    ylims!(ax, extrema(ax.yticks.val))              # hide\n    f                                               # hide\nend                                                 # hide","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"The following table confirms the expected values as per Peray.","category":"page"},{"location":"DryGranular/kramers/","page":"Kramers' model","title":"Kramers' model","text":"mdtable(scanaluminakiln(), latex=false) # hide","category":"page"},{"location":"Teaching/","page":"-","title":"-","text":"Notes related to my learning and teaching interests in several fields related to scientific computing (mostly applied mathematics and machine learning) and related applications. This home page is the entry point with interesting links and an index to the materials.","category":"page"},{"location":"Teaching/#HPC-related","page":"-","title":"HPC-related","text":"","category":"section"},{"location":"Teaching/","page":"-","title":"-","text":"Top 500: the most powerful computers on Earth\nSpecification benchmarking: check of hardware specification\nSlurm: job management for multi-user systems","category":"page"},{"location":"Teaching/#Software","page":"-","title":"Software","text":"","category":"section"},{"location":"Teaching/","page":"-","title":"-","text":"Basilisk\nOpenFOAM","category":"page"},{"location":"Teaching/#OpenSmoke","page":"-","title":"OpenSmoke++","text":"","category":"section"},{"location":"Teaching/","page":"-","title":"-","text":"OpenSmoke++ is a framework for detailed kinetics modeling of large reacting systems. This paper might be of interest:  Dalili (2020) - modeling of a single droplet evaporation and combustion.","category":"page"},{"location":"Teaching/#DWSIM","page":"-","title":"DWSIM","text":"","category":"section"},{"location":"Teaching/","page":"-","title":"-","text":"Curso (Pr. Felix Monteiro Pereira)\nCurso (Pr. Delano Mendes de Santana)\nYouTube Playlist","category":"page"},{"location":"References/@Nabian2021a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Nabian2021a/","page":"-","title":"-","text":"title: Efficient training of physics-informed neural networks via importance sampling authors: Mohammad Amin Nabian, Rini Jasmine Gladstone, Hadi Meidani year: 2021 URL: https://doi.org/10.48550/arXiv.2104.12325 –-","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Combustion-models","page":"-","title":"Combustion models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Models inheriting from combustionModel base class. If you are reading this section you might also be interested in building the case and testing the combustion with OpenSmoke++ or Cantera.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Type Group Description\nEDC Turbulent Eddy Dissipation Concept turbulent combustion model. Probably the most popular approach for simulation of gas combustion in industrial processes.\nlaminar Laminar \nPaSR Laminar \nFDS Single-step \ninfinitelyFastChemistry Single-step \ndiffusion Single-step \nzoneCombustion Filter Enable the reactions within the specified list of cell-zones and set to zero elsewhere.\nnoCombustion Dummy Dummy combustion model for 'no combustion'.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Cloud-models","page":"-","title":"Cloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"In OpenFOAM, a cloud designate the injection of a secondary phase, generally solid particles or droplets, in a primary continuous carrier phase. The dictionary cloudProperties is identified in tutorials related to the following solver modules:","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"incompressibleDenseParticleFluid\nincompressibleFluid\nmulticomponentFluid\nmultiRegion","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"The default version of the dictionary provided here is not yet documented as of OpenFOAM v11 and does not contain any solver specific configurations, so the users must refer to the tutorial cases for setting up their studies.  A post-processing particle tracking function associated to the dictionary is provided here (untested).","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Currently OpenFOAM implements the following cloud types:","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Cloud Description\nCollidingCloud Adds collisions to clouds.\nMomentumCloud Templated base class for momentum cloud. Adds particle forces and dispersion, injection, patch interaction, stochastic collision, and surface film models to clouds.\nParcelCloud Outermost template for parcel clouds.\nThermoCloud Templated base class for thermodynamic cloud. Adds heat transfer.\nMPPICCloud Adds MPPIC modelling to clouds.\nReactingCloud Templated base class for reacting cloud. Supports single phase with variable composition and phase change modeling.\nReactingMultiphaseCloud Templated base class for multiphase reacting cloud. Supports multiphase composition, devolatilization, and surface reactions.\nSprayCloud Templated base class for spray cloud. Supports atomization and break-up models.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#[CollidingCloud](https://cpp.openfoam.org/v11/classFoam_1_1CollidingCloud.html)-models","page":"-","title":"CollidingCloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Collision-models","page":"-","title":"Collision models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"These inherit from CollisionModel.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Type Description\nNoCollision Dummy class for the none option.\nPairCollision Material properties can be set in detail in sub-dictionary constantProperties. Notice that this is computationally expensive","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#[MomentumCloud](https://cpp.openfoam.org/v11/classFoam_1_1MomentumCloud.html)-models","page":"-","title":"MomentumCloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Dispersion-models","page":"-","title":"Dispersion models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Injection-models","page":"-","title":"Injection models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"These inherit from InjectionModel and implement how particles are injected into a continuous medium. The following table summarizes some of the available models.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Type Description\nconeInjection Inject particles in a number of oriented cones. Particles can be generated from a single point or over a disk. Injection can be made at constant velocity, pressure, or with a flow rate and discharge coefficient.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Patch-interaction-models","page":"-","title":"Patch interaction models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Stochastic-collision-models","page":"-","title":"Stochastic collision models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Surface-film-models","page":"-","title":"Surface film models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#[ThermoCloud](https://cpp.openfoam.org/v11/classFoam_1_1ThermoCloud.html)-models","page":"-","title":"ThermoCloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Heat-transfer-models","page":"-","title":"Heat transfer models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"These inherit from HeatTransferModel. It is possible to provide a Stefan flow approximation to the models by using flag BirdCorrection in the models dictionaries.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Type Description\nNoHeatTransfer Dummy class for the none option.\nRanzMarshall The Ranz-Marshall (Ranz1952)[28] correlation for heat transfer. For a more recent review, see e.g. (Aissa2015a)[29].","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#[MPPICCloud](https://cpp.openfoam.org/v11/classFoam_1_1MPPICCloud.html)-models","page":"-","title":"MPPICCloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Packing-models","page":"-","title":"Packing models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Isotropy-models","page":"-","title":"Isotropy models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Damping-models","page":"-","title":"Damping models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#[ReactingCloud](https://cpp.openfoam.org/v11/classFoam_1_1ReactingCloud.html)-models","page":"-","title":"ReactingCloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Phase-change-models","page":"-","title":"Phase change models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"These inherit from PhaseChangeModel. ","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Type Description\nNoPhaseChange Dummy class for the none option.\nLiquidEvaporation Liquid evaporation model using ideal gas assumption.\nLiquidEvaporationBoil Liquid evaporation model using ideal gas assumption and includes boiling model based on (Zuo2000a)[30].","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#[ReactingMultiphaseCloud](https://cpp.openfoam.org/v11/classFoam_1_1ReactingMultiphaseCloud.html)-models","page":"-","title":"ReactingMultiphaseCloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Devolatilization-models","page":"-","title":"Devolatilization models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Surface-reaction-models","page":"-","title":"Surface reaction models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#[SprayCloud](https://cpp.openfoam.org/v11/classFoam_1_1SprayCloud.html)-models","page":"-","title":"SprayCloud models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Atomization-models","page":"-","title":"Atomization models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Breakup-models","page":"-","title":"Breakup models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"These inherit from BreakupModel for handling particle breakup.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Type Description\nNoBreakup \nPilchErdman \nReitzDiwakar Secondary breakup model adapted to high pressure fuel sprays.\nReitzKHRT Secondary breakup model which uses the Kelvin-Helmholtz instability theory to predict the stripped droplets and the Raleigh-Taylor instability as well.\nSHF \nETAB Enhanced TAB model for non-evaporating fuel sprays.\nTAB ","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/#Composition-models","page":"-","title":"Composition models","text":"","category":"section"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"These inherit from CompositionModel and consists of carrier species (via thermo package), and additional liquids and solids. They are not attached to a type of cloud and each model supports their own cloud types.","category":"page"},{"location":"Teaching/OpenFOAM/OpenFOAM.org/Physical-Models/","page":"-","title":"-","text":"Type Description Support\nNoComposition Dummy class for the none option. \nSingleMixtureFraction Templated parcel multi-phase, multi-component class. ReactingMultiphaseCloud\nSinglePhaseMixture Templated parcel single phase, multi-component class. SprayCloud, ReactingCloud","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/#Models","page":"Models","title":"Models","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/#Introduction","page":"Models","title":"Introduction","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"Most physical phenomena are actually discrete processes (particles); many phenomena such as heat transfer are actual discrete vibrations in materials. Such systems are described by large systems of coupled ordinary differential equations (ODE's) which quickly become intractable and require numerical solution. Continuum approximations, i.e. an averaging process over a representative volume element (RVE), are used to generate a single partial differential equation (PDE) from many such ODE's. This transformation leads to the concept of conservation equations.","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"Say we have a quantity b such as it represents a number  concentration of a given physical quantity. Associated to this quantity we have a flux density vecF through the boundaries of the system and a rate production in volume B_v as summarized in the following table.","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nbeginalign\nb = dfractextvolume                 qquadtextconcentration  \nvecF = dfractextareacdotptexttime qquadtextflux density   \nB_v = dfractextvolumecdotptexttime qquadtextproduction rate\nendalign\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/#General-conservation-equation","page":"Models","title":"General conservation equation","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"The most general statement of conservation of this quantity b writes then:","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nfracddtleft(int_VbdVright) = -int_OmegavecncdotpvecFdA+int_VB_vdV\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"Using divergence theorem this can be converted into:","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nfracddtleft(int_VbdVright) = -int_VnablacdotpvecFdV+int_VB_vdV\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"Assuming an Eulerian reference frame (fixed) to the volume V we can move the time derivative of the above expression inside the left-hand side integral. Rearranging we have","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nint_Vleft(fracpartialbpartialt + nablacdotpvecF - B_vright)dV = 0\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"For a differential volume dV the integrand must be identically zero, from which the PDE arise:","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nfracpartialbpartialt + nablacdotpvecF - B_v = 0\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/#Conservation-at-system-boundaries","page":"Models","title":"Conservation at system boundaries","text":"","category":"section"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"So far we have a PDE describing the conservation inside the RVE of the system being described. To be able to solve such a system we also need to provide a description of its interactions with its surroundings through the specification of boundary conditions.","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"Assume a volume of thickness l enclosing a boundary S splitting domains V_1 and V_2, where discontinuities in properties and all quantities describing the system may be present. We can write the continuity equation for this thick boundary as","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nfracddtleft(int_VbdVright) = -int_OmegavecncdotpvecFdA+int_VB_vdV+int_OmegaB_sdA\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"where the last term has been added to describe the net surface production rate of b. Collapsing the volume over the boundary S by taking the limit where lto0, it should be evident that all volume integrals in the above vanish. The integral form of boundary condition then simplifies to","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nint_OmegavecncdotpvecFdA=int_OmegaB_sdA\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"Defining as positive the normal of S pointing outwards V_1 the integrant on right-hand side can be written as vecnleft(vecF_2-vecF_1right). Applying mean value theorem as if all terms where in the same side of the equation (that vanishes overall) leads to the differential form of boundary condition","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nvecnleft(vecF_2-vecF_1right)=B_s\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"This expression has a very straightforward interpretation. If there is no creation rate B_s at the interface, flux is continuous across interface; otherwise some arbitrary form of discontinuity should arise, whose form would depend on the volume governing equations at each side of S.","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"[!todo] The following is something I need to abstract better, although I fully understand the mathematical origins. The argument that it is formulated in the interface reference frame but viewed from the observer frame bothers me.","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"In the case of moving interfaces, the previous formulation needs to account for the relative motion of the boundary and the associated fictitious fluxes that follow it. In the interface reference frame, a relative flux b_ivecv_s needs to be accounted for, resulting in the modified boundary condition","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nvecnleft(vecF_2-b_2vecv_sright)-vecnleft(vecF_1-b_1vecv_sright)=B_s\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"From this condition it arrises that the magnitude of the normal component of the interface velocity is constrained to the following expression. No matter what physics is governing the movement, this compatibility constraint must be verified.","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"\nv_s = fracvecnleft(vecF_2-vecF_1right)-B_sb_2-b_1\n","category":"page"},{"location":"Teaching/Transport Phenomena/01-Transport-phenomena-foundations/","page":"Models","title":"Models","text":"[!todo] In the growing and shrinking bubble example, Pr. Bazant comes up with a variant of this expression where the fluxes are given by rhov, but I cannot realize how can the velocity v_1neqv_2neqv_s in this case.","category":"page"},{"location":"References/@Shomate1954/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Shomate1954/","page":"-","title":"-","text":"title: A method for evaluating and correlating thermodynamic data authors: C. Howard Shomate year: 1954 –-","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"title: \"Unraveling the design pattern of physics-informed neural networks: Series 01\" authors: Shuai Guo year: 2023 URL: https://towardsdatascience.com/unraveling-the-design-pattern-of-physics-informed-neural-networks-series-01-8190df459527 –-","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"In this post, the author discusses the work by [[@Wu2022a]] in what concerns the adaptive (resampling and refinement) residual point distribution to boost training and accuracy.","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"Approaches:","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"RAD: residual-based adaptive distribution (more expensive)\nRAR-D: residual-based adaptive refinement with distribution (robust)\nBoth are less useful under smooth solutions (activate when required)","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"Key idea:  resample with a probability proportional to residual","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"\np(x) propto fracvarepsilon^k(x)𝔼varepsilon^k(x)+C\n","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"Other references of interest are:","category":"page"},{"location":"References/@Guo2023a/","page":"-","title":"-","text":"[[@Lu2019a]]: residual-based adaptive refinement (RAR-D with high k)\n[[@Nabian2021a]]: importance sampling (RAD with k=1 and c=0)","category":"page"},{"location":"References/@Aparicio1994/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Aparicio1994/","page":"-","title":"-","text":"title: \"Ammonia synthesis kinetics: Surface chemistry, rate expressions, and kinetic analysis\" authors: Luis M. Aparicio, James A. Dumesic year: 1994 –-","category":"page"},{"location":"DryTransport/#DryTransport","page":"DryTransport","title":"DryTransport","text":"","category":"section"},{"location":"DryTransport/","page":"DryTransport","title":"DryTransport","text":"CurrentModule = DryTransport\nDocTestSetup  = quote\n    using DryTransport\nend\nEditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/DryTransport/index.md\"","category":"page"},{"location":"DryTransport/#Documentation","page":"DryTransport","title":"Documentation","text":"","category":"section"},{"location":"DryTransport/","page":"DryTransport","title":"DryTransport","text":"Modules = [ DryTransport ]","category":"page"},{"location":"References/@Guo2023f/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Guo2023f/","page":"-","title":"-","text":"title: \"Unraveling the design pattern of physics-informed neural networks: Series 06\" authors: Shuai Guo year: 2023 URL: https://towardsdatascience.com/unraveling-the-design-pattern-of-physics-informed-neural-networks-part-06-bcb3557199e2 –-","category":"page"},{"location":"References/@Lagaris1997a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Lagaris1997a/","page":"-","title":"-","text":"title: Artificial neural networks for solving ordinary and partial differential equations authors: I. E. Lagaris, A. Likas, D. I. Fotiadis year: 1997 –-","category":"page"},{"location":"References/@Gidaspow1994/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Gidaspow1994/","page":"-","title":"-","text":"title: \"Multiphase flow and fluidization: continuum and kinetic theory descriptions with applications\" authors: Dimitri Gidaspow year: 1994 URL: TODO –-","category":"page"},{"location":"References/@Saario2005a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Saario2005a/","page":"-","title":"-","text":"title: Heavy fuel oil combustion in a cylindrical laboratory furnace: measurements and modeling authors: A. Saario, A. Rebola, P. Coelho, M. Costa, A. Oksanen year: 2005 –-","category":"page"},{"location":"References/@Lu2019a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Lu2019a/","page":"-","title":"-","text":"title: \"DeepXDE: A deep learning library for solving differential equations\" authors: Lu Lu, Xuhui Meng, Zhiping Mao, George E. Karniadakis year: 2019 URL: https://doi.org/10.48550/arXiv.1907.04502 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla8eg-cL7mDKg_muqQ?e=hcIqTb –-","category":"page"},{"location":"DryFlowsheet/#DryFlowsheet","page":"DryFlowsheet","title":"DryFlowsheet","text":"","category":"section"},{"location":"DryFlowsheet/","page":"DryFlowsheet","title":"DryFlowsheet","text":"CurrentModule = DryFlowsheet\nEditURL = \"https://github.com/wallytutor/WallyToolbox.jl/blob/main/docs/src/DryFlowsheet/index.md\"","category":"page"},{"location":"DryFlowsheet/","page":"DryFlowsheet","title":"DryFlowsheet","text":"Modules = [ DryFlowsheet ]","category":"page"},{"location":"DryFlowsheet/#DryFlowsheet.CooledCrushingMill","page":"DryFlowsheet","title":"DryFlowsheet.CooledCrushingMill","text":"Represents a crushing device with cooling system.\n\nModels\n\n:TARGET_COOLANT_TEMP evaluates the heat transfer lost to coolant provided a target final stream temperature given by keyword argument temp_out. Product temperature is updated through an EnergyStream built with energy exchange computed through exchanged_heat, so that numerical value can be slightly different from target value.\n:USING_GLOBAL_HTC makes use of a global heat transfer coefficient to evaluate heat flux across the cooling stream.\n\nAttributes\n\nrawmeal: The input meal applied to crushing process.\nproduct: The output material stream at the end of product pipeline.\ncoolant: The output material stream at the end of cooling pipeline.\npower: The power applied to the crushing process [W]\nloss: The heat exchanged in between product and cooling pipelines [W].\nglobalhtc: Global heat transfer coefficient [W/K].\n\n\n\n\n\n","category":"type"},{"location":"DryFlowsheet/#DryFlowsheet.EnergyStream","page":"DryFlowsheet","title":"DryFlowsheet.EnergyStream","text":"Represents an energy stream.\n\nAttributes\n\nḣ: Energy flow provided by stream [W].\n\n\n\n\n\n","category":"type"},{"location":"DryFlowsheet/#DryFlowsheet.MaterialStream","page":"DryFlowsheet","title":"DryFlowsheet.MaterialStream","text":"Represents a material stream.\n\nAttributes\n\nṁ: Material mass flow rate [kg/s].\nT: Stream temperature [K].\nP: Stream pressure [Pa].\nY: Components mass fractions [-].\npipeline: Materials pipeline associated to Y.\n\n\n\n\n\n","category":"type"},{"location":"DryFlowsheet/#DryFlowsheet.SolidsSeparator","page":"DryFlowsheet","title":"DryFlowsheet.SolidsSeparator","text":"Represents a solids separator with efficiency η.\n\nTo-do's\n\nAdd inverse model to automatically tune efficiency η.\n\nAttributes\n\nη: Solids separation efficiency [-].\nsource: The stream to be separated into solids and others.\nsolids: The output solids stream.\nothers: The output remaining stream.\n\n\n\n\n\n","category":"type"},{"location":"DryFlowsheet/#DryFlowsheet.StreamPipeline","page":"DryFlowsheet","title":"DryFlowsheet.StreamPipeline","text":"Array of materials to include in a stream.\n\n\n\n\n\n","category":"type"},{"location":"DryFlowsheet/#DryFlowsheet.TransportPipeline","page":"DryFlowsheet","title":"DryFlowsheet.TransportPipeline","text":"Represents a pipeline with heat transfer.\n\nModels\n\n:TARGET_EXIT_TEMP evaluates the heat transfer lost to environment provided a target final stream temperature given by keyword argument temp_out. Product temperature is updated through an EnergyStream built with energy exchange computed through exchanged_heat, so that numerical value can be slightly different from target value.\n:USING_GLOBAL_HTC makes use of a global heat transfer coefficient to evaluate heat flux across the pipe.\n\nTo-do's\n\nImplement heat transfer losses through a convective heat transfer coefficient (HTC) computed from a suitable Nusselt number, for use of pipeline in simulation mode.\n\nAttributes\n\nproduct: The output material stream at the end of pipeline.\npower: The heat exchanged in pipeline [W].\n\n\n\n\n\n","category":"type"},{"location":"DryFlowsheet/#DryFlowsheet.cooled_crushing-Tuple{}","page":"DryFlowsheet","title":"DryFlowsheet.cooled_crushing","text":"Manage use of CooledCrushingMill with different models.\n\n\n\n\n\n","category":"method"},{"location":"DryFlowsheet/#DryFlowsheet.enthalpyflowrate","page":"DryFlowsheet","title":"DryFlowsheet.enthalpyflowrate","text":"Enthalpy flow rate of given stream [W].\n\n\n\n\n\n","category":"function"},{"location":"DryFlowsheet/#DryFlowsheet.exchanged_heat-Tuple{MaterialStream, Any}","page":"DryFlowsheet","title":"DryFlowsheet.exchanged_heat","text":"Heat exchanged with stream to match outlet temperature.\n\n\n\n\n\n","category":"method"},{"location":"DryFlowsheet/#DryFlowsheet.transport_pipe-NTuple{4, Any}","page":"DryFlowsheet","title":"DryFlowsheet.transport_pipe","text":"Manage use of TransportPipeline with different models.\n\n\n\n\n\n","category":"method"},{"location":"References/@Mehrer2007/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Mehrer2007/","page":"-","title":"-","text":"title: \"Diffusion in solids : Fundamentals, methods, materials, diffusion-controlled processes\" authors: Helmut Mehrer year: 2007 –-","category":"page"},{"location":"References/@ORourke2010/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@ORourke2010/","page":"-","title":"-","text":"title: An improved collision damping time for MP-PIC calculations of dense particle flows with applications to polydisperse sedimenting beds and colliding particle jets authors: Peter J. O’Rourke, Dale M. Snider year: 2010 URL: https://doi.org/10.1016/j.ces.2010.08.032 –-","category":"page"},{"location":"References/@Cai2021a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Cai2021a/","page":"-","title":"-","text":"title: Physics-informed neural networks for heat transfer problems authors: Shengze Cai, Zhicheng Wang, Sifan Wang, Paris Perdikaris, George Em Karniadakis year: 2021 URL: https://doi.org/10.1115/1.4050542 –-","category":"page"},{"location":"helpers/#Helpers","page":"Helpers","title":"Helpers","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"The core packages of WallyToolbox ecosystem provide shared functionalities and types that are used in several other more specialized packages. This allows for standardization of interfaces, employed quantities, and avoid boilerplate code. This page organizes everything to facilitate the understanding of the end-user. Knowing the base helper packages DryConstants and DryUtilities is key for proper usage of WallyToolbox.","category":"page"},{"location":"helpers/#DryConstants","page":"Helpers","title":"DryConstants","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"CurrentModule = DryConstants","category":"page"},{"location":"helpers/#Physical-constants","page":"Helpers","title":"Physical constants","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryConstants.GAS_CONSTANT\nDryConstants.STEFAN_BOLTZMANN\nDryConstants.STABLE_ELEMENTS_TABLE","category":"page"},{"location":"helpers/#DryConstants.GAS_CONSTANT","page":"Helpers","title":"DryConstants.GAS_CONSTANT","text":"Ideal gas constant [J/(mol.K)].\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#DryConstants.STEFAN_BOLTZMANN","page":"Helpers","title":"DryConstants.STEFAN_BOLTZMANN","text":"Stefan-Boltzmann constant [W/(m².K⁴)].\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#DryConstants.STABLE_ELEMENTS_TABLE","page":"Helpers","title":"DryConstants.STABLE_ELEMENTS_TABLE","text":"Instantiation of stable elements table.\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#Reference-states","page":"Helpers","title":"Reference states","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryConstants.T_REF\nDryConstants.P_REF\nDryConstants.C_REF","category":"page"},{"location":"helpers/#DryConstants.T_REF","page":"Helpers","title":"DryConstants.T_REF","text":"Normal atmospheric temperature [K].\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#DryConstants.P_REF","page":"Helpers","title":"DryConstants.P_REF","text":"Reference atmospheric pressure [Pa].\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#DryConstants.C_REF","page":"Helpers","title":"DryConstants.C_REF","text":"Normal state concentration [mol/m³]. \n\n\n\n\n\n","category":"constant"},{"location":"helpers/#Other-constants","page":"Helpers","title":"Other constants","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryConstants.ZERO_CELSIUS\nDryConstants.ONE_ATM\nDryConstants.M_AIR","category":"page"},{"location":"helpers/#DryConstants.ZERO_CELSIUS","page":"Helpers","title":"DryConstants.ZERO_CELSIUS","text":"Zero degrees Celsius in Kelvin [273.15 K].\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#DryConstants.ONE_ATM","page":"Helpers","title":"DryConstants.ONE_ATM","text":"Atmospheric pressure at sea level [101325.0 Pa].\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#DryConstants.M_AIR","page":"Helpers","title":"DryConstants.M_AIR","text":"Air mean molecular mass [kg/mol].\n\n\n\n\n\n","category":"constant"},{"location":"helpers/#DryElements","page":"Helpers","title":"DryElements","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"CurrentModule = DryElements","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"Modules = [ DryElements ]","category":"page"},{"location":"helpers/#DryElements.ElementData","page":"Helpers","title":"DryElements.ElementData","text":"Represents a chemical element.\n\nAttributes\n\nsymbol: Atomic symbol.\nname: Element name.\natomicmass: Atomic mass [kg/mol].\nstandardenthalpy: Reference state enthalpy [J/kg].\nstandardentropy: Reference state entropy [J/K].\n\nNote\n\natomicmass is provided in g/mol in constructor.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryElements.StableElementsTable","page":"Helpers","title":"DryElements.StableElementsTable","text":"Table-like structure with data for all supported elements.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryElements.atomicmass","page":"Helpers","title":"DryElements.atomicmass","text":"Atomic mass of element [kg/mol]. \n\n\n\n\n\n","category":"function"},{"location":"helpers/#DryElements.element-Tuple{String}","page":"Helpers","title":"DryElements.element","text":"Retrieve an element by name. \n\n\n\n\n\n","category":"method"},{"location":"helpers/#DryUtilities","page":"Helpers","title":"DryUtilities","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"CurrentModule = DryUtilities\nDocTestSetup  = quote\n    using DryUtilities\n    using DryUtilities: heaviside, interval, makestepwise1d\n    using DryUtilities: closestpowerofx, axesunitscaler\n    using DryUtilities: maxrelativechange, maxabsolutechange\nend","category":"page"},{"location":"helpers/#Haskell-like-array-slicing","page":"Helpers","title":"Haskell-like array slicing","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"Those who know Haskell probably started learning it by manipulating lists with head and tail. Those functionalities are not available in Julia by default and array slicing - with an ugly syntax - is required. Since this is done often in the fields of application of DryTooling, both head and tail together with a body functions are available in its core. They are simple wrapers over the @view macro and work with both iterable types and arrays. The following snippet illustrates their usage.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> v = collect(1:4);\n\njulia> head(v) == [1; 2; 3]\ntrue\n\njulia> tail(v) == [2; 3; 4]\ntrue\n\njulia> body(v) == [2; 3]\ntrue","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"More examples are provided in the following documentation ahead of each of the functions.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> head(1:4)\n1:3\n\njulia> head([1, 2, 3, 4])\n3-element view(::Vector{Int64}, 1:3) with eltype Int64:\n 1\n 2\n 3\n","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.head","category":"page"},{"location":"helpers/#DryUtilities.head","page":"Helpers","title":"DryUtilities.head","text":"head(z)\n\nAccess view of array head. See also tail and body.\n\n\n\n\n\n","category":"function"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> tail([1, 2, 3, 4])\n3-element view(::Vector{Int64}, 2:4) with eltype Int64:\n 2\n 3\n 4\njulia> tail(1:4)\n2:4","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.tail","category":"page"},{"location":"helpers/#DryUtilities.tail","page":"Helpers","title":"DryUtilities.tail","text":"tail(z)\n\nAccess view of array tail. See also head and body.\n\n\n\n\n\n","category":"function"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> body([1, 2, 3, 4])\n2-element view(::Vector{Int64}, 2:3) with eltype Int64:\n 2\n 3\njulia> body(1:4)\n2:3","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.body","category":"page"},{"location":"helpers/#DryUtilities.body","page":"Helpers","title":"DryUtilities.body","text":"body(z)\n\nAccess view of array body. See also  head and tail.\n\n\n\n\n\n","category":"function"},{"location":"helpers/#Handling-of-discontinuous-functions","page":"Helpers","title":"Handling of discontinuous functions","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"Discontinuous functions are all over in real world applications. Whether they handle discrete signals sent to controllers or represent a material property change in the solution domain of a heat transfer simulation, they are often represented by a single or a composition of Heaviside step functions. Again, because its implementation is pretty simple and optimization routines require a differentiable form of this function, DryUtilities implements heaviside and interval as proposed in this StackOverflow answer.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> heaviside(-1) == 0\ntrue\n\njulia> heaviside(-1.0) == 0.0\ntrue\n\njulia> heaviside(0.0) == 0.5\ntrue\n\njulia> heaviside(1.0) == 1.0\ntrue\n\njulia> interval(10; a = 0, b = 10) == 0.5\ntrue","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"We see below that heaviside also works on ranges","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> heaviside(-2:2)\n5-element Vector{Float64}:\n 0.0\n 0.0\n 0.5\n 1.0\n 1.0","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.heaviside","category":"page"},{"location":"helpers/#DryUtilities.heaviside","page":"Helpers","title":"DryUtilities.heaviside","text":"heaviside(t)\n\nProvides a Heaviside function compatible with automatic differentiation. This is a requirement for conceiving, e.g., model predictive controls with discontinuous functions under ModelingToolkit.\n\n\n\n\n\n","category":"function"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"By implementation inheritance that is also the case for interval:","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> interval(0:6; a = 2, b = 5)\n7-element Vector{Float64}:\n 0.0\n 0.0\n 0.5\n 1.0\n 1.0\n 0.5\n 0.0","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.interval","category":"page"},{"location":"helpers/#DryUtilities.interval","page":"Helpers","title":"DryUtilities.interval","text":"interval(x; a=-Inf, b=Inf)\n\nReturns 1 if x  (a b), 1/2 for x = a  x = b, or 0.\n\n\n\n\n\n","category":"function"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"As it is the case for representation of specific heats using NASA7/NASA9 or Shomate polynomials, functions defined by parts with an specific change point are also required in physical modeling. To this end, a stepwise function can be established with makestepwise1d. If keyword differentialble = true, then the function makes use of the above interval and remains compatible with ModelingToolkit, for instance.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> f = makestepwise1d(x->x, x->x^2, 1.0; differentiable = true);\n\njulia> f(0:0.2:2.0)\n11-element Vector{Float64}:\n 0.0\n 0.2\n 0.4\n 0.6\n 0.8\n 1.0\n 1.44\n 1.9599999999999997\n 2.5600000000000005\n 3.24\n 4.0\n\njulia> using ModelingToolkit\n\njulia> @variables x\n1-element Vector{Num}:\n x\n\njulia> f(x); # Output is too long, try by yourself.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.makestepwise1d","category":"page"},{"location":"helpers/#DryUtilities.makestepwise1d","page":"Helpers","title":"DryUtilities.makestepwise1d","text":"makestepwise1d(lo, hi, xc)\n\nCreates an univariate function that is composed of two parts, the first evaluated before a critical domain point xc, and the second above that value. This is often required, for instance, for the evaluation of NASA polynomials for thermodynamic properties. If differentiable, then the returned function is compatible with symbolic argument as required when using package ModelingToolkit, etc.\n\n\n\n\n\n","category":"function"},{"location":"helpers/#Rounding-numbers-and-automatic-axes","page":"Helpers","title":"Rounding numbers and automatic axes","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"danger: Danger\nThis section documents functions that are used in a very unstable context.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"Simple rounding is not enough. Getting values that are rounded close to a power of a given number and rounded to floor or ceil is often the case. This is standardized in DryTooling through closestpowerofx:","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> closestpowerofx(10)\n10\n\njulia> closestpowerofx(11)\n20\n\njulia> closestpowerofx(11, roundf = floor)\n10\n\njulia> closestpowerofx(11, x = 5, roundf = floor)\n10\n\njulia> closestpowerofx(12.0; x = 10)\n20\n\njulia> closestpowerofx(12.0; x = 10, roundf = floor)\n10\n\njulia> closestpowerofx(12.0; x = 10, roundf = round)\n10","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.closestpowerofx","category":"page"},{"location":"helpers/#DryUtilities.closestpowerofx","page":"Helpers","title":"DryUtilities.closestpowerofx","text":"closestpowerofx(\n    v::Number;\n    x::Number = 10,\n    roundf::Function = ceil\n)::Int64\n\nCompute the integer power of x closest to v using roundf as rouding method. This might be useful for automatic setting more reasonable limits to plot axis or similar applications. Changing the rouding method through roundf is also possible.\n\n\n\n\n\n","category":"function"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"Below we illustrate the usage of axesunitscaler.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"NOTE: this function is not yet stable. In the future it will instead return labels using symbols like k, M, G, etc., for the units through a flag provided by the user.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"julia> axesunitscaler(1)\n(\"\", 1)\n\njulia> axesunitscaler(1000)\n(\"[×1000]\", 1000)\n\njulia> axesunitscaler(1000000)\n(\"[×1000000]\", 1000000)","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.axesunitscaler","category":"page"},{"location":"helpers/#DryUtilities.axesunitscaler","page":"Helpers","title":"DryUtilities.axesunitscaler","text":"axesunitscaler(x::Number)::Tuple{String, Int64}\n\nFind scaling factor for multiples of 1000 units. Together with closestpowerofx this can be used to produce better automatic plot axes limits. The returned values provide the string for modifying the axis label and the associated scaling factor.\n\n\n\n\n\n","category":"function"},{"location":"helpers/#Computation-of-changes-and-residuals","page":"Helpers","title":"Computation of changes and residuals","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"danger: Danger\nThis section documents functions that are used in a very unstable context.","category":"page"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.maxabsolutechange\nDryUtilities.maxrelativechange","category":"page"},{"location":"helpers/#DryUtilities.maxabsolutechange","page":"Helpers","title":"DryUtilities.maxabsolutechange","text":"Maximum absolute change in a solution array.\n\n\n\n\n\n","category":"function"},{"location":"helpers/#DryUtilities.maxrelativechange","page":"Helpers","title":"DryUtilities.maxrelativechange","text":"Maximum relative change in a solution array.\n\n\n\n\n\n","category":"function"},{"location":"helpers/#Unit-conversion","page":"Helpers","title":"Unit conversion","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.nm3_h_to_kg_h\nDryUtilities.kg_h_to_nm3_h","category":"page"},{"location":"helpers/#DryUtilities.nm3_h_to_kg_h","page":"Helpers","title":"DryUtilities.nm3_h_to_kg_h","text":"Convert [Nm³/h] to [kg/h].\n\n\n\n\n\n","category":"function"},{"location":"helpers/#DryUtilities.kg_h_to_nm3_h","page":"Helpers","title":"DryUtilities.kg_h_to_nm3_h","text":"Convert [kg/h] to [Nm³/h].\n\n\n\n\n\n","category":"function"},{"location":"helpers/#Others","page":"Helpers","title":"Others","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryUtilities.defaultvalue","category":"page"},{"location":"helpers/#DryUtilities.defaultvalue","page":"Helpers","title":"DryUtilities.defaultvalue","text":"Syntax sugar for handling a possibly nothing value.\n\n\n\n\n\n","category":"function"},{"location":"helpers/#Abstract-types","page":"Helpers","title":"Abstract types","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"CurrentModule = DryAbstract","category":"page"},{"location":"helpers/#Fixed-state-materials","page":"Helpers","title":"Fixed state materials","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryAbstract.AbstractMaterial\nDryAbstract.AbstractSolidMaterial\nDryAbstract.AbstractLiquidMaterial\nDryAbstract.AbstractGasMaterial\nDryAbstract.AbstractSolidMineralPhase","category":"page"},{"location":"helpers/#DryAbstract.AbstractMaterial","page":"Helpers","title":"DryAbstract.AbstractMaterial","text":"Base type for any material substance.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractSolidMaterial","page":"Helpers","title":"DryAbstract.AbstractSolidMaterial","text":"Base type for solid materials.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractLiquidMaterial","page":"Helpers","title":"DryAbstract.AbstractLiquidMaterial","text":"Base type for liquid materials.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractGasMaterial","page":"Helpers","title":"DryAbstract.AbstractGasMaterial","text":"Base type for gas materials.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractSolidMineralPhase","page":"Helpers","title":"DryAbstract.AbstractSolidMineralPhase","text":"Base type for any mineral material.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#Problem-solving-and-physical-models","page":"Helpers","title":"Problem solving and physical models","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryAbstract.AbstractMatrixProblem\nDryAbstract.AbstractIterativeSolver\nDryAbstract.AbstractSolutionStorage\nDryAbstract.AbstractPhysicalModel","category":"page"},{"location":"helpers/#DryAbstract.AbstractMatrixProblem","page":"Helpers","title":"DryAbstract.AbstractMatrixProblem","text":"Base type for linear algebra problems.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractIterativeSolver","page":"Helpers","title":"DryAbstract.AbstractIterativeSolver","text":"Base type for (nonlinear) iterative solvers.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractSolutionStorage","page":"Helpers","title":"DryAbstract.AbstractSolutionStorage","text":"Base type for storing simulation solution.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractPhysicalModel","page":"Helpers","title":"DryAbstract.AbstractPhysicalModel","text":"Base type for physical models.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#Transport,-thermodynamics,-and-kinetics","page":"Helpers","title":"Transport, thermodynamics, and kinetics","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryAbstract.AbstractTransportModel\nDryAbstract.AbstractSolidTransport\nDryAbstract.AbstractGasThermo\nDryAbstract.AbstractSolidThermo\nDryAbstract.AbstractMixtureSubstance\nDryAbstract.AbstractMixturePhase\nDryAbstract.AbstractKineticsMechanism","category":"page"},{"location":"helpers/#DryAbstract.AbstractTransportModel","page":"Helpers","title":"DryAbstract.AbstractTransportModel","text":"Base type for transport models.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractSolidTransport","page":"Helpers","title":"DryAbstract.AbstractSolidTransport","text":"Base type for transport models.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractGasThermo","page":"Helpers","title":"DryAbstract.AbstractGasThermo","text":"Base type for thermodynamic models.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractSolidThermo","page":"Helpers","title":"DryAbstract.AbstractSolidThermo","text":"Base type for thermodynamic models.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractMixtureSubstance","page":"Helpers","title":"DryAbstract.AbstractMixtureSubstance","text":"Base type for simplified mixture substances.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractMixturePhase","page":"Helpers","title":"DryAbstract.AbstractMixturePhase","text":"Base type for simplified mixture phases.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractKineticsMechanism","page":"Helpers","title":"DryAbstract.AbstractKineticsMechanism","text":"Base type for coded kinetics mechanisms.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#Finite-volume-method-and-relatives","page":"Helpers","title":"Finite volume method and relatives","text":"","category":"section"},{"location":"helpers/","page":"Helpers","title":"Helpers","text":"DryAbstract.AbstractDiffusionModel1D\nDryAbstract.AbstractGrid1D","category":"page"},{"location":"helpers/#DryAbstract.AbstractDiffusionModel1D","page":"Helpers","title":"DryAbstract.AbstractDiffusionModel1D","text":"Base type for diffusion (heat, species, ...) models.\n\n\n\n\n\n","category":"type"},{"location":"helpers/#DryAbstract.AbstractGrid1D","page":"Helpers","title":"DryAbstract.AbstractGrid1D","text":"Base type of one-dimensional grids.\n\n\n\n\n\n","category":"type"},{"location":"References/@Lu2021a/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Lu2021a/","page":"-","title":"-","text":"title: Physics-informed neural networks with hard constraints for inverse design authors: Lu Lu, Raphael Pestourie, Wenjie Yao, Zhicheng Wang, Francesc Verdugo, Steven G. Johnson year: 2021 URL: https://doi.org/10.48550/arXiv.2102.04626 –-","category":"page"},{"location":"Teaching/Ansys Fluent/UDF/#General-purpose","page":"-","title":"General purpose","text":"","category":"section"},{"location":"Teaching/Ansys Fluent/UDF/","page":"-","title":"-","text":"Macro Notes\nData_Valid_P Test if parameters required by UDF have been initialized. It is a good practice to use this macro on top of UDF's to avoid crashes.\nMessage Displays a message, to be used from host.\nError Display and throw an error message. Compiled only.","category":"page"},{"location":"Teaching/Ansys Fluent/UDF/#Macro-parallelization","page":"-","title":"Macro parallelization","text":"","category":"section"},{"location":"Teaching/Ansys Fluent/UDF/","page":"-","title":"-","text":"Macro Notes\nPRINCIPAL_FACE_P When looping across faces in a thread using begin_f_loop (or another equivalent macro) in a parallel setting, we might access elements that actually belong to other nodes (because of how MPI works). This macro allows us to check the current face is part of the chunk belonging to current node, what allows us to avoid computing a quantity multiple times, leading to wrong results. Compiled only.\nRP_HOST Used in #if directives to tell code must be evaluated only in host.\nRP_NODE Used in #if directives to tell code must be evaluated only in nodes.\nPRF_GRSUM1 Performs aggregation of real R values through sum SUM1. This function is called in nodes and there are other cousins for different aggregations.\nnode_to_host_{type}_{n} Pass n values of type from node to host. It is called after, e.g. aggregations such as PRF_GRSUM1 are used in node. There is also an equivalent host_to_node_{type}_{n}.","category":"page"},{"location":"Teaching/OpenFOAM/#OpenFOAM-11","page":"OpenFOAM","title":"OpenFOAM 11","text":"","category":"section"},{"location":"Teaching/OpenFOAM/#Table-of-Contents","page":"OpenFOAM","title":"Table of Contents","text":"","category":"section"},{"location":"Teaching/OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"Solver Modules\nPhysical Models\nDrag Models","category":"page"},{"location":"Teaching/OpenFOAM/#Tips-and-reminders","page":"OpenFOAM","title":"Tips and reminders","text":"","category":"section"},{"location":"Teaching/OpenFOAM/#General-topics","page":"OpenFOAM","title":"General topics","text":"","category":"section"},{"location":"Teaching/OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"When converting to OpenFOAM v11 viscosityModel instead of transportModel in physicalProperties files. Currently setting transportModel Newtonian does not raise any errors.\nWhen working with a 2-D extruded mesh (1-cell in thickness), the mass flow rate must be scaled by the width of the domain to keep consistency with what would be expected in 3-D.","category":"page"},{"location":"Teaching/OpenFOAM/#Granular-flows","page":"OpenFOAM","title":"Granular flows","text":"","category":"section"},{"location":"Teaching/OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"It is a good idea to set SOI to a value higher than zero (dimensioned to match the global time-scale of the problem) so that flow is fully developed before particles arrive.\nIf it makes sense to do so, make parameter U0 in the entries of injectionModels of cloudProperties identical to the velocity specified for the corresponding path. In most cases this applies, except when modeling a particle jet that originates from another source outside of the computational domain.","category":"page"},{"location":"Teaching/OpenFOAM/#Troubleshooting","page":"OpenFOAM","title":"Troubleshooting","text":"","category":"section"},{"location":"Teaching/OpenFOAM/","page":"OpenFOAM","title":"OpenFOAM","text":"Wedge patch '<name>' is not planar.: in some cases a warning regarding the precision of face normal vectors might be issued in axisymmetric cases. As it has been reported by Gerhard Holzinger, when generating the mesh the value of writePrecision in controlDict might be the cause of this problem. Increasing its value should be enough for solving the problem, and if you want to save disk space with unnecessary precision, it can be decreased back for problem solution. Notice that if running in parallel, renumberMesh and decomposePar must be run before falling back to the lower write precision.","category":"page"},{"location":"References/@Raissi2017/","page":"-","title":"-","text":"","category":"page"},{"location":"References/@Raissi2017/","page":"-","title":"-","text":"title: \"Physics informed deep learning (part I): Data-driven solutions of nonlinear partial differential equations\" authors: Maziar Raissi, Paris Perdikaris, George Em Karniadakis year: 2017 DOI: https://doi.org/10.48550/arXiv.1711.10561 Drive: https://1drv.ms/b/s!Ar4x-UlrYAiZla5YwhmbwapFcSs-8A?e=XiDCyF –-","category":"page"}]
}
